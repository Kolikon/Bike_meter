
miernik.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c0c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000c84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .eeprom       00000004  00810000  00810000  00000c80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000030  00000000  00000000  00000c84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000cb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000cf0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dc8  00000000  00000000  00000dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000068d  00000000  00000000  00001b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000838  00000000  00000000  00002225  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  00002a60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040e  00000000  00000000  00002afc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000841  00000000  00000000  00002f0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000374b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1d c0       	rjmp	.+58     	; 0x3c <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>
  26:	1b c0       	rjmp	.+54     	; 0x5e <cyfra+0x10>
  28:	1d c0       	rjmp	.+58     	; 0x64 <cyfra+0x16>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <cyfra+0x1c>
  2c:	21 c0       	rjmp	.+66     	; 0x70 <cyfra+0x22>
  2e:	23 c0       	rjmp	.+70     	; 0x76 <cyfra+0x28>
  30:	25 c0       	rjmp	.+74     	; 0x7c <cyfra+0x2e>
  32:	27 c0       	rjmp	.+78     	; 0x82 <cyfra+0x34>
  34:	29 c0       	rjmp	.+82     	; 0x88 <cyfra+0x3a>
  36:	2b c0       	rjmp	.+86     	; 0x8e <cyfra+0x40>
  38:	2d c0       	rjmp	.+90     	; 0x94 <cyfra+0x46>
  3a:	2f c0       	rjmp	.+94     	; 0x9a <cyfra+0x4c>

0000003c <__ctors_end>:
  3c:	11 24       	eor	r1, r1
  3e:	1f be       	out	0x3f, r1	; 63
  40:	cf e5       	ldi	r28, 0x5F	; 95
  42:	d4 e0       	ldi	r29, 0x04	; 4
  44:	de bf       	out	0x3e, r29	; 62
  46:	cd bf       	out	0x3d, r28	; 61
  48:	8a d0       	rcall	.+276    	; 0x15e <main>
  4a:	de c5       	rjmp	.+3004   	; 0xc08 <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <cyfra>:
#include "util/delay.h"
#include <avr/eeprom.h>

void cyfra(unsigned char k)
{
	switch(k)
  4e:	90 e0       	ldi	r25, 0x00	; 0
  50:	8b 30       	cpi	r24, 0x0B	; 11
  52:	91 05       	cpc	r25, r1
  54:	28 f5       	brcc	.+74     	; 0xa0 <cyfra+0x52>
  56:	fc 01       	movw	r30, r24
  58:	ed 5e       	subi	r30, 0xED	; 237
  5a:	ff 4f       	sbci	r31, 0xFF	; 255
  5c:	09 94       	ijmp
	{
		case 0:
		{
			PORTD= 0b00000101;
  5e:	85 e0       	ldi	r24, 0x05	; 5
  60:	82 bb       	out	0x12, r24	; 18
			break;
  62:	08 95       	ret
		}
		case 1:
		{
			PORTD= 0b11011101;
  64:	8d ed       	ldi	r24, 0xDD	; 221
  66:	82 bb       	out	0x12, r24	; 18
			break;
  68:	08 95       	ret
		}
		case 2:
		{
			PORTD= 0b01000110;
  6a:	86 e4       	ldi	r24, 0x46	; 70
  6c:	82 bb       	out	0x12, r24	; 18
			break;
  6e:	08 95       	ret
		}
		case 3:
		{
			PORTD= 0b01010100;
  70:	84 e5       	ldi	r24, 0x54	; 84
  72:	82 bb       	out	0x12, r24	; 18
			break;
  74:	08 95       	ret
		}
		case 4:
		{
			PORTD= 0b10011100;
  76:	8c e9       	ldi	r24, 0x9C	; 156
  78:	82 bb       	out	0x12, r24	; 18
			break;
  7a:	08 95       	ret
		}
		case 5:
		{
			PORTD= 0b00110100;
  7c:	84 e3       	ldi	r24, 0x34	; 52
  7e:	82 bb       	out	0x12, r24	; 18
			break;
  80:	08 95       	ret
		}
		case 6:
		{
			PORTD= 0b00100100;
  82:	84 e2       	ldi	r24, 0x24	; 36
  84:	82 bb       	out	0x12, r24	; 18
			break;
  86:	08 95       	ret
		}
		case 7:
		{
			PORTD= 0b01011101;
  88:	8d e5       	ldi	r24, 0x5D	; 93
  8a:	82 bb       	out	0x12, r24	; 18
			break;
  8c:	08 95       	ret
		}
		case 8:
		{
			PORTD= 0b00000100;
  8e:	84 e0       	ldi	r24, 0x04	; 4
  90:	82 bb       	out	0x12, r24	; 18
			break;
  92:	08 95       	ret
		}
		case 9:
		{
			PORTD= 0b00010100;
  94:	84 e1       	ldi	r24, 0x14	; 20
  96:	82 bb       	out	0x12, r24	; 18
			break;
  98:	08 95       	ret
		}
		case 10:
		{
			PORTD= 0b11111011;
  9a:	8b ef       	ldi	r24, 0xFB	; 251
  9c:	82 bb       	out	0x12, r24	; 18
			break;
  9e:	08 95       	ret
		}
		default:
		{
			PORTD= 0xff;
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	82 bb       	out	0x12, r24	; 18
  a4:	08 95       	ret

000000a6 <numercyfry>:
	}
}

void numercyfry(unsigned char k)
{
	switch(k)
  a6:	82 30       	cpi	r24, 0x02	; 2
  a8:	61 f0       	breq	.+24     	; 0xc2 <numercyfry+0x1c>
  aa:	83 30       	cpi	r24, 0x03	; 3
  ac:	91 f0       	breq	.+36     	; 0xd2 <numercyfry+0x2c>
  ae:	81 30       	cpi	r24, 0x01	; 1
  b0:	c1 f4       	brne	.+48     	; 0xe2 <numercyfry+0x3c>
	{
		case 1:
		{
			if((PINC & 32) == 0)
  b2:	9d 99       	sbic	0x13, 5	; 19
  b4:	03 c0       	rjmp	.+6      	; 0xbc <numercyfry+0x16>
			{
				PORTB= 0b00001001;
  b6:	89 e0       	ldi	r24, 0x09	; 9
  b8:	88 bb       	out	0x18, r24	; 24
  ba:	08 95       	ret
			}
			else
			{
				PORTB= 0b00000001;;
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	88 bb       	out	0x18, r24	; 24
  c0:	08 95       	ret
			}
			break;
		}
		case 2:
		{
			if((PINC & 32) == 0)
  c2:	9d 99       	sbic	0x13, 5	; 19
  c4:	03 c0       	rjmp	.+6      	; 0xcc <numercyfry+0x26>
			{
				PORTB= 0b00001010;
  c6:	8a e0       	ldi	r24, 0x0A	; 10
  c8:	88 bb       	out	0x18, r24	; 24
  ca:	08 95       	ret
			}
			else
			{
				PORTB= 0b00000010;;
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	88 bb       	out	0x18, r24	; 24
  d0:	08 95       	ret
			}
			break;
		}
		case 3:
		{
			if((PINC & 32) == 0)
  d2:	9d 99       	sbic	0x13, 5	; 19
  d4:	03 c0       	rjmp	.+6      	; 0xdc <numercyfry+0x36>
			{
				PORTB= 0b00001100;
  d6:	8c e0       	ldi	r24, 0x0C	; 12
  d8:	88 bb       	out	0x18, r24	; 24
  da:	08 95       	ret
			}
			else
			{
				PORTB= 0b00000100;;
  dc:	84 e0       	ldi	r24, 0x04	; 4
  de:	88 bb       	out	0x18, r24	; 24
  e0:	08 95       	ret
			}
			break;
		}
		default:
		{
			if((PINC & 32) == 0)
  e2:	9d 99       	sbic	0x13, 5	; 19
  e4:	03 c0       	rjmp	.+6      	; 0xec <numercyfry+0x46>
			{
				PORTB= 0b00001000;
  e6:	88 e0       	ldi	r24, 0x08	; 8
  e8:	88 bb       	out	0x18, r24	; 24
  ea:	08 95       	ret
			}
			else
			{
				PORTB= 0b00000000;;
  ec:	18 ba       	out	0x18, r1	; 24
  ee:	08 95       	ret

000000f0 <my_delay>:
	}
}

void my_delay(int t)
{
	while(t > 0)
  f0:	18 16       	cp	r1, r24
  f2:	19 06       	cpc	r1, r25
  f4:	34 f4       	brge	.+12     	; 0x102 <my_delay+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f6:	22 e0       	ldi	r18, 0x02	; 2
  f8:	2a 95       	dec	r18
  fa:	f1 f7       	brne	.-4      	; 0xf8 <my_delay+0x8>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <my_delay+0xe>
	{
		_delay_us(1);
		t--;
  fe:	01 97       	sbiw	r24, 0x01	; 1
	}
}

void my_delay(int t)
{
	while(t > 0)
 100:	d1 f7       	brne	.-12     	; 0xf6 <my_delay+0x6>
 102:	08 95       	ret

00000104 <liczba>:
		t--;
	}
}

void liczba(int k, int dot, int micros)
{
 104:	cf 92       	push	r12
 106:	df 92       	push	r13
 108:	ef 92       	push	r14
 10a:	ff 92       	push	r15
 10c:	0f 93       	push	r16
 10e:	1f 93       	push	r17
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	06 2f       	mov	r16, r22
 116:	7a 01       	movw	r14, r20
 118:	c1 e0       	ldi	r28, 0x01	; 1
	unsigned char cyf;
	for(int l= 1; l < 4; l++)
	{
		cyf= k% 10;
		cyfra(cyf);
 11a:	0f 2e       	mov	r0, r31
 11c:	fa e0       	ldi	r31, 0x0A	; 10
 11e:	cf 2e       	mov	r12, r31
 120:	d1 2c       	mov	r13, r1
 122:	f0 2d       	mov	r31, r0
 124:	b6 01       	movw	r22, r12
 126:	1f d5       	rcall	.+2622   	; 0xb66 <__divmodhi4>
 128:	16 2f       	mov	r17, r22
 12a:	d7 2f       	mov	r29, r23
 12c:	90 df       	rcall	.-224    	; 0x4e <cyfra>
		numercyfry(l);
 12e:	8c 2f       	mov	r24, r28
 130:	ba df       	rcall	.-140    	; 0xa6 <numercyfry>
		my_delay(micros);
 132:	c7 01       	movw	r24, r14
 134:	dd df       	rcall	.-70     	; 0xf0 <my_delay>
		k= k/10;
 136:	81 2f       	mov	r24, r17
 138:	9d 2f       	mov	r25, r29
 13a:	cf 5f       	subi	r28, 0xFF	; 255
}

void liczba(int k, int dot, int micros)
{
	unsigned char cyf;
	for(int l= 1; l < 4; l++)
 13c:	c4 30       	cpi	r28, 0x04	; 4
 13e:	91 f7       	brne	.-28     	; 0x124 <liczba+0x20>
		cyfra(cyf);
		numercyfry(l);
		my_delay(micros);
		k= k/10;
	}
	cyfra(10);
 140:	8a e0       	ldi	r24, 0x0A	; 10
 142:	85 df       	rcall	.-246    	; 0x4e <cyfra>
	numercyfry(dot);
 144:	80 2f       	mov	r24, r16
 146:	af df       	rcall	.-162    	; 0xa6 <numercyfry>
	my_delay(micros);
 148:	c7 01       	movw	r24, r14
 14a:	d2 df       	rcall	.-92     	; 0xf0 <my_delay>
}
 14c:	df 91       	pop	r29
 14e:	cf 91       	pop	r28
 150:	1f 91       	pop	r17
 152:	0f 91       	pop	r16
 154:	ff 90       	pop	r15
 156:	ef 90       	pop	r14
 158:	df 90       	pop	r13
 15a:	cf 90       	pop	r12
 15c:	08 95       	ret

0000015e <main>:

float przebieg_ee EEMEM;

int main()
{
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	cd b7       	in	r28, 0x3d	; 61
 164:	de b7       	in	r29, 0x3e	; 62
 166:	6f 97       	sbiw	r28, 0x1f	; 31
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	f8 94       	cli
 16c:	de bf       	out	0x3e, r29	; 62
 16e:	0f be       	out	0x3f, r0	; 63
 170:	cd bf       	out	0x3d, r28	; 61
	DDRB= 0b00001111;
 172:	8f e0       	ldi	r24, 0x0F	; 15
 174:	87 bb       	out	0x17, r24	; 23
	DDRD= 0b11111111;
 176:	8f ef       	ldi	r24, 0xFF	; 255
 178:	81 bb       	out	0x11, r24	; 17
	DDRC= 0b00000000;
 17a:	14 ba       	out	0x14, r1	; 20
	PORTC= 0b00000111;
 17c:	87 e0       	ldi	r24, 0x07	; 7
 17e:	85 bb       	out	0x15, r24	; 21
	
	TCCR1B= 0b00000100; // prescaler = 256
 180:	84 e0       	ldi	r24, 0x04	; 4
 182:	8e bd       	out	0x2e, r24	; 46
	TCNT1= 0;
 184:	1d bc       	out	0x2d, r1	; 45
 186:	1c bc       	out	0x2c, r1	; 44
	TIFR= 1 << TOV1;
 188:	88 bf       	out	0x38, r24	; 56
	int klatka;
	
	float predkosc= 0, srednia_predkosc= 0, rpm= 0, mnoznik= 3.6;
	float czas, caly_czas= 0;
	
	przebieg= eeprom_read_float(&przebieg_ee);
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	12 d5       	rcall	.+2596   	; 0xbb4 <eeprom_read_dword>
 190:	6d 87       	std	Y+13, r22	; 0x0d
 192:	7e 87       	std	Y+14, r23	; 0x0e
 194:	8f 87       	std	Y+15, r24	; 0x0f
 196:	98 8b       	std	Y+16, r25	; 0x10
	unsigned char poprzedni= 0, teraz= 0, poprzedni_guzik0= 0, teraz_guzik0= 0, poprzedni_guzik1= 0, teraz_guzik1= 0, poprzedni_guzik2= 0, teraz_guzik2= 0, tryb= 0;
	float dystans= 0, przebieg;
	int klatka;
	
	float predkosc= 0, srednia_predkosc= 0, rpm= 0, mnoznik= 3.6;
	float czas, caly_czas= 0;
 198:	1e 8a       	std	Y+22, r1	; 0x16
 19a:	1f 8a       	std	Y+23, r1	; 0x17
 19c:	18 8e       	std	Y+24, r1	; 0x18
 19e:	19 8e       	std	Y+25, r1	; 0x19
	const float obwod= 2.18; // [m]
	unsigned char poprzedni= 0, teraz= 0, poprzedni_guzik0= 0, teraz_guzik0= 0, poprzedni_guzik1= 0, teraz_guzik1= 0, poprzedni_guzik2= 0, teraz_guzik2= 0, tryb= 0;
	float dystans= 0, przebieg;
	int klatka;
	
	float predkosc= 0, srednia_predkosc= 0, rpm= 0, mnoznik= 3.6;
 1a0:	26 e6       	ldi	r18, 0x66	; 102
 1a2:	2a 8b       	std	Y+18, r18	; 0x12
 1a4:	86 e6       	ldi	r24, 0x66	; 102
 1a6:	8b 8b       	std	Y+19, r24	; 0x13
 1a8:	96 e6       	ldi	r25, 0x66	; 102
 1aa:	9c 8b       	std	Y+20, r25	; 0x14
 1ac:	20 e4       	ldi	r18, 0x40	; 64
 1ae:	2d 8b       	std	Y+21, r18	; 0x15
 1b0:	1d 82       	std	Y+5, r1	; 0x05
 1b2:	1e 82       	std	Y+6, r1	; 0x06
 1b4:	1f 82       	std	Y+7, r1	; 0x07
 1b6:	18 86       	std	Y+8, r1	; 0x08
 1b8:	1a 8e       	std	Y+26, r1	; 0x1a
 1ba:	1b 8e       	std	Y+27, r1	; 0x1b
 1bc:	1c 8e       	std	Y+28, r1	; 0x1c
 1be:	1d 8e       	std	Y+29, r1	; 0x1d
 1c0:	19 82       	std	Y+1, r1	; 0x01
 1c2:	1a 82       	std	Y+2, r1	; 0x02
 1c4:	1b 82       	std	Y+3, r1	; 0x03
 1c6:	1c 82       	std	Y+4, r1	; 0x04
	TCNT1= 0;
	TIFR= 1 << TOV1;
	
	const float obwod= 2.18; // [m]
	unsigned char poprzedni= 0, teraz= 0, poprzedni_guzik0= 0, teraz_guzik0= 0, poprzedni_guzik1= 0, teraz_guzik1= 0, poprzedni_guzik2= 0, teraz_guzik2= 0, tryb= 0;
	float dystans= 0, przebieg;
 1c8:	19 86       	std	Y+9, r1	; 0x09
 1ca:	1a 86       	std	Y+10, r1	; 0x0a
 1cc:	1b 86       	std	Y+11, r1	; 0x0b
 1ce:	1c 86       	std	Y+12, r1	; 0x0c
	TCCR1B= 0b00000100; // prescaler = 256
	TCNT1= 0;
	TIFR= 1 << TOV1;
	
	const float obwod= 2.18; // [m]
	unsigned char poprzedni= 0, teraz= 0, poprzedni_guzik0= 0, teraz_guzik0= 0, poprzedni_guzik1= 0, teraz_guzik1= 0, poprzedni_guzik2= 0, teraz_guzik2= 0, tryb= 0;
 1d0:	41 2c       	mov	r4, r1
 1d2:	51 2c       	mov	r5, r1
 1d4:	71 2c       	mov	r7, r1
 1d6:	61 2c       	mov	r6, r1
 1d8:	20 e0       	ldi	r18, 0x00	; 0
	
	przebieg= eeprom_read_float(&przebieg_ee);
	
	while(1)
	{
		teraz= !(PINC & 32);
 1da:	33 24       	eor	r3, r3
 1dc:	33 94       	inc	r3
 1de:	21 2c       	mov	r2, r1
 1e0:	b6 2c       	mov	r11, r6
 1e2:	a7 2c       	mov	r10, r7
 1e4:	15 2d       	mov	r17, r5
 1e6:	04 2d       	mov	r16, r4
 1e8:	04 c0       	rjmp	.+8      	; 0x1f2 <main+0x94>
 1ea:	27 2d       	mov	r18, r7
 1ec:	b6 2c       	mov	r11, r6
 1ee:	a5 2c       	mov	r10, r5
 1f0:	14 2d       	mov	r17, r4
 1f2:	83 b3       	in	r24, 0x13	; 19
 1f4:	80 72       	andi	r24, 0x20	; 32
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	73 2c       	mov	r7, r3
 1fa:	00 97       	sbiw	r24, 0x00	; 0
 1fc:	09 f0       	breq	.+2      	; 0x200 <main+0xa2>
 1fe:	72 2c       	mov	r7, r2
		teraz_guzik0= !(PINC & 1);
 200:	33 b3       	in	r19, 0x13	; 19
 202:	63 2c       	mov	r6, r3
 204:	30 fb       	bst	r19, 0
 206:	88 24       	eor	r8, r8
 208:	80 f8       	bld	r8, 0
 20a:	91 2c       	mov	r9, r1
 20c:	30 fd       	sbrc	r19, 0
 20e:	62 2c       	mov	r6, r2
		teraz_guzik1= !(PINC & 2);
 210:	33 b3       	in	r19, 0x13	; 19
 212:	32 70       	andi	r19, 0x02	; 2
 214:	c3 2e       	mov	r12, r19
 216:	d1 2c       	mov	r13, r1
 218:	53 2c       	mov	r5, r3
 21a:	c1 14       	cp	r12, r1
 21c:	d1 04       	cpc	r13, r1
 21e:	09 f0       	breq	.+2      	; 0x222 <main+0xc4>
 220:	52 2c       	mov	r5, r2
		teraz_guzik2= !(PINC & 4);
 222:	33 b3       	in	r19, 0x13	; 19
 224:	34 70       	andi	r19, 0x04	; 4
 226:	e3 2e       	mov	r14, r19
 228:	f1 2c       	mov	r15, r1
 22a:	43 2c       	mov	r4, r3
 22c:	e1 14       	cp	r14, r1
 22e:	f1 04       	cpc	r15, r1
 230:	09 f0       	breq	.+2      	; 0x234 <main+0xd6>
 232:	42 2c       	mov	r4, r2
		
		if( (poprzedni == 0) && (teraz == 1) )
 234:	21 11       	cpse	r18, r1
 236:	6e c0       	rjmp	.+220    	; 0x314 <main+0x1b6>
 238:	89 2b       	or	r24, r25
 23a:	09 f0       	breq	.+2      	; 0x23e <main+0xe0>
 23c:	6b c0       	rjmp	.+214    	; 0x314 <main+0x1b6>
		{
			dystans+= obwod;
 23e:	2f e1       	ldi	r18, 0x1F	; 31
 240:	35 e8       	ldi	r19, 0x85	; 133
 242:	4b e0       	ldi	r20, 0x0B	; 11
 244:	50 e4       	ldi	r21, 0x40	; 64
 246:	69 85       	ldd	r22, Y+9	; 0x09
 248:	7a 85       	ldd	r23, Y+10	; 0x0a
 24a:	8b 85       	ldd	r24, Y+11	; 0x0b
 24c:	9c 85       	ldd	r25, Y+12	; 0x0c
 24e:	71 d2       	rcall	.+1250   	; 0x732 <__addsf3>
 250:	69 87       	std	Y+9, r22	; 0x09
 252:	7a 87       	std	Y+10, r23	; 0x0a
 254:	8b 87       	std	Y+11, r24	; 0x0b
 256:	9c 87       	std	Y+12, r25	; 0x0c
			przebieg+= obwod;
 258:	2f e1       	ldi	r18, 0x1F	; 31
 25a:	35 e8       	ldi	r19, 0x85	; 133
 25c:	4b e0       	ldi	r20, 0x0B	; 11
 25e:	50 e4       	ldi	r21, 0x40	; 64
 260:	6d 85       	ldd	r22, Y+13	; 0x0d
 262:	7e 85       	ldd	r23, Y+14	; 0x0e
 264:	8f 85       	ldd	r24, Y+15	; 0x0f
 266:	98 89       	ldd	r25, Y+16	; 0x10
 268:	64 d2       	rcall	.+1224   	; 0x732 <__addsf3>
 26a:	6d 87       	std	Y+13, r22	; 0x0d
 26c:	7e 87       	std	Y+14, r23	; 0x0e
 26e:	8f 87       	std	Y+15, r24	; 0x0f
 270:	98 8b       	std	Y+16, r25	; 0x10
			
			if( TIFR & (1 << TOV1) )
 272:	08 b6       	in	r0, 0x38	; 56
 274:	02 fe       	sbrs	r0, 2
 276:	0a c0       	rjmp	.+20     	; 0x28c <main+0x12e>
			{
				czas= 10000;
				TIFR= 1 << TOV1;
 278:	84 e0       	ldi	r24, 0x04	; 4
 27a:	88 bf       	out	0x38, r24	; 56
			dystans+= obwod;
			przebieg+= obwod;
			
			if( TIFR & (1 << TOV1) )
			{
				czas= 10000;
 27c:	1d 82       	std	Y+5, r1	; 0x05
 27e:	90 e4       	ldi	r25, 0x40	; 64
 280:	99 8b       	std	Y+17, r25	; 0x11
 282:	2c e1       	ldi	r18, 0x1C	; 28
 284:	2f 8f       	std	Y+31, r18	; 0x1f
 286:	86 e4       	ldi	r24, 0x46	; 70
 288:	8e 8f       	std	Y+30, r24	; 0x1e
 28a:	1b c0       	rjmp	.+54     	; 0x2c2 <main+0x164>
				TIFR= 1 << TOV1;
			} else
			{
				czas= TCNT1*0.000032;
 28c:	6c b5       	in	r22, 0x2c	; 44
 28e:	7d b5       	in	r23, 0x2d	; 45
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	4f d3       	rcall	.+1694   	; 0x934 <__floatunsisf>
 296:	2d eb       	ldi	r18, 0xBD	; 189
 298:	37 e3       	ldi	r19, 0x37	; 55
 29a:	46 e0       	ldi	r20, 0x06	; 6
 29c:	58 e3       	ldi	r21, 0x38	; 56
 29e:	00 d4       	rcall	.+2048   	; 0xaa0 <__mulsf3>
 2a0:	6d 83       	std	Y+5, r22	; 0x05
 2a2:	79 8b       	std	Y+17, r23	; 0x11
 2a4:	8f 8f       	std	Y+31, r24	; 0x1f
 2a6:	9e 8f       	std	Y+30, r25	; 0x1e
				caly_czas+= czas;
 2a8:	26 2f       	mov	r18, r22
 2aa:	37 2f       	mov	r19, r23
 2ac:	48 2f       	mov	r20, r24
 2ae:	59 2f       	mov	r21, r25
 2b0:	6e 89       	ldd	r22, Y+22	; 0x16
 2b2:	7f 89       	ldd	r23, Y+23	; 0x17
 2b4:	88 8d       	ldd	r24, Y+24	; 0x18
 2b6:	99 8d       	ldd	r25, Y+25	; 0x19
 2b8:	3c d2       	rcall	.+1144   	; 0x732 <__addsf3>
 2ba:	6e 8b       	std	Y+22, r22	; 0x16
 2bc:	7f 8b       	std	Y+23, r23	; 0x17
 2be:	88 8f       	std	Y+24, r24	; 0x18
 2c0:	99 8f       	std	Y+25, r25	; 0x19
			}
			TCNT1= 0;
 2c2:	1d bc       	out	0x2d, r1	; 45
 2c4:	1c bc       	out	0x2c, r1	; 44
			predkosc= (obwod/czas);
 2c6:	2d 81       	ldd	r18, Y+5	; 0x05
 2c8:	39 89       	ldd	r19, Y+17	; 0x11
 2ca:	4f 8d       	ldd	r20, Y+31	; 0x1f
 2cc:	5e 8d       	ldd	r21, Y+30	; 0x1e
 2ce:	6f e1       	ldi	r22, 0x1F	; 31
 2d0:	75 e8       	ldi	r23, 0x85	; 133
 2d2:	8b e0       	ldi	r24, 0x0B	; 11
 2d4:	90 e4       	ldi	r25, 0x40	; 64
 2d6:	95 d2       	rcall	.+1322   	; 0x802 <__divsf3>
 2d8:	69 83       	std	Y+1, r22	; 0x01
 2da:	7a 83       	std	Y+2, r23	; 0x02
 2dc:	8b 83       	std	Y+3, r24	; 0x03
 2de:	9c 83       	std	Y+4, r25	; 0x04
			srednia_predkosc= dystans/caly_czas;
 2e0:	2e 89       	ldd	r18, Y+22	; 0x16
 2e2:	3f 89       	ldd	r19, Y+23	; 0x17
 2e4:	48 8d       	ldd	r20, Y+24	; 0x18
 2e6:	59 8d       	ldd	r21, Y+25	; 0x19
 2e8:	69 85       	ldd	r22, Y+9	; 0x09
 2ea:	7a 85       	ldd	r23, Y+10	; 0x0a
 2ec:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ee:	9c 85       	ldd	r25, Y+12	; 0x0c
 2f0:	88 d2       	rcall	.+1296   	; 0x802 <__divsf3>
 2f2:	6a 8f       	std	Y+26, r22	; 0x1a
 2f4:	7b 8f       	std	Y+27, r23	; 0x1b
 2f6:	8c 8f       	std	Y+28, r24	; 0x1c
 2f8:	9d 8f       	std	Y+29, r25	; 0x1d
			rpm= 60/czas;
 2fa:	2d 81       	ldd	r18, Y+5	; 0x05
 2fc:	39 89       	ldd	r19, Y+17	; 0x11
 2fe:	4f 8d       	ldd	r20, Y+31	; 0x1f
 300:	5e 8d       	ldd	r21, Y+30	; 0x1e
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	80 e7       	ldi	r24, 0x70	; 112
 308:	92 e4       	ldi	r25, 0x42	; 66
 30a:	7b d2       	rcall	.+1270   	; 0x802 <__divsf3>
 30c:	6d 83       	std	Y+5, r22	; 0x05
 30e:	7e 83       	std	Y+6, r23	; 0x06
 310:	8f 83       	std	Y+7, r24	; 0x07
 312:	98 87       	std	Y+8, r25	; 0x08
		//}
		//else
		//{
			//klatka= 2000;
		//}
		if(predkosc > 5)
 314:	20 e0       	ldi	r18, 0x00	; 0
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	40 ea       	ldi	r20, 0xA0	; 160
 31a:	50 e4       	ldi	r21, 0x40	; 64
 31c:	69 81       	ldd	r22, Y+1	; 0x01
 31e:	7a 81       	ldd	r23, Y+2	; 0x02
 320:	8b 81       	ldd	r24, Y+3	; 0x03
 322:	9c 81       	ldd	r25, Y+4	; 0x04
 324:	b9 d3       	rcall	.+1906   	; 0xa98 <__gesf2>
 326:	18 16       	cp	r1, r24
 328:	6c f4       	brge	.+26     	; 0x344 <main+0x1e6>
		{
			klatka= 8000/predkosc;
 32a:	29 81       	ldd	r18, Y+1	; 0x01
 32c:	3a 81       	ldd	r19, Y+2	; 0x02
 32e:	4b 81       	ldd	r20, Y+3	; 0x03
 330:	5c 81       	ldd	r21, Y+4	; 0x04
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	70 e0       	ldi	r23, 0x00	; 0
 336:	8a ef       	ldi	r24, 0xFA	; 250
 338:	95 e4       	ldi	r25, 0x45	; 69
 33a:	63 d2       	rcall	.+1222   	; 0x802 <__divsf3>
 33c:	ca d2       	rcall	.+1428   	; 0x8d2 <__fixsfsi>
 33e:	69 8b       	std	Y+17, r22	; 0x11
 340:	7e 8f       	std	Y+30, r23	; 0x1e
 342:	04 c0       	rjmp	.+8      	; 0x34c <main+0x1ee>
		}
		else
		{
			klatka= 2000;
 344:	90 ed       	ldi	r25, 0xD0	; 208
 346:	99 8b       	std	Y+17, r25	; 0x11
 348:	27 e0       	ldi	r18, 0x07	; 7
 34a:	2e 8f       	std	Y+30, r18	; 0x1e
		}
		
		
		if( (PINC & 7) == 0)
 34c:	83 b3       	in	r24, 0x13	; 19
 34e:	87 70       	andi	r24, 0x07	; 7
 350:	79 f4       	brne	.+30     	; 0x370 <main+0x212>
		{
			eeprom_write_float(&przebieg_ee, 0);
 352:	40 e0       	ldi	r20, 0x00	; 0
 354:	50 e0       	ldi	r21, 0x00	; 0
 356:	ba 01       	movw	r22, r20
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	30 d4       	rcall	.+2144   	; 0xbbe <eeprom_write_dword>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 35e:	8f ef       	ldi	r24, 0xFF	; 255
 360:	97 e8       	ldi	r25, 0x87	; 135
 362:	23 e1       	ldi	r18, 0x13	; 19
 364:	81 50       	subi	r24, 0x01	; 1
 366:	90 40       	sbci	r25, 0x00	; 0
 368:	20 40       	sbci	r18, 0x00	; 0
 36a:	e1 f7       	brne	.-8      	; 0x364 <main+0x206>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <main+0x210>
 36e:	00 00       	nop
			_delay_ms(800);
		}
		
		if( (poprzedni_guzik0 == 0) && (teraz_guzik0 == 1) )
 370:	b1 10       	cpse	r11, r1
 372:	09 c0       	rjmp	.+18     	; 0x386 <main+0x228>
 374:	89 28       	or	r8, r9
 376:	39 f4       	brne	.+14     	; 0x386 <main+0x228>
		{
			tryb= (tryb + 1)%5 ;
 378:	80 2f       	mov	r24, r16
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	01 96       	adiw	r24, 0x01	; 1
 37e:	65 e0       	ldi	r22, 0x05	; 5
 380:	70 e0       	ldi	r23, 0x00	; 0
 382:	f1 d3       	rcall	.+2018   	; 0xb66 <__divmodhi4>
 384:	08 2f       	mov	r16, r24
		}
		
		if( (poprzedni_guzik1 == 0) && (teraz_guzik1 == 1) )
 386:	a1 10       	cpse	r10, r1
 388:	1c c0       	rjmp	.+56     	; 0x3c2 <main+0x264>
 38a:	cd 28       	or	r12, r13
 38c:	d1 f4       	brne	.+52     	; 0x3c2 <main+0x264>
		{
			if(mnoznik < 3)
 38e:	20 e0       	ldi	r18, 0x00	; 0
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	40 e4       	ldi	r20, 0x40	; 64
 394:	50 e4       	ldi	r21, 0x40	; 64
 396:	6a 89       	ldd	r22, Y+18	; 0x12
 398:	7b 89       	ldd	r23, Y+19	; 0x13
 39a:	8c 89       	ldd	r24, Y+20	; 0x14
 39c:	9d 89       	ldd	r25, Y+21	; 0x15
 39e:	2d d2       	rcall	.+1114   	; 0x7fa <__cmpsf2>
 3a0:	88 23       	and	r24, r24
 3a2:	3c f0       	brlt	.+14     	; 0x3b2 <main+0x254>
			{
				mnoznik= 3.6;
			}
			else
			{
				mnoznik= 1;
 3a4:	1a 8a       	std	Y+18, r1	; 0x12
 3a6:	1b 8a       	std	Y+19, r1	; 0x13
 3a8:	80 e8       	ldi	r24, 0x80	; 128
 3aa:	8c 8b       	std	Y+20, r24	; 0x14
 3ac:	9f e3       	ldi	r25, 0x3F	; 63
 3ae:	9d 8b       	std	Y+21, r25	; 0x15
 3b0:	08 c0       	rjmp	.+16     	; 0x3c2 <main+0x264>
		
		if( (poprzedni_guzik1 == 0) && (teraz_guzik1 == 1) )
		{
			if(mnoznik < 3)
			{
				mnoznik= 3.6;
 3b2:	26 e6       	ldi	r18, 0x66	; 102
 3b4:	2a 8b       	std	Y+18, r18	; 0x12
 3b6:	86 e6       	ldi	r24, 0x66	; 102
 3b8:	8b 8b       	std	Y+19, r24	; 0x13
 3ba:	96 e6       	ldi	r25, 0x66	; 102
 3bc:	9c 8b       	std	Y+20, r25	; 0x14
 3be:	20 e4       	ldi	r18, 0x40	; 64
 3c0:	2d 8b       	std	Y+21, r18	; 0x15
			{
				mnoznik= 1;
			}
		}
		
		if( (poprzedni_guzik2 == 0) && (teraz_guzik2 == 1) )
 3c2:	11 11       	cpse	r17, r1
 3c4:	09 c0       	rjmp	.+18     	; 0x3d8 <main+0x27a>
 3c6:	ef 28       	or	r14, r15
 3c8:	39 f4       	brne	.+14     	; 0x3d8 <main+0x27a>
		{
			eeprom_write_float(&przebieg_ee, przebieg);
 3ca:	4d 85       	ldd	r20, Y+13	; 0x0d
 3cc:	5e 85       	ldd	r21, Y+14	; 0x0e
 3ce:	6f 85       	ldd	r22, Y+15	; 0x0f
 3d0:	78 89       	ldd	r23, Y+16	; 0x10
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	f3 d3       	rcall	.+2022   	; 0xbbe <eeprom_write_dword>
		}
		
		switch(tryb)
 3d8:	02 30       	cpi	r16, 0x02	; 2
 3da:	09 f4       	brne	.+2      	; 0x3de <main+0x280>
 3dc:	b8 c0       	rjmp	.+368    	; 0x54e <__stack+0xef>
 3de:	30 f4       	brcc	.+12     	; 0x3ec <main+0x28e>
 3e0:	00 23       	and	r16, r16
 3e2:	59 f0       	breq	.+22     	; 0x3fa <main+0x29c>
 3e4:	01 30       	cpi	r16, 0x01	; 1
 3e6:	09 f4       	brne	.+2      	; 0x3ea <main+0x28c>
 3e8:	6c c0       	rjmp	.+216    	; 0x4c2 <__stack+0x63>
 3ea:	ff ce       	rjmp	.-514    	; 0x1ea <main+0x8c>
 3ec:	03 30       	cpi	r16, 0x03	; 3
 3ee:	09 f4       	brne	.+2      	; 0x3f2 <main+0x294>
 3f0:	f4 c0       	rjmp	.+488    	; 0x5da <__stack+0x17b>
 3f2:	04 30       	cpi	r16, 0x04	; 4
 3f4:	09 f4       	brne	.+2      	; 0x3f8 <main+0x29a>
 3f6:	38 c1       	rjmp	.+624    	; 0x668 <__stack+0x209>
 3f8:	f8 ce       	rjmp	.-528    	; 0x1ea <main+0x8c>
		{
			case 0:
			{
				if(dystans < 100)
 3fa:	20 e0       	ldi	r18, 0x00	; 0
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	48 ec       	ldi	r20, 0xC8	; 200
 400:	52 e4       	ldi	r21, 0x42	; 66
 402:	69 85       	ldd	r22, Y+9	; 0x09
 404:	7a 85       	ldd	r23, Y+10	; 0x0a
 406:	8b 85       	ldd	r24, Y+11	; 0x0b
 408:	9c 85       	ldd	r25, Y+12	; 0x0c
 40a:	f7 d1       	rcall	.+1006   	; 0x7fa <__cmpsf2>
 40c:	88 23       	and	r24, r24
 40e:	94 f4       	brge	.+36     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
				{
					liczba(dystans*10, 2, klatka);
 410:	20 e0       	ldi	r18, 0x00	; 0
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	40 e2       	ldi	r20, 0x20	; 32
 416:	51 e4       	ldi	r21, 0x41	; 65
 418:	69 85       	ldd	r22, Y+9	; 0x09
 41a:	7a 85       	ldd	r23, Y+10	; 0x0a
 41c:	8b 85       	ldd	r24, Y+11	; 0x0b
 41e:	9c 85       	ldd	r25, Y+12	; 0x0c
 420:	3f d3       	rcall	.+1662   	; 0xaa0 <__mulsf3>
 422:	57 d2       	rcall	.+1198   	; 0x8d2 <__fixsfsi>
 424:	dc 01       	movw	r26, r24
 426:	cb 01       	movw	r24, r22
 428:	49 89       	ldd	r20, Y+17	; 0x11
 42a:	5e 8d       	ldd	r21, Y+30	; 0x1e
 42c:	62 e0       	ldi	r22, 0x02	; 2
 42e:	70 e0       	ldi	r23, 0x00	; 0
 430:	69 de       	rcall	.-814    	; 0x104 <liczba>
 432:	db ce       	rjmp	.-586    	; 0x1ea <main+0x8c>
				}
				else if(dystans < 1000)
 434:	20 e0       	ldi	r18, 0x00	; 0
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	4a e7       	ldi	r20, 0x7A	; 122
 43a:	54 e4       	ldi	r21, 0x44	; 68
 43c:	69 85       	ldd	r22, Y+9	; 0x09
 43e:	7a 85       	ldd	r23, Y+10	; 0x0a
 440:	8b 85       	ldd	r24, Y+11	; 0x0b
 442:	9c 85       	ldd	r25, Y+12	; 0x0c
 444:	da d1       	rcall	.+948    	; 0x7fa <__cmpsf2>
 446:	88 23       	and	r24, r24
 448:	6c f4       	brge	.+26     	; 0x464 <__stack+0x5>
				{
					liczba(dystans, 1, klatka);
 44a:	69 85       	ldd	r22, Y+9	; 0x09
 44c:	7a 85       	ldd	r23, Y+10	; 0x0a
 44e:	8b 85       	ldd	r24, Y+11	; 0x0b
 450:	9c 85       	ldd	r25, Y+12	; 0x0c
 452:	3f d2       	rcall	.+1150   	; 0x8d2 <__fixsfsi>
 454:	dc 01       	movw	r26, r24
 456:	cb 01       	movw	r24, r22
 458:	49 89       	ldd	r20, Y+17	; 0x11
 45a:	5e 8d       	ldd	r21, Y+30	; 0x1e
 45c:	61 e0       	ldi	r22, 0x01	; 1
 45e:	70 e0       	ldi	r23, 0x00	; 0
 460:	51 de       	rcall	.-862    	; 0x104 <liczba>
 462:	c3 ce       	rjmp	.-634    	; 0x1ea <main+0x8c>
				}
				else if(dystans < 100000)
 464:	20 e0       	ldi	r18, 0x00	; 0
 466:	30 e5       	ldi	r19, 0x50	; 80
 468:	43 ec       	ldi	r20, 0xC3	; 195
 46a:	57 e4       	ldi	r21, 0x47	; 71
 46c:	69 85       	ldd	r22, Y+9	; 0x09
 46e:	7a 85       	ldd	r23, Y+10	; 0x0a
 470:	8b 85       	ldd	r24, Y+11	; 0x0b
 472:	9c 85       	ldd	r25, Y+12	; 0x0c
 474:	c2 d1       	rcall	.+900    	; 0x7fa <__cmpsf2>
 476:	88 23       	and	r24, r24
 478:	94 f4       	brge	.+36     	; 0x49e <__stack+0x3f>
				{
					liczba(dystans*0.01, 2, klatka);
 47a:	2a e0       	ldi	r18, 0x0A	; 10
 47c:	37 ed       	ldi	r19, 0xD7	; 215
 47e:	43 e2       	ldi	r20, 0x23	; 35
 480:	5c e3       	ldi	r21, 0x3C	; 60
 482:	69 85       	ldd	r22, Y+9	; 0x09
 484:	7a 85       	ldd	r23, Y+10	; 0x0a
 486:	8b 85       	ldd	r24, Y+11	; 0x0b
 488:	9c 85       	ldd	r25, Y+12	; 0x0c
 48a:	0a d3       	rcall	.+1556   	; 0xaa0 <__mulsf3>
 48c:	22 d2       	rcall	.+1092   	; 0x8d2 <__fixsfsi>
 48e:	dc 01       	movw	r26, r24
 490:	cb 01       	movw	r24, r22
 492:	49 89       	ldd	r20, Y+17	; 0x11
 494:	5e 8d       	ldd	r21, Y+30	; 0x1e
 496:	62 e0       	ldi	r22, 0x02	; 2
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	34 de       	rcall	.-920    	; 0x104 <liczba>
 49c:	a6 ce       	rjmp	.-692    	; 0x1ea <main+0x8c>
				}
				else
				{
					liczba(dystans*0.001, 1, klatka);
 49e:	2f e6       	ldi	r18, 0x6F	; 111
 4a0:	32 e1       	ldi	r19, 0x12	; 18
 4a2:	43 e8       	ldi	r20, 0x83	; 131
 4a4:	5a e3       	ldi	r21, 0x3A	; 58
 4a6:	69 85       	ldd	r22, Y+9	; 0x09
 4a8:	7a 85       	ldd	r23, Y+10	; 0x0a
 4aa:	8b 85       	ldd	r24, Y+11	; 0x0b
 4ac:	9c 85       	ldd	r25, Y+12	; 0x0c
 4ae:	f8 d2       	rcall	.+1520   	; 0xaa0 <__mulsf3>
 4b0:	10 d2       	rcall	.+1056   	; 0x8d2 <__fixsfsi>
 4b2:	dc 01       	movw	r26, r24
 4b4:	cb 01       	movw	r24, r22
 4b6:	49 89       	ldd	r20, Y+17	; 0x11
 4b8:	5e 8d       	ldd	r21, Y+30	; 0x1e
 4ba:	61 e0       	ldi	r22, 0x01	; 1
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	22 de       	rcall	.-956    	; 0x104 <liczba>
 4c0:	94 ce       	rjmp	.-728    	; 0x1ea <main+0x8c>
				break;
			}
			
			case 1:
			{
				if(predkosc*mnoznik < 10)
 4c2:	2a 89       	ldd	r18, Y+18	; 0x12
 4c4:	3b 89       	ldd	r19, Y+19	; 0x13
 4c6:	4c 89       	ldd	r20, Y+20	; 0x14
 4c8:	5d 89       	ldd	r21, Y+21	; 0x15
 4ca:	69 81       	ldd	r22, Y+1	; 0x01
 4cc:	7a 81       	ldd	r23, Y+2	; 0x02
 4ce:	8b 81       	ldd	r24, Y+3	; 0x03
 4d0:	9c 81       	ldd	r25, Y+4	; 0x04
 4d2:	e6 d2       	rcall	.+1484   	; 0xaa0 <__mulsf3>
 4d4:	6b 01       	movw	r12, r22
 4d6:	7c 01       	movw	r14, r24
 4d8:	20 e0       	ldi	r18, 0x00	; 0
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	40 e2       	ldi	r20, 0x20	; 32
 4de:	51 e4       	ldi	r21, 0x41	; 65
 4e0:	8c d1       	rcall	.+792    	; 0x7fa <__cmpsf2>
 4e2:	88 23       	and	r24, r24
 4e4:	84 f4       	brge	.+32     	; 0x506 <__stack+0xa7>
				{
					liczba(predkosc*mnoznik*100, 3, klatka);
 4e6:	20 e0       	ldi	r18, 0x00	; 0
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	48 ec       	ldi	r20, 0xC8	; 200
 4ec:	52 e4       	ldi	r21, 0x42	; 66
 4ee:	c7 01       	movw	r24, r14
 4f0:	b6 01       	movw	r22, r12
 4f2:	d6 d2       	rcall	.+1452   	; 0xaa0 <__mulsf3>
 4f4:	ee d1       	rcall	.+988    	; 0x8d2 <__fixsfsi>
 4f6:	dc 01       	movw	r26, r24
 4f8:	cb 01       	movw	r24, r22
 4fa:	49 89       	ldd	r20, Y+17	; 0x11
 4fc:	5e 8d       	ldd	r21, Y+30	; 0x1e
 4fe:	63 e0       	ldi	r22, 0x03	; 3
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	00 de       	rcall	.-1024   	; 0x104 <liczba>
 504:	72 ce       	rjmp	.-796    	; 0x1ea <main+0x8c>
				}
				else if(predkosc*mnoznik < 100)
 506:	20 e0       	ldi	r18, 0x00	; 0
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	48 ec       	ldi	r20, 0xC8	; 200
 50c:	52 e4       	ldi	r21, 0x42	; 66
 50e:	c7 01       	movw	r24, r14
 510:	b6 01       	movw	r22, r12
 512:	73 d1       	rcall	.+742    	; 0x7fa <__cmpsf2>
 514:	88 23       	and	r24, r24
 516:	84 f4       	brge	.+32     	; 0x538 <__stack+0xd9>
				{
					liczba(predkosc*mnoznik*10, 2, klatka);
 518:	20 e0       	ldi	r18, 0x00	; 0
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	40 e2       	ldi	r20, 0x20	; 32
 51e:	51 e4       	ldi	r21, 0x41	; 65
 520:	c7 01       	movw	r24, r14
 522:	b6 01       	movw	r22, r12
 524:	bd d2       	rcall	.+1402   	; 0xaa0 <__mulsf3>
 526:	d5 d1       	rcall	.+938    	; 0x8d2 <__fixsfsi>
 528:	dc 01       	movw	r26, r24
 52a:	cb 01       	movw	r24, r22
 52c:	49 89       	ldd	r20, Y+17	; 0x11
 52e:	5e 8d       	ldd	r21, Y+30	; 0x1e
 530:	62 e0       	ldi	r22, 0x02	; 2
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	e7 dd       	rcall	.-1074   	; 0x104 <liczba>
 536:	59 ce       	rjmp	.-846    	; 0x1ea <main+0x8c>
				}
				else
				{
					liczba(predkosc*mnoznik, 1, klatka);
 538:	c7 01       	movw	r24, r14
 53a:	b6 01       	movw	r22, r12
 53c:	ca d1       	rcall	.+916    	; 0x8d2 <__fixsfsi>
 53e:	dc 01       	movw	r26, r24
 540:	cb 01       	movw	r24, r22
 542:	49 89       	ldd	r20, Y+17	; 0x11
 544:	5e 8d       	ldd	r21, Y+30	; 0x1e
 546:	61 e0       	ldi	r22, 0x01	; 1
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	dc dd       	rcall	.-1096   	; 0x104 <liczba>
 54c:	4e ce       	rjmp	.-868    	; 0x1ea <main+0x8c>
				break;
			}
			
			case 2:
			{
				if(srednia_predkosc*mnoznik < 10)
 54e:	2a 89       	ldd	r18, Y+18	; 0x12
 550:	3b 89       	ldd	r19, Y+19	; 0x13
 552:	4c 89       	ldd	r20, Y+20	; 0x14
 554:	5d 89       	ldd	r21, Y+21	; 0x15
 556:	6a 8d       	ldd	r22, Y+26	; 0x1a
 558:	7b 8d       	ldd	r23, Y+27	; 0x1b
 55a:	8c 8d       	ldd	r24, Y+28	; 0x1c
 55c:	9d 8d       	ldd	r25, Y+29	; 0x1d
 55e:	a0 d2       	rcall	.+1344   	; 0xaa0 <__mulsf3>
 560:	6b 01       	movw	r12, r22
 562:	7c 01       	movw	r14, r24
 564:	20 e0       	ldi	r18, 0x00	; 0
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	40 e2       	ldi	r20, 0x20	; 32
 56a:	51 e4       	ldi	r21, 0x41	; 65
 56c:	46 d1       	rcall	.+652    	; 0x7fa <__cmpsf2>
 56e:	88 23       	and	r24, r24
 570:	84 f4       	brge	.+32     	; 0x592 <__stack+0x133>
				{
					liczba(srednia_predkosc*mnoznik*100, 3, klatka);
 572:	20 e0       	ldi	r18, 0x00	; 0
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	48 ec       	ldi	r20, 0xC8	; 200
 578:	52 e4       	ldi	r21, 0x42	; 66
 57a:	c7 01       	movw	r24, r14
 57c:	b6 01       	movw	r22, r12
 57e:	90 d2       	rcall	.+1312   	; 0xaa0 <__mulsf3>
 580:	a8 d1       	rcall	.+848    	; 0x8d2 <__fixsfsi>
 582:	dc 01       	movw	r26, r24
 584:	cb 01       	movw	r24, r22
 586:	49 89       	ldd	r20, Y+17	; 0x11
 588:	5e 8d       	ldd	r21, Y+30	; 0x1e
 58a:	63 e0       	ldi	r22, 0x03	; 3
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	ba dd       	rcall	.-1164   	; 0x104 <liczba>
 590:	2c ce       	rjmp	.-936    	; 0x1ea <main+0x8c>
				}
				else if(srednia_predkosc*mnoznik < 100)
 592:	20 e0       	ldi	r18, 0x00	; 0
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	48 ec       	ldi	r20, 0xC8	; 200
 598:	52 e4       	ldi	r21, 0x42	; 66
 59a:	c7 01       	movw	r24, r14
 59c:	b6 01       	movw	r22, r12
 59e:	2d d1       	rcall	.+602    	; 0x7fa <__cmpsf2>
 5a0:	88 23       	and	r24, r24
 5a2:	84 f4       	brge	.+32     	; 0x5c4 <__stack+0x165>
				{
					liczba(srednia_predkosc*mnoznik*10, 2, klatka);
 5a4:	20 e0       	ldi	r18, 0x00	; 0
 5a6:	30 e0       	ldi	r19, 0x00	; 0
 5a8:	40 e2       	ldi	r20, 0x20	; 32
 5aa:	51 e4       	ldi	r21, 0x41	; 65
 5ac:	c7 01       	movw	r24, r14
 5ae:	b6 01       	movw	r22, r12
 5b0:	77 d2       	rcall	.+1262   	; 0xaa0 <__mulsf3>
 5b2:	8f d1       	rcall	.+798    	; 0x8d2 <__fixsfsi>
 5b4:	dc 01       	movw	r26, r24
 5b6:	cb 01       	movw	r24, r22
 5b8:	49 89       	ldd	r20, Y+17	; 0x11
 5ba:	5e 8d       	ldd	r21, Y+30	; 0x1e
 5bc:	62 e0       	ldi	r22, 0x02	; 2
 5be:	70 e0       	ldi	r23, 0x00	; 0
 5c0:	a1 dd       	rcall	.-1214   	; 0x104 <liczba>
 5c2:	13 ce       	rjmp	.-986    	; 0x1ea <main+0x8c>
				}
				else
				{
					liczba(srednia_predkosc*mnoznik, 1, klatka);
 5c4:	c7 01       	movw	r24, r14
 5c6:	b6 01       	movw	r22, r12
 5c8:	84 d1       	rcall	.+776    	; 0x8d2 <__fixsfsi>
 5ca:	dc 01       	movw	r26, r24
 5cc:	cb 01       	movw	r24, r22
 5ce:	49 89       	ldd	r20, Y+17	; 0x11
 5d0:	5e 8d       	ldd	r21, Y+30	; 0x1e
 5d2:	61 e0       	ldi	r22, 0x01	; 1
 5d4:	70 e0       	ldi	r23, 0x00	; 0
 5d6:	96 dd       	rcall	.-1236   	; 0x104 <liczba>
 5d8:	08 ce       	rjmp	.-1008   	; 0x1ea <main+0x8c>
				break;
			}
			
			case 3:
			{
				if(rpm < 10)
 5da:	20 e0       	ldi	r18, 0x00	; 0
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	40 e2       	ldi	r20, 0x20	; 32
 5e0:	51 e4       	ldi	r21, 0x41	; 65
 5e2:	6d 81       	ldd	r22, Y+5	; 0x05
 5e4:	7e 81       	ldd	r23, Y+6	; 0x06
 5e6:	8f 81       	ldd	r24, Y+7	; 0x07
 5e8:	98 85       	ldd	r25, Y+8	; 0x08
 5ea:	07 d1       	rcall	.+526    	; 0x7fa <__cmpsf2>
 5ec:	88 23       	and	r24, r24
 5ee:	94 f4       	brge	.+36     	; 0x614 <__stack+0x1b5>
				{
					liczba(rpm*100, 3, klatka);
 5f0:	20 e0       	ldi	r18, 0x00	; 0
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	48 ec       	ldi	r20, 0xC8	; 200
 5f6:	52 e4       	ldi	r21, 0x42	; 66
 5f8:	6d 81       	ldd	r22, Y+5	; 0x05
 5fa:	7e 81       	ldd	r23, Y+6	; 0x06
 5fc:	8f 81       	ldd	r24, Y+7	; 0x07
 5fe:	98 85       	ldd	r25, Y+8	; 0x08
 600:	4f d2       	rcall	.+1182   	; 0xaa0 <__mulsf3>
 602:	67 d1       	rcall	.+718    	; 0x8d2 <__fixsfsi>
 604:	dc 01       	movw	r26, r24
 606:	cb 01       	movw	r24, r22
 608:	49 89       	ldd	r20, Y+17	; 0x11
 60a:	5e 8d       	ldd	r21, Y+30	; 0x1e
 60c:	63 e0       	ldi	r22, 0x03	; 3
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	79 dd       	rcall	.-1294   	; 0x104 <liczba>
 612:	eb cd       	rjmp	.-1066   	; 0x1ea <main+0x8c>
				}
				else if(rpm < 100)
 614:	20 e0       	ldi	r18, 0x00	; 0
 616:	30 e0       	ldi	r19, 0x00	; 0
 618:	48 ec       	ldi	r20, 0xC8	; 200
 61a:	52 e4       	ldi	r21, 0x42	; 66
 61c:	6d 81       	ldd	r22, Y+5	; 0x05
 61e:	7e 81       	ldd	r23, Y+6	; 0x06
 620:	8f 81       	ldd	r24, Y+7	; 0x07
 622:	98 85       	ldd	r25, Y+8	; 0x08
 624:	ea d0       	rcall	.+468    	; 0x7fa <__cmpsf2>
 626:	88 23       	and	r24, r24
 628:	94 f4       	brge	.+36     	; 0x64e <__stack+0x1ef>
				{
					liczba(rpm*10, 2, klatka);
 62a:	20 e0       	ldi	r18, 0x00	; 0
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	40 e2       	ldi	r20, 0x20	; 32
 630:	51 e4       	ldi	r21, 0x41	; 65
 632:	6d 81       	ldd	r22, Y+5	; 0x05
 634:	7e 81       	ldd	r23, Y+6	; 0x06
 636:	8f 81       	ldd	r24, Y+7	; 0x07
 638:	98 85       	ldd	r25, Y+8	; 0x08
 63a:	32 d2       	rcall	.+1124   	; 0xaa0 <__mulsf3>
 63c:	4a d1       	rcall	.+660    	; 0x8d2 <__fixsfsi>
 63e:	dc 01       	movw	r26, r24
 640:	cb 01       	movw	r24, r22
 642:	49 89       	ldd	r20, Y+17	; 0x11
 644:	5e 8d       	ldd	r21, Y+30	; 0x1e
 646:	62 e0       	ldi	r22, 0x02	; 2
 648:	70 e0       	ldi	r23, 0x00	; 0
 64a:	5c dd       	rcall	.-1352   	; 0x104 <liczba>
 64c:	ce cd       	rjmp	.-1124   	; 0x1ea <main+0x8c>
				}
				else
				{
					liczba(rpm, 1, klatka);
 64e:	6d 81       	ldd	r22, Y+5	; 0x05
 650:	7e 81       	ldd	r23, Y+6	; 0x06
 652:	8f 81       	ldd	r24, Y+7	; 0x07
 654:	98 85       	ldd	r25, Y+8	; 0x08
 656:	3d d1       	rcall	.+634    	; 0x8d2 <__fixsfsi>
 658:	dc 01       	movw	r26, r24
 65a:	cb 01       	movw	r24, r22
 65c:	49 89       	ldd	r20, Y+17	; 0x11
 65e:	5e 8d       	ldd	r21, Y+30	; 0x1e
 660:	61 e0       	ldi	r22, 0x01	; 1
 662:	70 e0       	ldi	r23, 0x00	; 0
 664:	4f dd       	rcall	.-1378   	; 0x104 <liczba>
 666:	c1 cd       	rjmp	.-1150   	; 0x1ea <main+0x8c>
				break;
			}
			
			case 4:
			{
				if(przebieg < 100)
 668:	20 e0       	ldi	r18, 0x00	; 0
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	48 ec       	ldi	r20, 0xC8	; 200
 66e:	52 e4       	ldi	r21, 0x42	; 66
 670:	6d 85       	ldd	r22, Y+13	; 0x0d
 672:	7e 85       	ldd	r23, Y+14	; 0x0e
 674:	8f 85       	ldd	r24, Y+15	; 0x0f
 676:	98 89       	ldd	r25, Y+16	; 0x10
 678:	c0 d0       	rcall	.+384    	; 0x7fa <__cmpsf2>
 67a:	88 23       	and	r24, r24
 67c:	94 f4       	brge	.+36     	; 0x6a2 <__stack+0x243>
				{
					liczba(przebieg*10, 2, klatka);
 67e:	20 e0       	ldi	r18, 0x00	; 0
 680:	30 e0       	ldi	r19, 0x00	; 0
 682:	40 e2       	ldi	r20, 0x20	; 32
 684:	51 e4       	ldi	r21, 0x41	; 65
 686:	6d 85       	ldd	r22, Y+13	; 0x0d
 688:	7e 85       	ldd	r23, Y+14	; 0x0e
 68a:	8f 85       	ldd	r24, Y+15	; 0x0f
 68c:	98 89       	ldd	r25, Y+16	; 0x10
 68e:	08 d2       	rcall	.+1040   	; 0xaa0 <__mulsf3>
 690:	20 d1       	rcall	.+576    	; 0x8d2 <__fixsfsi>
 692:	dc 01       	movw	r26, r24
 694:	cb 01       	movw	r24, r22
 696:	49 89       	ldd	r20, Y+17	; 0x11
 698:	5e 8d       	ldd	r21, Y+30	; 0x1e
 69a:	62 e0       	ldi	r22, 0x02	; 2
 69c:	70 e0       	ldi	r23, 0x00	; 0
 69e:	32 dd       	rcall	.-1436   	; 0x104 <liczba>
 6a0:	a4 cd       	rjmp	.-1208   	; 0x1ea <main+0x8c>
				}
				else if(przebieg < 1000)
 6a2:	20 e0       	ldi	r18, 0x00	; 0
 6a4:	30 e0       	ldi	r19, 0x00	; 0
 6a6:	4a e7       	ldi	r20, 0x7A	; 122
 6a8:	54 e4       	ldi	r21, 0x44	; 68
 6aa:	6d 85       	ldd	r22, Y+13	; 0x0d
 6ac:	7e 85       	ldd	r23, Y+14	; 0x0e
 6ae:	8f 85       	ldd	r24, Y+15	; 0x0f
 6b0:	98 89       	ldd	r25, Y+16	; 0x10
 6b2:	a3 d0       	rcall	.+326    	; 0x7fa <__cmpsf2>
 6b4:	88 23       	and	r24, r24
 6b6:	6c f4       	brge	.+26     	; 0x6d2 <__stack+0x273>
				{
					liczba(przebieg, 1, klatka);
 6b8:	6d 85       	ldd	r22, Y+13	; 0x0d
 6ba:	7e 85       	ldd	r23, Y+14	; 0x0e
 6bc:	8f 85       	ldd	r24, Y+15	; 0x0f
 6be:	98 89       	ldd	r25, Y+16	; 0x10
 6c0:	08 d1       	rcall	.+528    	; 0x8d2 <__fixsfsi>
 6c2:	dc 01       	movw	r26, r24
 6c4:	cb 01       	movw	r24, r22
 6c6:	49 89       	ldd	r20, Y+17	; 0x11
 6c8:	5e 8d       	ldd	r21, Y+30	; 0x1e
 6ca:	61 e0       	ldi	r22, 0x01	; 1
 6cc:	70 e0       	ldi	r23, 0x00	; 0
 6ce:	1a dd       	rcall	.-1484   	; 0x104 <liczba>
 6d0:	8c cd       	rjmp	.-1256   	; 0x1ea <main+0x8c>
				}
				else if(przebieg < 100000)
 6d2:	20 e0       	ldi	r18, 0x00	; 0
 6d4:	30 e5       	ldi	r19, 0x50	; 80
 6d6:	43 ec       	ldi	r20, 0xC3	; 195
 6d8:	57 e4       	ldi	r21, 0x47	; 71
 6da:	6d 85       	ldd	r22, Y+13	; 0x0d
 6dc:	7e 85       	ldd	r23, Y+14	; 0x0e
 6de:	8f 85       	ldd	r24, Y+15	; 0x0f
 6e0:	98 89       	ldd	r25, Y+16	; 0x10
 6e2:	8b d0       	rcall	.+278    	; 0x7fa <__cmpsf2>
 6e4:	88 23       	and	r24, r24
 6e6:	94 f4       	brge	.+36     	; 0x70c <__stack+0x2ad>
				{
					liczba(przebieg*0.01, 2, klatka);
 6e8:	2a e0       	ldi	r18, 0x0A	; 10
 6ea:	37 ed       	ldi	r19, 0xD7	; 215
 6ec:	43 e2       	ldi	r20, 0x23	; 35
 6ee:	5c e3       	ldi	r21, 0x3C	; 60
 6f0:	6d 85       	ldd	r22, Y+13	; 0x0d
 6f2:	7e 85       	ldd	r23, Y+14	; 0x0e
 6f4:	8f 85       	ldd	r24, Y+15	; 0x0f
 6f6:	98 89       	ldd	r25, Y+16	; 0x10
 6f8:	d3 d1       	rcall	.+934    	; 0xaa0 <__mulsf3>
 6fa:	eb d0       	rcall	.+470    	; 0x8d2 <__fixsfsi>
 6fc:	dc 01       	movw	r26, r24
 6fe:	cb 01       	movw	r24, r22
 700:	49 89       	ldd	r20, Y+17	; 0x11
 702:	5e 8d       	ldd	r21, Y+30	; 0x1e
 704:	62 e0       	ldi	r22, 0x02	; 2
 706:	70 e0       	ldi	r23, 0x00	; 0
 708:	fd dc       	rcall	.-1542   	; 0x104 <liczba>
 70a:	6f cd       	rjmp	.-1314   	; 0x1ea <main+0x8c>
				}
				else
				{
					liczba(przebieg*0.001, 1, klatka);
 70c:	2f e6       	ldi	r18, 0x6F	; 111
 70e:	32 e1       	ldi	r19, 0x12	; 18
 710:	43 e8       	ldi	r20, 0x83	; 131
 712:	5a e3       	ldi	r21, 0x3A	; 58
 714:	6d 85       	ldd	r22, Y+13	; 0x0d
 716:	7e 85       	ldd	r23, Y+14	; 0x0e
 718:	8f 85       	ldd	r24, Y+15	; 0x0f
 71a:	98 89       	ldd	r25, Y+16	; 0x10
 71c:	c1 d1       	rcall	.+898    	; 0xaa0 <__mulsf3>
 71e:	d9 d0       	rcall	.+434    	; 0x8d2 <__fixsfsi>
 720:	dc 01       	movw	r26, r24
 722:	cb 01       	movw	r24, r22
 724:	49 89       	ldd	r20, Y+17	; 0x11
 726:	5e 8d       	ldd	r21, Y+30	; 0x1e
 728:	61 e0       	ldi	r22, 0x01	; 1
 72a:	70 e0       	ldi	r23, 0x00	; 0
 72c:	eb dc       	rcall	.-1578   	; 0x104 <liczba>
 72e:	5d cd       	rjmp	.-1350   	; 0x1ea <main+0x8c>

00000730 <__subsf3>:
 730:	50 58       	subi	r21, 0x80	; 128

00000732 <__addsf3>:
 732:	bb 27       	eor	r27, r27
 734:	aa 27       	eor	r26, r26
 736:	0e d0       	rcall	.+28     	; 0x754 <__addsf3x>
 738:	75 c1       	rjmp	.+746    	; 0xa24 <__fp_round>
 73a:	66 d1       	rcall	.+716    	; 0xa08 <__fp_pscA>
 73c:	30 f0       	brcs	.+12     	; 0x74a <__addsf3+0x18>
 73e:	6b d1       	rcall	.+726    	; 0xa16 <__fp_pscB>
 740:	20 f0       	brcs	.+8      	; 0x74a <__addsf3+0x18>
 742:	31 f4       	brne	.+12     	; 0x750 <__addsf3+0x1e>
 744:	9f 3f       	cpi	r25, 0xFF	; 255
 746:	11 f4       	brne	.+4      	; 0x74c <__addsf3+0x1a>
 748:	1e f4       	brtc	.+6      	; 0x750 <__addsf3+0x1e>
 74a:	5b c1       	rjmp	.+694    	; 0xa02 <__fp_nan>
 74c:	0e f4       	brtc	.+2      	; 0x750 <__addsf3+0x1e>
 74e:	e0 95       	com	r30
 750:	e7 fb       	bst	r30, 7
 752:	51 c1       	rjmp	.+674    	; 0x9f6 <__fp_inf>

00000754 <__addsf3x>:
 754:	e9 2f       	mov	r30, r25
 756:	77 d1       	rcall	.+750    	; 0xa46 <__fp_split3>
 758:	80 f3       	brcs	.-32     	; 0x73a <__addsf3+0x8>
 75a:	ba 17       	cp	r27, r26
 75c:	62 07       	cpc	r22, r18
 75e:	73 07       	cpc	r23, r19
 760:	84 07       	cpc	r24, r20
 762:	95 07       	cpc	r25, r21
 764:	18 f0       	brcs	.+6      	; 0x76c <__addsf3x+0x18>
 766:	71 f4       	brne	.+28     	; 0x784 <__addsf3x+0x30>
 768:	9e f5       	brtc	.+102    	; 0x7d0 <__addsf3x+0x7c>
 76a:	8f c1       	rjmp	.+798    	; 0xa8a <__fp_zero>
 76c:	0e f4       	brtc	.+2      	; 0x770 <__addsf3x+0x1c>
 76e:	e0 95       	com	r30
 770:	0b 2e       	mov	r0, r27
 772:	ba 2f       	mov	r27, r26
 774:	a0 2d       	mov	r26, r0
 776:	0b 01       	movw	r0, r22
 778:	b9 01       	movw	r22, r18
 77a:	90 01       	movw	r18, r0
 77c:	0c 01       	movw	r0, r24
 77e:	ca 01       	movw	r24, r20
 780:	a0 01       	movw	r20, r0
 782:	11 24       	eor	r1, r1
 784:	ff 27       	eor	r31, r31
 786:	59 1b       	sub	r21, r25
 788:	99 f0       	breq	.+38     	; 0x7b0 <__addsf3x+0x5c>
 78a:	59 3f       	cpi	r21, 0xF9	; 249
 78c:	50 f4       	brcc	.+20     	; 0x7a2 <__addsf3x+0x4e>
 78e:	50 3e       	cpi	r21, 0xE0	; 224
 790:	68 f1       	brcs	.+90     	; 0x7ec <__addsf3x+0x98>
 792:	1a 16       	cp	r1, r26
 794:	f0 40       	sbci	r31, 0x00	; 0
 796:	a2 2f       	mov	r26, r18
 798:	23 2f       	mov	r18, r19
 79a:	34 2f       	mov	r19, r20
 79c:	44 27       	eor	r20, r20
 79e:	58 5f       	subi	r21, 0xF8	; 248
 7a0:	f3 cf       	rjmp	.-26     	; 0x788 <__addsf3x+0x34>
 7a2:	46 95       	lsr	r20
 7a4:	37 95       	ror	r19
 7a6:	27 95       	ror	r18
 7a8:	a7 95       	ror	r26
 7aa:	f0 40       	sbci	r31, 0x00	; 0
 7ac:	53 95       	inc	r21
 7ae:	c9 f7       	brne	.-14     	; 0x7a2 <__addsf3x+0x4e>
 7b0:	7e f4       	brtc	.+30     	; 0x7d0 <__addsf3x+0x7c>
 7b2:	1f 16       	cp	r1, r31
 7b4:	ba 0b       	sbc	r27, r26
 7b6:	62 0b       	sbc	r22, r18
 7b8:	73 0b       	sbc	r23, r19
 7ba:	84 0b       	sbc	r24, r20
 7bc:	ba f0       	brmi	.+46     	; 0x7ec <__addsf3x+0x98>
 7be:	91 50       	subi	r25, 0x01	; 1
 7c0:	a1 f0       	breq	.+40     	; 0x7ea <__addsf3x+0x96>
 7c2:	ff 0f       	add	r31, r31
 7c4:	bb 1f       	adc	r27, r27
 7c6:	66 1f       	adc	r22, r22
 7c8:	77 1f       	adc	r23, r23
 7ca:	88 1f       	adc	r24, r24
 7cc:	c2 f7       	brpl	.-16     	; 0x7be <__addsf3x+0x6a>
 7ce:	0e c0       	rjmp	.+28     	; 0x7ec <__addsf3x+0x98>
 7d0:	ba 0f       	add	r27, r26
 7d2:	62 1f       	adc	r22, r18
 7d4:	73 1f       	adc	r23, r19
 7d6:	84 1f       	adc	r24, r20
 7d8:	48 f4       	brcc	.+18     	; 0x7ec <__addsf3x+0x98>
 7da:	87 95       	ror	r24
 7dc:	77 95       	ror	r23
 7de:	67 95       	ror	r22
 7e0:	b7 95       	ror	r27
 7e2:	f7 95       	ror	r31
 7e4:	9e 3f       	cpi	r25, 0xFE	; 254
 7e6:	08 f0       	brcs	.+2      	; 0x7ea <__addsf3x+0x96>
 7e8:	b3 cf       	rjmp	.-154    	; 0x750 <__addsf3+0x1e>
 7ea:	93 95       	inc	r25
 7ec:	88 0f       	add	r24, r24
 7ee:	08 f0       	brcs	.+2      	; 0x7f2 <__addsf3x+0x9e>
 7f0:	99 27       	eor	r25, r25
 7f2:	ee 0f       	add	r30, r30
 7f4:	97 95       	ror	r25
 7f6:	87 95       	ror	r24
 7f8:	08 95       	ret

000007fa <__cmpsf2>:
 7fa:	d9 d0       	rcall	.+434    	; 0x9ae <__fp_cmp>
 7fc:	08 f4       	brcc	.+2      	; 0x800 <__cmpsf2+0x6>
 7fe:	81 e0       	ldi	r24, 0x01	; 1
 800:	08 95       	ret

00000802 <__divsf3>:
 802:	0c d0       	rcall	.+24     	; 0x81c <__divsf3x>
 804:	0f c1       	rjmp	.+542    	; 0xa24 <__fp_round>
 806:	07 d1       	rcall	.+526    	; 0xa16 <__fp_pscB>
 808:	40 f0       	brcs	.+16     	; 0x81a <__divsf3+0x18>
 80a:	fe d0       	rcall	.+508    	; 0xa08 <__fp_pscA>
 80c:	30 f0       	brcs	.+12     	; 0x81a <__divsf3+0x18>
 80e:	21 f4       	brne	.+8      	; 0x818 <__divsf3+0x16>
 810:	5f 3f       	cpi	r21, 0xFF	; 255
 812:	19 f0       	breq	.+6      	; 0x81a <__divsf3+0x18>
 814:	f0 c0       	rjmp	.+480    	; 0x9f6 <__fp_inf>
 816:	51 11       	cpse	r21, r1
 818:	39 c1       	rjmp	.+626    	; 0xa8c <__fp_szero>
 81a:	f3 c0       	rjmp	.+486    	; 0xa02 <__fp_nan>

0000081c <__divsf3x>:
 81c:	14 d1       	rcall	.+552    	; 0xa46 <__fp_split3>
 81e:	98 f3       	brcs	.-26     	; 0x806 <__divsf3+0x4>

00000820 <__divsf3_pse>:
 820:	99 23       	and	r25, r25
 822:	c9 f3       	breq	.-14     	; 0x816 <__divsf3+0x14>
 824:	55 23       	and	r21, r21
 826:	b1 f3       	breq	.-20     	; 0x814 <__divsf3+0x12>
 828:	95 1b       	sub	r25, r21
 82a:	55 0b       	sbc	r21, r21
 82c:	bb 27       	eor	r27, r27
 82e:	aa 27       	eor	r26, r26
 830:	62 17       	cp	r22, r18
 832:	73 07       	cpc	r23, r19
 834:	84 07       	cpc	r24, r20
 836:	38 f0       	brcs	.+14     	; 0x846 <__divsf3_pse+0x26>
 838:	9f 5f       	subi	r25, 0xFF	; 255
 83a:	5f 4f       	sbci	r21, 0xFF	; 255
 83c:	22 0f       	add	r18, r18
 83e:	33 1f       	adc	r19, r19
 840:	44 1f       	adc	r20, r20
 842:	aa 1f       	adc	r26, r26
 844:	a9 f3       	breq	.-22     	; 0x830 <__divsf3_pse+0x10>
 846:	33 d0       	rcall	.+102    	; 0x8ae <__divsf3_pse+0x8e>
 848:	0e 2e       	mov	r0, r30
 84a:	3a f0       	brmi	.+14     	; 0x85a <__divsf3_pse+0x3a>
 84c:	e0 e8       	ldi	r30, 0x80	; 128
 84e:	30 d0       	rcall	.+96     	; 0x8b0 <__divsf3_pse+0x90>
 850:	91 50       	subi	r25, 0x01	; 1
 852:	50 40       	sbci	r21, 0x00	; 0
 854:	e6 95       	lsr	r30
 856:	00 1c       	adc	r0, r0
 858:	ca f7       	brpl	.-14     	; 0x84c <__divsf3_pse+0x2c>
 85a:	29 d0       	rcall	.+82     	; 0x8ae <__divsf3_pse+0x8e>
 85c:	fe 2f       	mov	r31, r30
 85e:	27 d0       	rcall	.+78     	; 0x8ae <__divsf3_pse+0x8e>
 860:	66 0f       	add	r22, r22
 862:	77 1f       	adc	r23, r23
 864:	88 1f       	adc	r24, r24
 866:	bb 1f       	adc	r27, r27
 868:	26 17       	cp	r18, r22
 86a:	37 07       	cpc	r19, r23
 86c:	48 07       	cpc	r20, r24
 86e:	ab 07       	cpc	r26, r27
 870:	b0 e8       	ldi	r27, 0x80	; 128
 872:	09 f0       	breq	.+2      	; 0x876 <__divsf3_pse+0x56>
 874:	bb 0b       	sbc	r27, r27
 876:	80 2d       	mov	r24, r0
 878:	bf 01       	movw	r22, r30
 87a:	ff 27       	eor	r31, r31
 87c:	93 58       	subi	r25, 0x83	; 131
 87e:	5f 4f       	sbci	r21, 0xFF	; 255
 880:	2a f0       	brmi	.+10     	; 0x88c <__divsf3_pse+0x6c>
 882:	9e 3f       	cpi	r25, 0xFE	; 254
 884:	51 05       	cpc	r21, r1
 886:	68 f0       	brcs	.+26     	; 0x8a2 <__divsf3_pse+0x82>
 888:	b6 c0       	rjmp	.+364    	; 0x9f6 <__fp_inf>
 88a:	00 c1       	rjmp	.+512    	; 0xa8c <__fp_szero>
 88c:	5f 3f       	cpi	r21, 0xFF	; 255
 88e:	ec f3       	brlt	.-6      	; 0x88a <__divsf3_pse+0x6a>
 890:	98 3e       	cpi	r25, 0xE8	; 232
 892:	dc f3       	brlt	.-10     	; 0x88a <__divsf3_pse+0x6a>
 894:	86 95       	lsr	r24
 896:	77 95       	ror	r23
 898:	67 95       	ror	r22
 89a:	b7 95       	ror	r27
 89c:	f7 95       	ror	r31
 89e:	9f 5f       	subi	r25, 0xFF	; 255
 8a0:	c9 f7       	brne	.-14     	; 0x894 <__divsf3_pse+0x74>
 8a2:	88 0f       	add	r24, r24
 8a4:	91 1d       	adc	r25, r1
 8a6:	96 95       	lsr	r25
 8a8:	87 95       	ror	r24
 8aa:	97 f9       	bld	r25, 7
 8ac:	08 95       	ret
 8ae:	e1 e0       	ldi	r30, 0x01	; 1
 8b0:	66 0f       	add	r22, r22
 8b2:	77 1f       	adc	r23, r23
 8b4:	88 1f       	adc	r24, r24
 8b6:	bb 1f       	adc	r27, r27
 8b8:	62 17       	cp	r22, r18
 8ba:	73 07       	cpc	r23, r19
 8bc:	84 07       	cpc	r24, r20
 8be:	ba 07       	cpc	r27, r26
 8c0:	20 f0       	brcs	.+8      	; 0x8ca <__divsf3_pse+0xaa>
 8c2:	62 1b       	sub	r22, r18
 8c4:	73 0b       	sbc	r23, r19
 8c6:	84 0b       	sbc	r24, r20
 8c8:	ba 0b       	sbc	r27, r26
 8ca:	ee 1f       	adc	r30, r30
 8cc:	88 f7       	brcc	.-30     	; 0x8b0 <__divsf3_pse+0x90>
 8ce:	e0 95       	com	r30
 8d0:	08 95       	ret

000008d2 <__fixsfsi>:
 8d2:	04 d0       	rcall	.+8      	; 0x8dc <__fixunssfsi>
 8d4:	68 94       	set
 8d6:	b1 11       	cpse	r27, r1
 8d8:	d9 c0       	rjmp	.+434    	; 0xa8c <__fp_szero>
 8da:	08 95       	ret

000008dc <__fixunssfsi>:
 8dc:	bc d0       	rcall	.+376    	; 0xa56 <__fp_splitA>
 8de:	88 f0       	brcs	.+34     	; 0x902 <__fixunssfsi+0x26>
 8e0:	9f 57       	subi	r25, 0x7F	; 127
 8e2:	90 f0       	brcs	.+36     	; 0x908 <__fixunssfsi+0x2c>
 8e4:	b9 2f       	mov	r27, r25
 8e6:	99 27       	eor	r25, r25
 8e8:	b7 51       	subi	r27, 0x17	; 23
 8ea:	a0 f0       	brcs	.+40     	; 0x914 <__fixunssfsi+0x38>
 8ec:	d1 f0       	breq	.+52     	; 0x922 <__fixunssfsi+0x46>
 8ee:	66 0f       	add	r22, r22
 8f0:	77 1f       	adc	r23, r23
 8f2:	88 1f       	adc	r24, r24
 8f4:	99 1f       	adc	r25, r25
 8f6:	1a f0       	brmi	.+6      	; 0x8fe <__fixunssfsi+0x22>
 8f8:	ba 95       	dec	r27
 8fa:	c9 f7       	brne	.-14     	; 0x8ee <__fixunssfsi+0x12>
 8fc:	12 c0       	rjmp	.+36     	; 0x922 <__fixunssfsi+0x46>
 8fe:	b1 30       	cpi	r27, 0x01	; 1
 900:	81 f0       	breq	.+32     	; 0x922 <__fixunssfsi+0x46>
 902:	c3 d0       	rcall	.+390    	; 0xa8a <__fp_zero>
 904:	b1 e0       	ldi	r27, 0x01	; 1
 906:	08 95       	ret
 908:	c0 c0       	rjmp	.+384    	; 0xa8a <__fp_zero>
 90a:	67 2f       	mov	r22, r23
 90c:	78 2f       	mov	r23, r24
 90e:	88 27       	eor	r24, r24
 910:	b8 5f       	subi	r27, 0xF8	; 248
 912:	39 f0       	breq	.+14     	; 0x922 <__fixunssfsi+0x46>
 914:	b9 3f       	cpi	r27, 0xF9	; 249
 916:	cc f3       	brlt	.-14     	; 0x90a <__fixunssfsi+0x2e>
 918:	86 95       	lsr	r24
 91a:	77 95       	ror	r23
 91c:	67 95       	ror	r22
 91e:	b3 95       	inc	r27
 920:	d9 f7       	brne	.-10     	; 0x918 <__fixunssfsi+0x3c>
 922:	3e f4       	brtc	.+14     	; 0x932 <__fixunssfsi+0x56>
 924:	90 95       	com	r25
 926:	80 95       	com	r24
 928:	70 95       	com	r23
 92a:	61 95       	neg	r22
 92c:	7f 4f       	sbci	r23, 0xFF	; 255
 92e:	8f 4f       	sbci	r24, 0xFF	; 255
 930:	9f 4f       	sbci	r25, 0xFF	; 255
 932:	08 95       	ret

00000934 <__floatunsisf>:
 934:	e8 94       	clt
 936:	09 c0       	rjmp	.+18     	; 0x94a <__floatsisf+0x12>

00000938 <__floatsisf>:
 938:	97 fb       	bst	r25, 7
 93a:	3e f4       	brtc	.+14     	; 0x94a <__floatsisf+0x12>
 93c:	90 95       	com	r25
 93e:	80 95       	com	r24
 940:	70 95       	com	r23
 942:	61 95       	neg	r22
 944:	7f 4f       	sbci	r23, 0xFF	; 255
 946:	8f 4f       	sbci	r24, 0xFF	; 255
 948:	9f 4f       	sbci	r25, 0xFF	; 255
 94a:	99 23       	and	r25, r25
 94c:	a9 f0       	breq	.+42     	; 0x978 <__floatsisf+0x40>
 94e:	f9 2f       	mov	r31, r25
 950:	96 e9       	ldi	r25, 0x96	; 150
 952:	bb 27       	eor	r27, r27
 954:	93 95       	inc	r25
 956:	f6 95       	lsr	r31
 958:	87 95       	ror	r24
 95a:	77 95       	ror	r23
 95c:	67 95       	ror	r22
 95e:	b7 95       	ror	r27
 960:	f1 11       	cpse	r31, r1
 962:	f8 cf       	rjmp	.-16     	; 0x954 <__floatsisf+0x1c>
 964:	fa f4       	brpl	.+62     	; 0x9a4 <__floatsisf+0x6c>
 966:	bb 0f       	add	r27, r27
 968:	11 f4       	brne	.+4      	; 0x96e <__floatsisf+0x36>
 96a:	60 ff       	sbrs	r22, 0
 96c:	1b c0       	rjmp	.+54     	; 0x9a4 <__floatsisf+0x6c>
 96e:	6f 5f       	subi	r22, 0xFF	; 255
 970:	7f 4f       	sbci	r23, 0xFF	; 255
 972:	8f 4f       	sbci	r24, 0xFF	; 255
 974:	9f 4f       	sbci	r25, 0xFF	; 255
 976:	16 c0       	rjmp	.+44     	; 0x9a4 <__floatsisf+0x6c>
 978:	88 23       	and	r24, r24
 97a:	11 f0       	breq	.+4      	; 0x980 <__floatsisf+0x48>
 97c:	96 e9       	ldi	r25, 0x96	; 150
 97e:	11 c0       	rjmp	.+34     	; 0x9a2 <__floatsisf+0x6a>
 980:	77 23       	and	r23, r23
 982:	21 f0       	breq	.+8      	; 0x98c <__floatsisf+0x54>
 984:	9e e8       	ldi	r25, 0x8E	; 142
 986:	87 2f       	mov	r24, r23
 988:	76 2f       	mov	r23, r22
 98a:	05 c0       	rjmp	.+10     	; 0x996 <__floatsisf+0x5e>
 98c:	66 23       	and	r22, r22
 98e:	71 f0       	breq	.+28     	; 0x9ac <__floatsisf+0x74>
 990:	96 e8       	ldi	r25, 0x86	; 134
 992:	86 2f       	mov	r24, r22
 994:	70 e0       	ldi	r23, 0x00	; 0
 996:	60 e0       	ldi	r22, 0x00	; 0
 998:	2a f0       	brmi	.+10     	; 0x9a4 <__floatsisf+0x6c>
 99a:	9a 95       	dec	r25
 99c:	66 0f       	add	r22, r22
 99e:	77 1f       	adc	r23, r23
 9a0:	88 1f       	adc	r24, r24
 9a2:	da f7       	brpl	.-10     	; 0x99a <__floatsisf+0x62>
 9a4:	88 0f       	add	r24, r24
 9a6:	96 95       	lsr	r25
 9a8:	87 95       	ror	r24
 9aa:	97 f9       	bld	r25, 7
 9ac:	08 95       	ret

000009ae <__fp_cmp>:
 9ae:	99 0f       	add	r25, r25
 9b0:	00 08       	sbc	r0, r0
 9b2:	55 0f       	add	r21, r21
 9b4:	aa 0b       	sbc	r26, r26
 9b6:	e0 e8       	ldi	r30, 0x80	; 128
 9b8:	fe ef       	ldi	r31, 0xFE	; 254
 9ba:	16 16       	cp	r1, r22
 9bc:	17 06       	cpc	r1, r23
 9be:	e8 07       	cpc	r30, r24
 9c0:	f9 07       	cpc	r31, r25
 9c2:	c0 f0       	brcs	.+48     	; 0x9f4 <__fp_cmp+0x46>
 9c4:	12 16       	cp	r1, r18
 9c6:	13 06       	cpc	r1, r19
 9c8:	e4 07       	cpc	r30, r20
 9ca:	f5 07       	cpc	r31, r21
 9cc:	98 f0       	brcs	.+38     	; 0x9f4 <__fp_cmp+0x46>
 9ce:	62 1b       	sub	r22, r18
 9d0:	73 0b       	sbc	r23, r19
 9d2:	84 0b       	sbc	r24, r20
 9d4:	95 0b       	sbc	r25, r21
 9d6:	39 f4       	brne	.+14     	; 0x9e6 <__fp_cmp+0x38>
 9d8:	0a 26       	eor	r0, r26
 9da:	61 f0       	breq	.+24     	; 0x9f4 <__fp_cmp+0x46>
 9dc:	23 2b       	or	r18, r19
 9de:	24 2b       	or	r18, r20
 9e0:	25 2b       	or	r18, r21
 9e2:	21 f4       	brne	.+8      	; 0x9ec <__fp_cmp+0x3e>
 9e4:	08 95       	ret
 9e6:	0a 26       	eor	r0, r26
 9e8:	09 f4       	brne	.+2      	; 0x9ec <__fp_cmp+0x3e>
 9ea:	a1 40       	sbci	r26, 0x01	; 1
 9ec:	a6 95       	lsr	r26
 9ee:	8f ef       	ldi	r24, 0xFF	; 255
 9f0:	81 1d       	adc	r24, r1
 9f2:	81 1d       	adc	r24, r1
 9f4:	08 95       	ret

000009f6 <__fp_inf>:
 9f6:	97 f9       	bld	r25, 7
 9f8:	9f 67       	ori	r25, 0x7F	; 127
 9fa:	80 e8       	ldi	r24, 0x80	; 128
 9fc:	70 e0       	ldi	r23, 0x00	; 0
 9fe:	60 e0       	ldi	r22, 0x00	; 0
 a00:	08 95       	ret

00000a02 <__fp_nan>:
 a02:	9f ef       	ldi	r25, 0xFF	; 255
 a04:	80 ec       	ldi	r24, 0xC0	; 192
 a06:	08 95       	ret

00000a08 <__fp_pscA>:
 a08:	00 24       	eor	r0, r0
 a0a:	0a 94       	dec	r0
 a0c:	16 16       	cp	r1, r22
 a0e:	17 06       	cpc	r1, r23
 a10:	18 06       	cpc	r1, r24
 a12:	09 06       	cpc	r0, r25
 a14:	08 95       	ret

00000a16 <__fp_pscB>:
 a16:	00 24       	eor	r0, r0
 a18:	0a 94       	dec	r0
 a1a:	12 16       	cp	r1, r18
 a1c:	13 06       	cpc	r1, r19
 a1e:	14 06       	cpc	r1, r20
 a20:	05 06       	cpc	r0, r21
 a22:	08 95       	ret

00000a24 <__fp_round>:
 a24:	09 2e       	mov	r0, r25
 a26:	03 94       	inc	r0
 a28:	00 0c       	add	r0, r0
 a2a:	11 f4       	brne	.+4      	; 0xa30 <__fp_round+0xc>
 a2c:	88 23       	and	r24, r24
 a2e:	52 f0       	brmi	.+20     	; 0xa44 <__fp_round+0x20>
 a30:	bb 0f       	add	r27, r27
 a32:	40 f4       	brcc	.+16     	; 0xa44 <__fp_round+0x20>
 a34:	bf 2b       	or	r27, r31
 a36:	11 f4       	brne	.+4      	; 0xa3c <__fp_round+0x18>
 a38:	60 ff       	sbrs	r22, 0
 a3a:	04 c0       	rjmp	.+8      	; 0xa44 <__fp_round+0x20>
 a3c:	6f 5f       	subi	r22, 0xFF	; 255
 a3e:	7f 4f       	sbci	r23, 0xFF	; 255
 a40:	8f 4f       	sbci	r24, 0xFF	; 255
 a42:	9f 4f       	sbci	r25, 0xFF	; 255
 a44:	08 95       	ret

00000a46 <__fp_split3>:
 a46:	57 fd       	sbrc	r21, 7
 a48:	90 58       	subi	r25, 0x80	; 128
 a4a:	44 0f       	add	r20, r20
 a4c:	55 1f       	adc	r21, r21
 a4e:	59 f0       	breq	.+22     	; 0xa66 <__fp_splitA+0x10>
 a50:	5f 3f       	cpi	r21, 0xFF	; 255
 a52:	71 f0       	breq	.+28     	; 0xa70 <__fp_splitA+0x1a>
 a54:	47 95       	ror	r20

00000a56 <__fp_splitA>:
 a56:	88 0f       	add	r24, r24
 a58:	97 fb       	bst	r25, 7
 a5a:	99 1f       	adc	r25, r25
 a5c:	61 f0       	breq	.+24     	; 0xa76 <__fp_splitA+0x20>
 a5e:	9f 3f       	cpi	r25, 0xFF	; 255
 a60:	79 f0       	breq	.+30     	; 0xa80 <__fp_splitA+0x2a>
 a62:	87 95       	ror	r24
 a64:	08 95       	ret
 a66:	12 16       	cp	r1, r18
 a68:	13 06       	cpc	r1, r19
 a6a:	14 06       	cpc	r1, r20
 a6c:	55 1f       	adc	r21, r21
 a6e:	f2 cf       	rjmp	.-28     	; 0xa54 <__fp_split3+0xe>
 a70:	46 95       	lsr	r20
 a72:	f1 df       	rcall	.-30     	; 0xa56 <__fp_splitA>
 a74:	08 c0       	rjmp	.+16     	; 0xa86 <__fp_splitA+0x30>
 a76:	16 16       	cp	r1, r22
 a78:	17 06       	cpc	r1, r23
 a7a:	18 06       	cpc	r1, r24
 a7c:	99 1f       	adc	r25, r25
 a7e:	f1 cf       	rjmp	.-30     	; 0xa62 <__fp_splitA+0xc>
 a80:	86 95       	lsr	r24
 a82:	71 05       	cpc	r23, r1
 a84:	61 05       	cpc	r22, r1
 a86:	08 94       	sec
 a88:	08 95       	ret

00000a8a <__fp_zero>:
 a8a:	e8 94       	clt

00000a8c <__fp_szero>:
 a8c:	bb 27       	eor	r27, r27
 a8e:	66 27       	eor	r22, r22
 a90:	77 27       	eor	r23, r23
 a92:	cb 01       	movw	r24, r22
 a94:	97 f9       	bld	r25, 7
 a96:	08 95       	ret

00000a98 <__gesf2>:
 a98:	8a df       	rcall	.-236    	; 0x9ae <__fp_cmp>
 a9a:	08 f4       	brcc	.+2      	; 0xa9e <__gesf2+0x6>
 a9c:	8f ef       	ldi	r24, 0xFF	; 255
 a9e:	08 95       	ret

00000aa0 <__mulsf3>:
 aa0:	0b d0       	rcall	.+22     	; 0xab8 <__mulsf3x>
 aa2:	c0 cf       	rjmp	.-128    	; 0xa24 <__fp_round>
 aa4:	b1 df       	rcall	.-158    	; 0xa08 <__fp_pscA>
 aa6:	28 f0       	brcs	.+10     	; 0xab2 <__mulsf3+0x12>
 aa8:	b6 df       	rcall	.-148    	; 0xa16 <__fp_pscB>
 aaa:	18 f0       	brcs	.+6      	; 0xab2 <__mulsf3+0x12>
 aac:	95 23       	and	r25, r21
 aae:	09 f0       	breq	.+2      	; 0xab2 <__mulsf3+0x12>
 ab0:	a2 cf       	rjmp	.-188    	; 0x9f6 <__fp_inf>
 ab2:	a7 cf       	rjmp	.-178    	; 0xa02 <__fp_nan>
 ab4:	11 24       	eor	r1, r1
 ab6:	ea cf       	rjmp	.-44     	; 0xa8c <__fp_szero>

00000ab8 <__mulsf3x>:
 ab8:	c6 df       	rcall	.-116    	; 0xa46 <__fp_split3>
 aba:	a0 f3       	brcs	.-24     	; 0xaa4 <__mulsf3+0x4>

00000abc <__mulsf3_pse>:
 abc:	95 9f       	mul	r25, r21
 abe:	d1 f3       	breq	.-12     	; 0xab4 <__mulsf3+0x14>
 ac0:	95 0f       	add	r25, r21
 ac2:	50 e0       	ldi	r21, 0x00	; 0
 ac4:	55 1f       	adc	r21, r21
 ac6:	62 9f       	mul	r22, r18
 ac8:	f0 01       	movw	r30, r0
 aca:	72 9f       	mul	r23, r18
 acc:	bb 27       	eor	r27, r27
 ace:	f0 0d       	add	r31, r0
 ad0:	b1 1d       	adc	r27, r1
 ad2:	63 9f       	mul	r22, r19
 ad4:	aa 27       	eor	r26, r26
 ad6:	f0 0d       	add	r31, r0
 ad8:	b1 1d       	adc	r27, r1
 ada:	aa 1f       	adc	r26, r26
 adc:	64 9f       	mul	r22, r20
 ade:	66 27       	eor	r22, r22
 ae0:	b0 0d       	add	r27, r0
 ae2:	a1 1d       	adc	r26, r1
 ae4:	66 1f       	adc	r22, r22
 ae6:	82 9f       	mul	r24, r18
 ae8:	22 27       	eor	r18, r18
 aea:	b0 0d       	add	r27, r0
 aec:	a1 1d       	adc	r26, r1
 aee:	62 1f       	adc	r22, r18
 af0:	73 9f       	mul	r23, r19
 af2:	b0 0d       	add	r27, r0
 af4:	a1 1d       	adc	r26, r1
 af6:	62 1f       	adc	r22, r18
 af8:	83 9f       	mul	r24, r19
 afa:	a0 0d       	add	r26, r0
 afc:	61 1d       	adc	r22, r1
 afe:	22 1f       	adc	r18, r18
 b00:	74 9f       	mul	r23, r20
 b02:	33 27       	eor	r19, r19
 b04:	a0 0d       	add	r26, r0
 b06:	61 1d       	adc	r22, r1
 b08:	23 1f       	adc	r18, r19
 b0a:	84 9f       	mul	r24, r20
 b0c:	60 0d       	add	r22, r0
 b0e:	21 1d       	adc	r18, r1
 b10:	82 2f       	mov	r24, r18
 b12:	76 2f       	mov	r23, r22
 b14:	6a 2f       	mov	r22, r26
 b16:	11 24       	eor	r1, r1
 b18:	9f 57       	subi	r25, 0x7F	; 127
 b1a:	50 40       	sbci	r21, 0x00	; 0
 b1c:	8a f0       	brmi	.+34     	; 0xb40 <__mulsf3_pse+0x84>
 b1e:	e1 f0       	breq	.+56     	; 0xb58 <__mulsf3_pse+0x9c>
 b20:	88 23       	and	r24, r24
 b22:	4a f0       	brmi	.+18     	; 0xb36 <__mulsf3_pse+0x7a>
 b24:	ee 0f       	add	r30, r30
 b26:	ff 1f       	adc	r31, r31
 b28:	bb 1f       	adc	r27, r27
 b2a:	66 1f       	adc	r22, r22
 b2c:	77 1f       	adc	r23, r23
 b2e:	88 1f       	adc	r24, r24
 b30:	91 50       	subi	r25, 0x01	; 1
 b32:	50 40       	sbci	r21, 0x00	; 0
 b34:	a9 f7       	brne	.-22     	; 0xb20 <__mulsf3_pse+0x64>
 b36:	9e 3f       	cpi	r25, 0xFE	; 254
 b38:	51 05       	cpc	r21, r1
 b3a:	70 f0       	brcs	.+28     	; 0xb58 <__mulsf3_pse+0x9c>
 b3c:	5c cf       	rjmp	.-328    	; 0x9f6 <__fp_inf>
 b3e:	a6 cf       	rjmp	.-180    	; 0xa8c <__fp_szero>
 b40:	5f 3f       	cpi	r21, 0xFF	; 255
 b42:	ec f3       	brlt	.-6      	; 0xb3e <__mulsf3_pse+0x82>
 b44:	98 3e       	cpi	r25, 0xE8	; 232
 b46:	dc f3       	brlt	.-10     	; 0xb3e <__mulsf3_pse+0x82>
 b48:	86 95       	lsr	r24
 b4a:	77 95       	ror	r23
 b4c:	67 95       	ror	r22
 b4e:	b7 95       	ror	r27
 b50:	f7 95       	ror	r31
 b52:	e7 95       	ror	r30
 b54:	9f 5f       	subi	r25, 0xFF	; 255
 b56:	c1 f7       	brne	.-16     	; 0xb48 <__mulsf3_pse+0x8c>
 b58:	fe 2b       	or	r31, r30
 b5a:	88 0f       	add	r24, r24
 b5c:	91 1d       	adc	r25, r1
 b5e:	96 95       	lsr	r25
 b60:	87 95       	ror	r24
 b62:	97 f9       	bld	r25, 7
 b64:	08 95       	ret

00000b66 <__divmodhi4>:
 b66:	97 fb       	bst	r25, 7
 b68:	07 2e       	mov	r0, r23
 b6a:	16 f4       	brtc	.+4      	; 0xb70 <__divmodhi4+0xa>
 b6c:	00 94       	com	r0
 b6e:	06 d0       	rcall	.+12     	; 0xb7c <__divmodhi4_neg1>
 b70:	77 fd       	sbrc	r23, 7
 b72:	08 d0       	rcall	.+16     	; 0xb84 <__divmodhi4_neg2>
 b74:	0b d0       	rcall	.+22     	; 0xb8c <__udivmodhi4>
 b76:	07 fc       	sbrc	r0, 7
 b78:	05 d0       	rcall	.+10     	; 0xb84 <__divmodhi4_neg2>
 b7a:	3e f4       	brtc	.+14     	; 0xb8a <__divmodhi4_exit>

00000b7c <__divmodhi4_neg1>:
 b7c:	90 95       	com	r25
 b7e:	81 95       	neg	r24
 b80:	9f 4f       	sbci	r25, 0xFF	; 255
 b82:	08 95       	ret

00000b84 <__divmodhi4_neg2>:
 b84:	70 95       	com	r23
 b86:	61 95       	neg	r22
 b88:	7f 4f       	sbci	r23, 0xFF	; 255

00000b8a <__divmodhi4_exit>:
 b8a:	08 95       	ret

00000b8c <__udivmodhi4>:
 b8c:	aa 1b       	sub	r26, r26
 b8e:	bb 1b       	sub	r27, r27
 b90:	51 e1       	ldi	r21, 0x11	; 17
 b92:	07 c0       	rjmp	.+14     	; 0xba2 <__udivmodhi4_ep>

00000b94 <__udivmodhi4_loop>:
 b94:	aa 1f       	adc	r26, r26
 b96:	bb 1f       	adc	r27, r27
 b98:	a6 17       	cp	r26, r22
 b9a:	b7 07       	cpc	r27, r23
 b9c:	10 f0       	brcs	.+4      	; 0xba2 <__udivmodhi4_ep>
 b9e:	a6 1b       	sub	r26, r22
 ba0:	b7 0b       	sbc	r27, r23

00000ba2 <__udivmodhi4_ep>:
 ba2:	88 1f       	adc	r24, r24
 ba4:	99 1f       	adc	r25, r25
 ba6:	5a 95       	dec	r21
 ba8:	a9 f7       	brne	.-22     	; 0xb94 <__udivmodhi4_loop>
 baa:	80 95       	com	r24
 bac:	90 95       	com	r25
 bae:	bc 01       	movw	r22, r24
 bb0:	cd 01       	movw	r24, r26
 bb2:	08 95       	ret

00000bb4 <eeprom_read_dword>:
 bb4:	a6 e1       	ldi	r26, 0x16	; 22
 bb6:	b0 e0       	ldi	r27, 0x00	; 0
 bb8:	44 e0       	ldi	r20, 0x04	; 4
 bba:	50 e0       	ldi	r21, 0x00	; 0
 bbc:	0a c0       	rjmp	.+20     	; 0xbd2 <eeprom_read_blraw>

00000bbe <eeprom_write_dword>:
 bbe:	24 2f       	mov	r18, r20
 bc0:	17 d0       	rcall	.+46     	; 0xbf0 <eeprom_write_r18>
 bc2:	25 2f       	mov	r18, r21
 bc4:	15 d0       	rcall	.+42     	; 0xbf0 <eeprom_write_r18>
 bc6:	00 c0       	rjmp	.+0      	; 0xbc8 <eeprom_write_word>

00000bc8 <eeprom_write_word>:
 bc8:	12 d0       	rcall	.+36     	; 0xbee <eeprom_write_byte>
 bca:	27 2f       	mov	r18, r23
 bcc:	11 c0       	rjmp	.+34     	; 0xbf0 <eeprom_write_r18>

00000bce <eeprom_read_block>:
 bce:	dc 01       	movw	r26, r24
 bd0:	cb 01       	movw	r24, r22

00000bd2 <eeprom_read_blraw>:
 bd2:	fc 01       	movw	r30, r24
 bd4:	e1 99       	sbic	0x1c, 1	; 28
 bd6:	fe cf       	rjmp	.-4      	; 0xbd4 <eeprom_read_blraw+0x2>
 bd8:	06 c0       	rjmp	.+12     	; 0xbe6 <eeprom_read_blraw+0x14>
 bda:	ff bb       	out	0x1f, r31	; 31
 bdc:	ee bb       	out	0x1e, r30	; 30
 bde:	e0 9a       	sbi	0x1c, 0	; 28
 be0:	31 96       	adiw	r30, 0x01	; 1
 be2:	0d b2       	in	r0, 0x1d	; 29
 be4:	0d 92       	st	X+, r0
 be6:	41 50       	subi	r20, 0x01	; 1
 be8:	50 40       	sbci	r21, 0x00	; 0
 bea:	b8 f7       	brcc	.-18     	; 0xbda <eeprom_read_blraw+0x8>
 bec:	08 95       	ret

00000bee <eeprom_write_byte>:
 bee:	26 2f       	mov	r18, r22

00000bf0 <eeprom_write_r18>:
 bf0:	e1 99       	sbic	0x1c, 1	; 28
 bf2:	fe cf       	rjmp	.-4      	; 0xbf0 <eeprom_write_r18>
 bf4:	9f bb       	out	0x1f, r25	; 31
 bf6:	8e bb       	out	0x1e, r24	; 30
 bf8:	2d bb       	out	0x1d, r18	; 29
 bfa:	0f b6       	in	r0, 0x3f	; 63
 bfc:	f8 94       	cli
 bfe:	e2 9a       	sbi	0x1c, 2	; 28
 c00:	e1 9a       	sbi	0x1c, 1	; 28
 c02:	0f be       	out	0x3f, r0	; 63
 c04:	01 96       	adiw	r24, 0x01	; 1
 c06:	08 95       	ret

00000c08 <_exit>:
 c08:	f8 94       	cli

00000c0a <__stop_program>:
 c0a:	ff cf       	rjmp	.-2      	; 0xc0a <__stop_program>

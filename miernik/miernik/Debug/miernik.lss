
miernik.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c1a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000c92  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .eeprom       00000004  00810000  00810000  00000c8e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000030  00000000  00000000  00000c92  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000cc4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000d00  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e35  00000000  00000000  00000dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000665  00000000  00000000  00001c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000833  00000000  00000000  00002272  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  00002aa8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f5  00000000  00000000  00002b48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000092e  00000000  00000000  00002f3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  0000386b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1d c0       	rjmp	.+58     	; 0x3c <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>
  26:	1b c0       	rjmp	.+54     	; 0x5e <cyfra+0x10>
  28:	1d c0       	rjmp	.+58     	; 0x64 <cyfra+0x16>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <cyfra+0x1c>
  2c:	21 c0       	rjmp	.+66     	; 0x70 <cyfra+0x22>
  2e:	23 c0       	rjmp	.+70     	; 0x76 <cyfra+0x28>
  30:	25 c0       	rjmp	.+74     	; 0x7c <cyfra+0x2e>
  32:	27 c0       	rjmp	.+78     	; 0x82 <cyfra+0x34>
  34:	29 c0       	rjmp	.+82     	; 0x88 <cyfra+0x3a>
  36:	2b c0       	rjmp	.+86     	; 0x8e <cyfra+0x40>
  38:	2d c0       	rjmp	.+90     	; 0x94 <cyfra+0x46>
  3a:	2f c0       	rjmp	.+94     	; 0x9a <cyfra+0x4c>

0000003c <__ctors_end>:
  3c:	11 24       	eor	r1, r1
  3e:	1f be       	out	0x3f, r1	; 63
  40:	cf e5       	ldi	r28, 0x5F	; 95
  42:	d4 e0       	ldi	r29, 0x04	; 4
  44:	de bf       	out	0x3e, r29	; 62
  46:	cd bf       	out	0x3d, r28	; 61
  48:	a8 d0       	rcall	.+336    	; 0x19a <main>
  4a:	e5 c5       	rjmp	.+3018   	; 0xc16 <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <cyfra>:
#include "util/delay.h"
#include <avr/eeprom.h>

void cyfra(unsigned char k)
{
	switch(k)
  4e:	90 e0       	ldi	r25, 0x00	; 0
  50:	8b 30       	cpi	r24, 0x0B	; 11
  52:	91 05       	cpc	r25, r1
  54:	28 f5       	brcc	.+74     	; 0xa0 <cyfra+0x52>
  56:	fc 01       	movw	r30, r24
  58:	ed 5e       	subi	r30, 0xED	; 237
  5a:	ff 4f       	sbci	r31, 0xFF	; 255
  5c:	09 94       	ijmp
	{
		case 0:
		{
			PORTD= 0b00000101;
  5e:	85 e0       	ldi	r24, 0x05	; 5
  60:	82 bb       	out	0x12, r24	; 18
			break;
  62:	08 95       	ret
		}
		case 1:
		{
			PORTD= 0b11011101;
  64:	8d ed       	ldi	r24, 0xDD	; 221
  66:	82 bb       	out	0x12, r24	; 18
			break;
  68:	08 95       	ret
		}
		case 2:
		{
			PORTD= 0b01000110;
  6a:	86 e4       	ldi	r24, 0x46	; 70
  6c:	82 bb       	out	0x12, r24	; 18
			break;
  6e:	08 95       	ret
		}
		case 3:
		{
			PORTD= 0b01010100;
  70:	84 e5       	ldi	r24, 0x54	; 84
  72:	82 bb       	out	0x12, r24	; 18
			break;
  74:	08 95       	ret
		}
		case 4:
		{
			PORTD= 0b10011100;
  76:	8c e9       	ldi	r24, 0x9C	; 156
  78:	82 bb       	out	0x12, r24	; 18
			break;
  7a:	08 95       	ret
		}
		case 5:
		{
			PORTD= 0b00110100;
  7c:	84 e3       	ldi	r24, 0x34	; 52
  7e:	82 bb       	out	0x12, r24	; 18
			break;
  80:	08 95       	ret
		}
		case 6:
		{
			PORTD= 0b00100100;
  82:	84 e2       	ldi	r24, 0x24	; 36
  84:	82 bb       	out	0x12, r24	; 18
			break;
  86:	08 95       	ret
		}
		case 7:
		{
			PORTD= 0b01011101;
  88:	8d e5       	ldi	r24, 0x5D	; 93
  8a:	82 bb       	out	0x12, r24	; 18
			break;
  8c:	08 95       	ret
		}
		case 8:
		{
			PORTD= 0b00000100;
  8e:	84 e0       	ldi	r24, 0x04	; 4
  90:	82 bb       	out	0x12, r24	; 18
			break;
  92:	08 95       	ret
		}
		case 9:
		{
			PORTD= 0b00010100;
  94:	84 e1       	ldi	r24, 0x14	; 20
  96:	82 bb       	out	0x12, r24	; 18
			break;
  98:	08 95       	ret
		}
		case 10:
		{
			PORTD= 0b11111011;
  9a:	8b ef       	ldi	r24, 0xFB	; 251
  9c:	82 bb       	out	0x12, r24	; 18
			break;
  9e:	08 95       	ret
		}
		default:
		{
			PORTD= 0xff;
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	82 bb       	out	0x12, r24	; 18
  a4:	08 95       	ret

000000a6 <numercyfry>:
	}
}

void numercyfry(unsigned char k)
{
	switch(k)
  a6:	82 30       	cpi	r24, 0x02	; 2
  a8:	61 f0       	breq	.+24     	; 0xc2 <numercyfry+0x1c>
  aa:	83 30       	cpi	r24, 0x03	; 3
  ac:	91 f0       	breq	.+36     	; 0xd2 <numercyfry+0x2c>
  ae:	81 30       	cpi	r24, 0x01	; 1
  b0:	c1 f4       	brne	.+48     	; 0xe2 <numercyfry+0x3c>
	{
		case 1:
		{
			if((PINC & 32) == 0)
  b2:	9d 99       	sbic	0x13, 5	; 19
  b4:	03 c0       	rjmp	.+6      	; 0xbc <numercyfry+0x16>
			{
				PORTB= 0b00001001;
  b6:	89 e0       	ldi	r24, 0x09	; 9
  b8:	88 bb       	out	0x18, r24	; 24
  ba:	08 95       	ret
			}
			else
			{
				PORTB= 0b00000001;;
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	88 bb       	out	0x18, r24	; 24
  c0:	08 95       	ret
			}
			break;
		}
		case 2:
		{
			if((PINC & 32) == 0)
  c2:	9d 99       	sbic	0x13, 5	; 19
  c4:	03 c0       	rjmp	.+6      	; 0xcc <numercyfry+0x26>
			{
				PORTB= 0b00001010;
  c6:	8a e0       	ldi	r24, 0x0A	; 10
  c8:	88 bb       	out	0x18, r24	; 24
  ca:	08 95       	ret
			}
			else
			{
				PORTB= 0b00000010;;
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	88 bb       	out	0x18, r24	; 24
  d0:	08 95       	ret
			}
			break;
		}
		case 3:
		{
			if((PINC & 32) == 0)
  d2:	9d 99       	sbic	0x13, 5	; 19
  d4:	03 c0       	rjmp	.+6      	; 0xdc <numercyfry+0x36>
			{
				PORTB= 0b00001100;
  d6:	8c e0       	ldi	r24, 0x0C	; 12
  d8:	88 bb       	out	0x18, r24	; 24
  da:	08 95       	ret
			}
			else
			{
				PORTB= 0b00000100;;
  dc:	84 e0       	ldi	r24, 0x04	; 4
  de:	88 bb       	out	0x18, r24	; 24
  e0:	08 95       	ret
			}
			break;
		}
		default:
		{
			if((PINC & 32) == 0)
  e2:	9d 99       	sbic	0x13, 5	; 19
  e4:	03 c0       	rjmp	.+6      	; 0xec <numercyfry+0x46>
			{
				PORTB= 0b00001000;
  e6:	88 e0       	ldi	r24, 0x08	; 8
  e8:	88 bb       	out	0x18, r24	; 24
  ea:	08 95       	ret
			}
			else
			{
				PORTB= 0b00000000;;
  ec:	18 ba       	out	0x18, r1	; 24
  ee:	08 95       	ret

000000f0 <liczba>:
		}
	}
}

void liczba(int k, int dot, int milis)
{
  f0:	8f 92       	push	r8
  f2:	9f 92       	push	r9
  f4:	af 92       	push	r10
  f6:	bf 92       	push	r11
  f8:	cf 92       	push	r12
  fa:	df 92       	push	r13
  fc:	ef 92       	push	r14
  fe:	ff 92       	push	r15
 100:	0f 93       	push	r16
 102:	1f 93       	push	r17
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	86 2e       	mov	r8, r22
	unsigned char cyf, i;
	int kopiak;
	for(int j= 0; j <= milis/8; j++)
 10a:	55 23       	and	r21, r21
 10c:	14 f4       	brge	.+4      	; 0x112 <liczba+0x22>
 10e:	49 5f       	subi	r20, 0xF9	; 249
 110:	5f 4f       	sbci	r21, 0xFF	; 255
 112:	6a 01       	movw	r12, r20
 114:	d5 94       	asr	r13
 116:	c7 94       	ror	r12
 118:	d5 94       	asr	r13
 11a:	c7 94       	ror	r12
 11c:	d5 94       	asr	r13
 11e:	c7 94       	ror	r12
 120:	dd 20       	and	r13, r13
 122:	24 f5       	brge	.+72     	; 0x16c <liczba+0x7c>
 124:	2d c0       	rjmp	.+90     	; 0x180 <liczba+0x90>
	{
		kopiak= k;
		i= 0;
		for(int l= 0; l < 3; l++)
		{
			i++;
 126:	cf 5f       	subi	r28, 0xFF	; 255
			cyf= kopiak% 10;
			cyfra(cyf);
 128:	b8 01       	movw	r22, r16
 12a:	24 d5       	rcall	.+2632   	; 0xb74 <__divmodhi4>
 12c:	b6 2e       	mov	r11, r22
 12e:	d7 2f       	mov	r29, r23
 130:	8e df       	rcall	.-228    	; 0x4e <cyfra>
			numercyfry(i);
 132:	8c 2f       	mov	r24, r28
 134:	b8 df       	rcall	.-144    	; 0xa6 <numercyfry>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 136:	8f e9       	ldi	r24, 0x9F	; 159
 138:	9f e0       	ldi	r25, 0x0F	; 15
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <liczba+0x4a>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <liczba+0x50>
 140:	00 00       	nop
			_delay_ms(2);
			kopiak= kopiak/10;
 142:	8b 2d       	mov	r24, r11
 144:	9d 2f       	mov	r25, r29
	int kopiak;
	for(int j= 0; j <= milis/8; j++)
	{
		kopiak= k;
		i= 0;
		for(int l= 0; l < 3; l++)
 146:	c3 30       	cpi	r28, 0x03	; 3
 148:	71 f7       	brne	.-36     	; 0x126 <liczba+0x36>
			cyfra(cyf);
			numercyfry(i);
			_delay_ms(2);
			kopiak= kopiak/10;
		}
		cyfra(10);
 14a:	8a e0       	ldi	r24, 0x0A	; 10
 14c:	80 df       	rcall	.-256    	; 0x4e <cyfra>
		numercyfry(dot);
 14e:	88 2d       	mov	r24, r8
 150:	aa df       	rcall	.-172    	; 0xa6 <numercyfry>
 152:	8f e9       	ldi	r24, 0x9F	; 159
 154:	9f e0       	ldi	r25, 0x0F	; 15
 156:	01 97       	sbiw	r24, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <liczba+0x66>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <liczba+0x6c>
 15c:	00 00       	nop

void liczba(int k, int dot, int milis)
{
	unsigned char cyf, i;
	int kopiak;
	for(int j= 0; j <= milis/8; j++)
 15e:	9f ef       	ldi	r25, 0xFF	; 255
 160:	e9 1a       	sub	r14, r25
 162:	f9 0a       	sbc	r15, r25
 164:	ce 14       	cp	r12, r14
 166:	df 04       	cpc	r13, r15
 168:	3c f4       	brge	.+14     	; 0x178 <liczba+0x88>
 16a:	0a c0       	rjmp	.+20     	; 0x180 <liczba+0x90>
 16c:	e1 2c       	mov	r14, r1
 16e:	f1 2c       	mov	r15, r1
		}
	}
}

void liczba(int k, int dot, int milis)
{
 170:	98 2e       	mov	r9, r24
 172:	a9 2e       	mov	r10, r25
		i= 0;
		for(int l= 0; l < 3; l++)
		{
			i++;
			cyf= kopiak% 10;
			cyfra(cyf);
 174:	0a e0       	ldi	r16, 0x0A	; 10
 176:	10 e0       	ldi	r17, 0x00	; 0
		}
	}
}

void liczba(int k, int dot, int milis)
{
 178:	89 2d       	mov	r24, r9
 17a:	9a 2d       	mov	r25, r10
 17c:	c0 e0       	ldi	r28, 0x00	; 0
 17e:	d3 cf       	rjmp	.-90     	; 0x126 <liczba+0x36>
		cyfra(10);
		numercyfry(dot);
		_delay_ms(2);
	}
	
}
 180:	df 91       	pop	r29
 182:	cf 91       	pop	r28
 184:	1f 91       	pop	r17
 186:	0f 91       	pop	r16
 188:	ff 90       	pop	r15
 18a:	ef 90       	pop	r14
 18c:	df 90       	pop	r13
 18e:	cf 90       	pop	r12
 190:	bf 90       	pop	r11
 192:	af 90       	pop	r10
 194:	9f 90       	pop	r9
 196:	8f 90       	pop	r8
 198:	08 95       	ret

0000019a <main>:

float przebieg_ee EEMEM;

int main()
{
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	cd b7       	in	r28, 0x3d	; 61
 1a0:	de b7       	in	r29, 0x3e	; 62
 1a2:	6f 97       	sbiw	r28, 0x1f	; 31
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	f8 94       	cli
 1a8:	de bf       	out	0x3e, r29	; 62
 1aa:	0f be       	out	0x3f, r0	; 63
 1ac:	cd bf       	out	0x3d, r28	; 61
	DDRB= 0b00001111;
 1ae:	8f e0       	ldi	r24, 0x0F	; 15
 1b0:	87 bb       	out	0x17, r24	; 23
	DDRD= 0b11111111;
 1b2:	8f ef       	ldi	r24, 0xFF	; 255
 1b4:	81 bb       	out	0x11, r24	; 17
	DDRC= 0b00000000;
 1b6:	14 ba       	out	0x14, r1	; 20
	PORTC= 0b00000111;
 1b8:	87 e0       	ldi	r24, 0x07	; 7
 1ba:	85 bb       	out	0x15, r24	; 21
	
	TCCR1B= 0b00000101; // prescaler = 1024
 1bc:	85 e0       	ldi	r24, 0x05	; 5
 1be:	8e bd       	out	0x2e, r24	; 46
	TCNT1= 0;
 1c0:	1d bc       	out	0x2d, r1	; 45
 1c2:	1c bc       	out	0x2c, r1	; 44
	TIFR= 1 << TOV1;
 1c4:	84 e0       	ldi	r24, 0x04	; 4
 1c6:	88 bf       	out	0x38, r24	; 56
	float dystans= 0, przebieg;
	
	float predkosc= 0, srednia_predkosc= 0, rpm= 0, mnoznik= 3.6;
	float czas, caly_czas= 0;
	
	przebieg= eeprom_read_float(&przebieg_ee);
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	fa d4       	rcall	.+2548   	; 0xbc2 <eeprom_read_dword>
 1ce:	69 87       	std	Y+9, r22	; 0x09
 1d0:	7a 87       	std	Y+10, r23	; 0x0a
 1d2:	8b 87       	std	Y+11, r24	; 0x0b
 1d4:	9c 87       	std	Y+12, r25	; 0x0c
	const float obwod= 2.18; // [m]
	unsigned char poprzedni= 0, teraz= 0, poprzedni_guzik0= 0, teraz_guzik0= 0, poprzedni_guzik1= 0, teraz_guzik1= 0, poprzedni_guzik2= 0, teraz_guzik2= 0, tryb= 0;
	float dystans= 0, przebieg;
	
	float predkosc= 0, srednia_predkosc= 0, rpm= 0, mnoznik= 3.6;
	float czas, caly_czas= 0;
 1d6:	1a 8a       	std	Y+18, r1	; 0x12
 1d8:	1b 8a       	std	Y+19, r1	; 0x13
 1da:	1c 8a       	std	Y+20, r1	; 0x14
 1dc:	1d 8a       	std	Y+21, r1	; 0x15
	
	const float obwod= 2.18; // [m]
	unsigned char poprzedni= 0, teraz= 0, poprzedni_guzik0= 0, teraz_guzik0= 0, poprzedni_guzik1= 0, teraz_guzik1= 0, poprzedni_guzik2= 0, teraz_guzik2= 0, tryb= 0;
	float dystans= 0, przebieg;
	
	float predkosc= 0, srednia_predkosc= 0, rpm= 0, mnoznik= 3.6;
 1de:	26 e6       	ldi	r18, 0x66	; 102
 1e0:	2e 87       	std	Y+14, r18	; 0x0e
 1e2:	86 e6       	ldi	r24, 0x66	; 102
 1e4:	8f 87       	std	Y+15, r24	; 0x0f
 1e6:	96 e6       	ldi	r25, 0x66	; 102
 1e8:	98 8b       	std	Y+16, r25	; 0x10
 1ea:	20 e4       	ldi	r18, 0x40	; 64
 1ec:	29 8b       	std	Y+17, r18	; 0x11
 1ee:	19 82       	std	Y+1, r1	; 0x01
 1f0:	1a 82       	std	Y+2, r1	; 0x02
 1f2:	1b 82       	std	Y+3, r1	; 0x03
 1f4:	1c 82       	std	Y+4, r1	; 0x04
 1f6:	1a 8e       	std	Y+26, r1	; 0x1a
 1f8:	1b 8e       	std	Y+27, r1	; 0x1b
 1fa:	1c 8e       	std	Y+28, r1	; 0x1c
 1fc:	1d 8e       	std	Y+29, r1	; 0x1d
 1fe:	1e 8a       	std	Y+22, r1	; 0x16
 200:	1f 8a       	std	Y+23, r1	; 0x17
 202:	18 8e       	std	Y+24, r1	; 0x18
 204:	19 8e       	std	Y+25, r1	; 0x19
	TCNT1= 0;
	TIFR= 1 << TOV1;
	
	const float obwod= 2.18; // [m]
	unsigned char poprzedni= 0, teraz= 0, poprzedni_guzik0= 0, teraz_guzik0= 0, poprzedni_guzik1= 0, teraz_guzik1= 0, poprzedni_guzik2= 0, teraz_guzik2= 0, tryb= 0;
	float dystans= 0, przebieg;
 206:	1d 82       	std	Y+5, r1	; 0x05
 208:	1e 82       	std	Y+6, r1	; 0x06
 20a:	1f 82       	std	Y+7, r1	; 0x07
 20c:	18 86       	std	Y+8, r1	; 0x08
	TCCR1B= 0b00000101; // prescaler = 1024
	TCNT1= 0;
	TIFR= 1 << TOV1;
	
	const float obwod= 2.18; // [m]
	unsigned char poprzedni= 0, teraz= 0, poprzedni_guzik0= 0, teraz_guzik0= 0, poprzedni_guzik1= 0, teraz_guzik1= 0, poprzedni_guzik2= 0, teraz_guzik2= 0, tryb= 0;
 20e:	41 2c       	mov	r4, r1
 210:	51 2c       	mov	r5, r1
 212:	61 2c       	mov	r6, r1
 214:	71 2c       	mov	r7, r1
 216:	20 e0       	ldi	r18, 0x00	; 0
	
	przebieg= eeprom_read_float(&przebieg_ee);
	
	while(1)
	{
		teraz= !(PINC & 32);
 218:	33 24       	eor	r3, r3
 21a:	33 94       	inc	r3
 21c:	21 2c       	mov	r2, r1
 21e:	97 2c       	mov	r9, r7
 220:	86 2c       	mov	r8, r6
 222:	5e 8e       	std	Y+30, r5	; 0x1e
 224:	4f 8e       	std	Y+31, r4	; 0x1f
 226:	04 c0       	rjmp	.+8      	; 0x230 <main+0x96>
 228:	21 2f       	mov	r18, r17
 22a:	90 2e       	mov	r9, r16
 22c:	87 2c       	mov	r8, r7
 22e:	6e 8e       	std	Y+30, r6	; 0x1e
 230:	83 b3       	in	r24, 0x13	; 19
 232:	80 72       	andi	r24, 0x20	; 32
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	13 2d       	mov	r17, r3
 238:	00 97       	sbiw	r24, 0x00	; 0
 23a:	09 f0       	breq	.+2      	; 0x23e <main+0xa4>
 23c:	12 2d       	mov	r17, r2
		teraz_guzik0= !(PINC & 1);
 23e:	33 b3       	in	r19, 0x13	; 19
 240:	03 2d       	mov	r16, r3
 242:	30 fb       	bst	r19, 0
 244:	aa 24       	eor	r10, r10
 246:	a0 f8       	bld	r10, 0
 248:	b1 2c       	mov	r11, r1
 24a:	30 fd       	sbrc	r19, 0
 24c:	02 2d       	mov	r16, r2
		teraz_guzik1= !(PINC & 2);
 24e:	33 b3       	in	r19, 0x13	; 19
 250:	32 70       	andi	r19, 0x02	; 2
 252:	e3 2e       	mov	r14, r19
 254:	f1 2c       	mov	r15, r1
 256:	73 2c       	mov	r7, r3
 258:	e1 14       	cp	r14, r1
 25a:	f1 04       	cpc	r15, r1
 25c:	09 f0       	breq	.+2      	; 0x260 <main+0xc6>
 25e:	72 2c       	mov	r7, r2
		teraz_guzik2= !(PINC & 4);
 260:	33 b3       	in	r19, 0x13	; 19
 262:	34 70       	andi	r19, 0x04	; 4
 264:	43 2e       	mov	r4, r19
 266:	51 2c       	mov	r5, r1
 268:	63 2c       	mov	r6, r3
 26a:	41 14       	cp	r4, r1
 26c:	51 04       	cpc	r5, r1
 26e:	09 f0       	breq	.+2      	; 0x272 <main+0xd8>
 270:	62 2c       	mov	r6, r2
		
		if( (poprzedni == 0) && (teraz == 1) )
 272:	21 11       	cpse	r18, r1
 274:	72 c0       	rjmp	.+228    	; 0x35a <main+0x1c0>
 276:	89 2b       	or	r24, r25
 278:	09 f0       	breq	.+2      	; 0x27c <main+0xe2>
 27a:	6f c0       	rjmp	.+222    	; 0x35a <main+0x1c0>
		{
			dystans+= obwod;
 27c:	2f e1       	ldi	r18, 0x1F	; 31
 27e:	35 e8       	ldi	r19, 0x85	; 133
 280:	4b e0       	ldi	r20, 0x0B	; 11
 282:	50 e4       	ldi	r21, 0x40	; 64
 284:	6d 81       	ldd	r22, Y+5	; 0x05
 286:	7e 81       	ldd	r23, Y+6	; 0x06
 288:	8f 81       	ldd	r24, Y+7	; 0x07
 28a:	98 85       	ldd	r25, Y+8	; 0x08
 28c:	5d d2       	rcall	.+1210   	; 0x748 <__addsf3>
 28e:	6d 83       	std	Y+5, r22	; 0x05
 290:	7e 83       	std	Y+6, r23	; 0x06
 292:	8f 83       	std	Y+7, r24	; 0x07
 294:	98 87       	std	Y+8, r25	; 0x08
			przebieg+= obwod;
 296:	2f e1       	ldi	r18, 0x1F	; 31
 298:	35 e8       	ldi	r19, 0x85	; 133
 29a:	4b e0       	ldi	r20, 0x0B	; 11
 29c:	50 e4       	ldi	r21, 0x40	; 64
 29e:	69 85       	ldd	r22, Y+9	; 0x09
 2a0:	7a 85       	ldd	r23, Y+10	; 0x0a
 2a2:	8b 85       	ldd	r24, Y+11	; 0x0b
 2a4:	9c 85       	ldd	r25, Y+12	; 0x0c
 2a6:	50 d2       	rcall	.+1184   	; 0x748 <__addsf3>
 2a8:	69 87       	std	Y+9, r22	; 0x09
 2aa:	7a 87       	std	Y+10, r23	; 0x0a
 2ac:	8b 87       	std	Y+11, r24	; 0x0b
 2ae:	9c 87       	std	Y+12, r25	; 0x0c
			
			if( TIFR & (1 << TOV1) )
 2b0:	08 b6       	in	r0, 0x38	; 56
 2b2:	02 fe       	sbrs	r0, 2
 2b4:	0e c0       	rjmp	.+28     	; 0x2d2 <main+0x138>
			{
				czas= 10000;
				TIFR= 1 << TOV1;
 2b6:	84 e0       	ldi	r24, 0x04	; 4
 2b8:	88 bf       	out	0x38, r24	; 56
			dystans+= obwod;
			przebieg+= obwod;
			
			if( TIFR & (1 << TOV1) )
			{
				czas= 10000;
 2ba:	19 82       	std	Y+1, r1	; 0x01
 2bc:	90 e4       	ldi	r25, 0x40	; 64
 2be:	9d 87       	std	Y+13, r25	; 0x0d
 2c0:	0f 2e       	mov	r0, r31
 2c2:	fc e1       	ldi	r31, 0x1C	; 28
 2c4:	cf 2e       	mov	r12, r31
 2c6:	f0 2d       	mov	r31, r0
 2c8:	0f 2e       	mov	r0, r31
 2ca:	f6 e4       	ldi	r31, 0x46	; 70
 2cc:	df 2e       	mov	r13, r31
 2ce:	f0 2d       	mov	r31, r0
 2d0:	1b c0       	rjmp	.+54     	; 0x308 <main+0x16e>
				TIFR= 1 << TOV1;
			} else
			{
				czas= TCNT1*.000128;
 2d2:	6c b5       	in	r22, 0x2c	; 44
 2d4:	7d b5       	in	r23, 0x2d	; 45
 2d6:	80 e0       	ldi	r24, 0x00	; 0
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	37 d3       	rcall	.+1646   	; 0x94a <__floatunsisf>
 2dc:	2d eb       	ldi	r18, 0xBD	; 189
 2de:	37 e3       	ldi	r19, 0x37	; 55
 2e0:	46 e0       	ldi	r20, 0x06	; 6
 2e2:	59 e3       	ldi	r21, 0x39	; 57
 2e4:	e4 d3       	rcall	.+1992   	; 0xaae <__mulsf3>
 2e6:	69 83       	std	Y+1, r22	; 0x01
 2e8:	7d 87       	std	Y+13, r23	; 0x0d
 2ea:	c8 2e       	mov	r12, r24
 2ec:	d9 2e       	mov	r13, r25
				caly_czas+= czas;
 2ee:	26 2f       	mov	r18, r22
 2f0:	37 2f       	mov	r19, r23
 2f2:	48 2f       	mov	r20, r24
 2f4:	59 2f       	mov	r21, r25
 2f6:	6a 89       	ldd	r22, Y+18	; 0x12
 2f8:	7b 89       	ldd	r23, Y+19	; 0x13
 2fa:	8c 89       	ldd	r24, Y+20	; 0x14
 2fc:	9d 89       	ldd	r25, Y+21	; 0x15
 2fe:	24 d2       	rcall	.+1096   	; 0x748 <__addsf3>
 300:	6a 8b       	std	Y+18, r22	; 0x12
 302:	7b 8b       	std	Y+19, r23	; 0x13
 304:	8c 8b       	std	Y+20, r24	; 0x14
 306:	9d 8b       	std	Y+21, r25	; 0x15
			}
			TCNT1= 0;
 308:	1d bc       	out	0x2d, r1	; 45
 30a:	1c bc       	out	0x2c, r1	; 44
			predkosc= (obwod/czas);
 30c:	29 81       	ldd	r18, Y+1	; 0x01
 30e:	3d 85       	ldd	r19, Y+13	; 0x0d
 310:	4c 2d       	mov	r20, r12
 312:	5d 2d       	mov	r21, r13
 314:	6f e1       	ldi	r22, 0x1F	; 31
 316:	75 e8       	ldi	r23, 0x85	; 133
 318:	8b e0       	ldi	r24, 0x0B	; 11
 31a:	90 e4       	ldi	r25, 0x40	; 64
 31c:	7d d2       	rcall	.+1274   	; 0x818 <__divsf3>
 31e:	6e 8b       	std	Y+22, r22	; 0x16
 320:	7f 8b       	std	Y+23, r23	; 0x17
 322:	88 8f       	std	Y+24, r24	; 0x18
 324:	99 8f       	std	Y+25, r25	; 0x19
			srednia_predkosc= dystans/caly_czas;
 326:	2a 89       	ldd	r18, Y+18	; 0x12
 328:	3b 89       	ldd	r19, Y+19	; 0x13
 32a:	4c 89       	ldd	r20, Y+20	; 0x14
 32c:	5d 89       	ldd	r21, Y+21	; 0x15
 32e:	6d 81       	ldd	r22, Y+5	; 0x05
 330:	7e 81       	ldd	r23, Y+6	; 0x06
 332:	8f 81       	ldd	r24, Y+7	; 0x07
 334:	98 85       	ldd	r25, Y+8	; 0x08
 336:	70 d2       	rcall	.+1248   	; 0x818 <__divsf3>
 338:	6a 8f       	std	Y+26, r22	; 0x1a
 33a:	7b 8f       	std	Y+27, r23	; 0x1b
 33c:	8c 8f       	std	Y+28, r24	; 0x1c
 33e:	9d 8f       	std	Y+29, r25	; 0x1d
			rpm= 60/czas;
 340:	29 81       	ldd	r18, Y+1	; 0x01
 342:	3d 85       	ldd	r19, Y+13	; 0x0d
 344:	4c 2d       	mov	r20, r12
 346:	5d 2d       	mov	r21, r13
 348:	60 e0       	ldi	r22, 0x00	; 0
 34a:	70 e0       	ldi	r23, 0x00	; 0
 34c:	80 e7       	ldi	r24, 0x70	; 112
 34e:	92 e4       	ldi	r25, 0x42	; 66
 350:	63 d2       	rcall	.+1222   	; 0x818 <__divsf3>
 352:	69 83       	std	Y+1, r22	; 0x01
 354:	7a 83       	std	Y+2, r23	; 0x02
 356:	8b 83       	std	Y+3, r24	; 0x03
 358:	9c 83       	std	Y+4, r25	; 0x04
		}
		
		if( (PINC & 7) == 0)
 35a:	83 b3       	in	r24, 0x13	; 19
 35c:	87 70       	andi	r24, 0x07	; 7
 35e:	79 f4       	brne	.+30     	; 0x37e <main+0x1e4>
		{
			eeprom_write_float(&przebieg_ee, 0);
 360:	40 e0       	ldi	r20, 0x00	; 0
 362:	50 e0       	ldi	r21, 0x00	; 0
 364:	ba 01       	movw	r22, r20
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	30 d4       	rcall	.+2144   	; 0xbcc <eeprom_write_dword>
 36c:	2f ef       	ldi	r18, 0xFF	; 255
 36e:	87 e8       	ldi	r24, 0x87	; 135
 370:	93 e1       	ldi	r25, 0x13	; 19
 372:	21 50       	subi	r18, 0x01	; 1
 374:	80 40       	sbci	r24, 0x00	; 0
 376:	90 40       	sbci	r25, 0x00	; 0
 378:	e1 f7       	brne	.-8      	; 0x372 <main+0x1d8>
 37a:	00 c0       	rjmp	.+0      	; 0x37c <main+0x1e2>
 37c:	00 00       	nop
			_delay_ms(800);
		}
		
		if( (poprzedni_guzik0 == 0) && (teraz_guzik0 == 1) )
 37e:	91 10       	cpse	r9, r1
 380:	0a c0       	rjmp	.+20     	; 0x396 <main+0x1fc>
 382:	ab 28       	or	r10, r11
 384:	41 f4       	brne	.+16     	; 0x396 <main+0x1fc>
		{
			tryb= (tryb + 1)%5 ;
 386:	2f 8d       	ldd	r18, Y+31	; 0x1f
 388:	82 2f       	mov	r24, r18
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	01 96       	adiw	r24, 0x01	; 1
 38e:	65 e0       	ldi	r22, 0x05	; 5
 390:	70 e0       	ldi	r23, 0x00	; 0
 392:	f0 d3       	rcall	.+2016   	; 0xb74 <__divmodhi4>
 394:	8f 8f       	std	Y+31, r24	; 0x1f
		}
		
		if( (poprzedni_guzik1 == 0) && (teraz_guzik1 == 1) )
 396:	81 10       	cpse	r8, r1
 398:	1c c0       	rjmp	.+56     	; 0x3d2 <main+0x238>
 39a:	ef 28       	or	r14, r15
 39c:	d1 f4       	brne	.+52     	; 0x3d2 <main+0x238>
		{
			if(mnoznik < 3)
 39e:	20 e0       	ldi	r18, 0x00	; 0
 3a0:	30 e0       	ldi	r19, 0x00	; 0
 3a2:	40 e4       	ldi	r20, 0x40	; 64
 3a4:	50 e4       	ldi	r21, 0x40	; 64
 3a6:	6e 85       	ldd	r22, Y+14	; 0x0e
 3a8:	7f 85       	ldd	r23, Y+15	; 0x0f
 3aa:	88 89       	ldd	r24, Y+16	; 0x10
 3ac:	99 89       	ldd	r25, Y+17	; 0x11
 3ae:	30 d2       	rcall	.+1120   	; 0x810 <__cmpsf2>
 3b0:	88 23       	and	r24, r24
 3b2:	3c f0       	brlt	.+14     	; 0x3c2 <main+0x228>
			{
				mnoznik= 3.6;
			}
			else
			{
				mnoznik= 1;
 3b4:	1e 86       	std	Y+14, r1	; 0x0e
 3b6:	1f 86       	std	Y+15, r1	; 0x0f
 3b8:	80 e8       	ldi	r24, 0x80	; 128
 3ba:	88 8b       	std	Y+16, r24	; 0x10
 3bc:	9f e3       	ldi	r25, 0x3F	; 63
 3be:	99 8b       	std	Y+17, r25	; 0x11
 3c0:	08 c0       	rjmp	.+16     	; 0x3d2 <main+0x238>
		
		if( (poprzedni_guzik1 == 0) && (teraz_guzik1 == 1) )
		{
			if(mnoznik < 3)
			{
				mnoznik= 3.6;
 3c2:	26 e6       	ldi	r18, 0x66	; 102
 3c4:	2e 87       	std	Y+14, r18	; 0x0e
 3c6:	86 e6       	ldi	r24, 0x66	; 102
 3c8:	8f 87       	std	Y+15, r24	; 0x0f
 3ca:	96 e6       	ldi	r25, 0x66	; 102
 3cc:	98 8b       	std	Y+16, r25	; 0x10
 3ce:	20 e4       	ldi	r18, 0x40	; 64
 3d0:	29 8b       	std	Y+17, r18	; 0x11
			{
				mnoznik= 1;
			}
		}
		
		if( (poprzedni_guzik2 == 0) && (teraz_guzik2 == 1) )
 3d2:	8e 8d       	ldd	r24, Y+30	; 0x1e
 3d4:	81 11       	cpse	r24, r1
 3d6:	09 c0       	rjmp	.+18     	; 0x3ea <main+0x250>
 3d8:	45 28       	or	r4, r5
 3da:	39 f4       	brne	.+14     	; 0x3ea <main+0x250>
		{
			eeprom_write_float(&przebieg_ee, przebieg);
 3dc:	49 85       	ldd	r20, Y+9	; 0x09
 3de:	5a 85       	ldd	r21, Y+10	; 0x0a
 3e0:	6b 85       	ldd	r22, Y+11	; 0x0b
 3e2:	7c 85       	ldd	r23, Y+12	; 0x0c
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	f1 d3       	rcall	.+2018   	; 0xbcc <eeprom_write_dword>
		}
		
		switch(tryb)
 3ea:	9f 8d       	ldd	r25, Y+31	; 0x1f
 3ec:	92 30       	cpi	r25, 0x02	; 2
 3ee:	09 f4       	brne	.+2      	; 0x3f2 <main+0x258>
 3f0:	b9 c0       	rjmp	.+370    	; 0x564 <__stack+0x105>
 3f2:	30 f4       	brcc	.+12     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f4:	99 23       	and	r25, r25
 3f6:	61 f0       	breq	.+24     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f8:	91 30       	cpi	r25, 0x01	; 1
 3fa:	09 f4       	brne	.+2      	; 0x3fe <main+0x264>
 3fc:	6d c0       	rjmp	.+218    	; 0x4d8 <__stack+0x79>
 3fe:	14 cf       	rjmp	.-472    	; 0x228 <main+0x8e>
 400:	2f 8d       	ldd	r18, Y+31	; 0x1f
 402:	23 30       	cpi	r18, 0x03	; 3
 404:	09 f4       	brne	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 406:	f4 c0       	rjmp	.+488    	; 0x5f0 <__stack+0x191>
 408:	24 30       	cpi	r18, 0x04	; 4
 40a:	09 f4       	brne	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40c:	38 c1       	rjmp	.+624    	; 0x67e <__stack+0x21f>
 40e:	0c cf       	rjmp	.-488    	; 0x228 <main+0x8e>
		{
			case 0:
			{
				if(dystans < 100)
 410:	20 e0       	ldi	r18, 0x00	; 0
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	48 ec       	ldi	r20, 0xC8	; 200
 416:	52 e4       	ldi	r21, 0x42	; 66
 418:	6d 81       	ldd	r22, Y+5	; 0x05
 41a:	7e 81       	ldd	r23, Y+6	; 0x06
 41c:	8f 81       	ldd	r24, Y+7	; 0x07
 41e:	98 85       	ldd	r25, Y+8	; 0x08
 420:	f7 d1       	rcall	.+1006   	; 0x810 <__cmpsf2>
 422:	88 23       	and	r24, r24
 424:	94 f4       	brge	.+36     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
				{
					liczba(dystans*10, 2, 0);
 426:	20 e0       	ldi	r18, 0x00	; 0
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	40 e2       	ldi	r20, 0x20	; 32
 42c:	51 e4       	ldi	r21, 0x41	; 65
 42e:	6d 81       	ldd	r22, Y+5	; 0x05
 430:	7e 81       	ldd	r23, Y+6	; 0x06
 432:	8f 81       	ldd	r24, Y+7	; 0x07
 434:	98 85       	ldd	r25, Y+8	; 0x08
 436:	3b d3       	rcall	.+1654   	; 0xaae <__mulsf3>
 438:	57 d2       	rcall	.+1198   	; 0x8e8 <__fixsfsi>
 43a:	dc 01       	movw	r26, r24
 43c:	cb 01       	movw	r24, r22
 43e:	40 e0       	ldi	r20, 0x00	; 0
 440:	50 e0       	ldi	r21, 0x00	; 0
 442:	62 e0       	ldi	r22, 0x02	; 2
 444:	70 e0       	ldi	r23, 0x00	; 0
 446:	54 de       	rcall	.-856    	; 0xf0 <liczba>
 448:	ef ce       	rjmp	.-546    	; 0x228 <main+0x8e>
				}
				else if(dystans < 1000)
 44a:	20 e0       	ldi	r18, 0x00	; 0
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	4a e7       	ldi	r20, 0x7A	; 122
 450:	54 e4       	ldi	r21, 0x44	; 68
 452:	6d 81       	ldd	r22, Y+5	; 0x05
 454:	7e 81       	ldd	r23, Y+6	; 0x06
 456:	8f 81       	ldd	r24, Y+7	; 0x07
 458:	98 85       	ldd	r25, Y+8	; 0x08
 45a:	da d1       	rcall	.+948    	; 0x810 <__cmpsf2>
 45c:	88 23       	and	r24, r24
 45e:	6c f4       	brge	.+26     	; 0x47a <__stack+0x1b>
				{
					liczba(dystans, 1, 0);
 460:	6d 81       	ldd	r22, Y+5	; 0x05
 462:	7e 81       	ldd	r23, Y+6	; 0x06
 464:	8f 81       	ldd	r24, Y+7	; 0x07
 466:	98 85       	ldd	r25, Y+8	; 0x08
 468:	3f d2       	rcall	.+1150   	; 0x8e8 <__fixsfsi>
 46a:	dc 01       	movw	r26, r24
 46c:	cb 01       	movw	r24, r22
 46e:	40 e0       	ldi	r20, 0x00	; 0
 470:	50 e0       	ldi	r21, 0x00	; 0
 472:	61 e0       	ldi	r22, 0x01	; 1
 474:	70 e0       	ldi	r23, 0x00	; 0
 476:	3c de       	rcall	.-904    	; 0xf0 <liczba>
 478:	d7 ce       	rjmp	.-594    	; 0x228 <main+0x8e>
				}
				else if(dystans < 100000)
 47a:	20 e0       	ldi	r18, 0x00	; 0
 47c:	30 e5       	ldi	r19, 0x50	; 80
 47e:	43 ec       	ldi	r20, 0xC3	; 195
 480:	57 e4       	ldi	r21, 0x47	; 71
 482:	6d 81       	ldd	r22, Y+5	; 0x05
 484:	7e 81       	ldd	r23, Y+6	; 0x06
 486:	8f 81       	ldd	r24, Y+7	; 0x07
 488:	98 85       	ldd	r25, Y+8	; 0x08
 48a:	c2 d1       	rcall	.+900    	; 0x810 <__cmpsf2>
 48c:	88 23       	and	r24, r24
 48e:	94 f4       	brge	.+36     	; 0x4b4 <__stack+0x55>
				{
					liczba(dystans*0.01, 2, 0);
 490:	2a e0       	ldi	r18, 0x0A	; 10
 492:	37 ed       	ldi	r19, 0xD7	; 215
 494:	43 e2       	ldi	r20, 0x23	; 35
 496:	5c e3       	ldi	r21, 0x3C	; 60
 498:	6d 81       	ldd	r22, Y+5	; 0x05
 49a:	7e 81       	ldd	r23, Y+6	; 0x06
 49c:	8f 81       	ldd	r24, Y+7	; 0x07
 49e:	98 85       	ldd	r25, Y+8	; 0x08
 4a0:	06 d3       	rcall	.+1548   	; 0xaae <__mulsf3>
 4a2:	22 d2       	rcall	.+1092   	; 0x8e8 <__fixsfsi>
 4a4:	dc 01       	movw	r26, r24
 4a6:	cb 01       	movw	r24, r22
 4a8:	40 e0       	ldi	r20, 0x00	; 0
 4aa:	50 e0       	ldi	r21, 0x00	; 0
 4ac:	62 e0       	ldi	r22, 0x02	; 2
 4ae:	70 e0       	ldi	r23, 0x00	; 0
 4b0:	1f de       	rcall	.-962    	; 0xf0 <liczba>
 4b2:	ba ce       	rjmp	.-652    	; 0x228 <main+0x8e>
				}
				else
				{
					liczba(dystans*0.001, 1, 0);
 4b4:	2f e6       	ldi	r18, 0x6F	; 111
 4b6:	32 e1       	ldi	r19, 0x12	; 18
 4b8:	43 e8       	ldi	r20, 0x83	; 131
 4ba:	5a e3       	ldi	r21, 0x3A	; 58
 4bc:	6d 81       	ldd	r22, Y+5	; 0x05
 4be:	7e 81       	ldd	r23, Y+6	; 0x06
 4c0:	8f 81       	ldd	r24, Y+7	; 0x07
 4c2:	98 85       	ldd	r25, Y+8	; 0x08
 4c4:	f4 d2       	rcall	.+1512   	; 0xaae <__mulsf3>
 4c6:	10 d2       	rcall	.+1056   	; 0x8e8 <__fixsfsi>
 4c8:	dc 01       	movw	r26, r24
 4ca:	cb 01       	movw	r24, r22
 4cc:	40 e0       	ldi	r20, 0x00	; 0
 4ce:	50 e0       	ldi	r21, 0x00	; 0
 4d0:	61 e0       	ldi	r22, 0x01	; 1
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	0d de       	rcall	.-998    	; 0xf0 <liczba>
 4d6:	a8 ce       	rjmp	.-688    	; 0x228 <main+0x8e>
				break;
			}
			
			case 1:
			{
				if(predkosc*mnoznik < 10)
 4d8:	2e 85       	ldd	r18, Y+14	; 0x0e
 4da:	3f 85       	ldd	r19, Y+15	; 0x0f
 4dc:	48 89       	ldd	r20, Y+16	; 0x10
 4de:	59 89       	ldd	r21, Y+17	; 0x11
 4e0:	6e 89       	ldd	r22, Y+22	; 0x16
 4e2:	7f 89       	ldd	r23, Y+23	; 0x17
 4e4:	88 8d       	ldd	r24, Y+24	; 0x18
 4e6:	99 8d       	ldd	r25, Y+25	; 0x19
 4e8:	e2 d2       	rcall	.+1476   	; 0xaae <__mulsf3>
 4ea:	6b 01       	movw	r12, r22
 4ec:	7c 01       	movw	r14, r24
 4ee:	20 e0       	ldi	r18, 0x00	; 0
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	40 e2       	ldi	r20, 0x20	; 32
 4f4:	51 e4       	ldi	r21, 0x41	; 65
 4f6:	8c d1       	rcall	.+792    	; 0x810 <__cmpsf2>
 4f8:	88 23       	and	r24, r24
 4fa:	84 f4       	brge	.+32     	; 0x51c <__stack+0xbd>
				{
					liczba(predkosc*mnoznik*100, 3, 0);
 4fc:	20 e0       	ldi	r18, 0x00	; 0
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	48 ec       	ldi	r20, 0xC8	; 200
 502:	52 e4       	ldi	r21, 0x42	; 66
 504:	c7 01       	movw	r24, r14
 506:	b6 01       	movw	r22, r12
 508:	d2 d2       	rcall	.+1444   	; 0xaae <__mulsf3>
 50a:	ee d1       	rcall	.+988    	; 0x8e8 <__fixsfsi>
 50c:	dc 01       	movw	r26, r24
 50e:	cb 01       	movw	r24, r22
 510:	40 e0       	ldi	r20, 0x00	; 0
 512:	50 e0       	ldi	r21, 0x00	; 0
 514:	63 e0       	ldi	r22, 0x03	; 3
 516:	70 e0       	ldi	r23, 0x00	; 0
 518:	eb dd       	rcall	.-1066   	; 0xf0 <liczba>
 51a:	86 ce       	rjmp	.-756    	; 0x228 <main+0x8e>
				}
				else if(predkosc*mnoznik < 100)
 51c:	20 e0       	ldi	r18, 0x00	; 0
 51e:	30 e0       	ldi	r19, 0x00	; 0
 520:	48 ec       	ldi	r20, 0xC8	; 200
 522:	52 e4       	ldi	r21, 0x42	; 66
 524:	c7 01       	movw	r24, r14
 526:	b6 01       	movw	r22, r12
 528:	73 d1       	rcall	.+742    	; 0x810 <__cmpsf2>
 52a:	88 23       	and	r24, r24
 52c:	84 f4       	brge	.+32     	; 0x54e <__stack+0xef>
				{
					liczba(predkosc*mnoznik*10, 2, 0);
 52e:	20 e0       	ldi	r18, 0x00	; 0
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	40 e2       	ldi	r20, 0x20	; 32
 534:	51 e4       	ldi	r21, 0x41	; 65
 536:	c7 01       	movw	r24, r14
 538:	b6 01       	movw	r22, r12
 53a:	b9 d2       	rcall	.+1394   	; 0xaae <__mulsf3>
 53c:	d5 d1       	rcall	.+938    	; 0x8e8 <__fixsfsi>
 53e:	dc 01       	movw	r26, r24
 540:	cb 01       	movw	r24, r22
 542:	40 e0       	ldi	r20, 0x00	; 0
 544:	50 e0       	ldi	r21, 0x00	; 0
 546:	62 e0       	ldi	r22, 0x02	; 2
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	d2 dd       	rcall	.-1116   	; 0xf0 <liczba>
 54c:	6d ce       	rjmp	.-806    	; 0x228 <main+0x8e>
				}
				else
				{
					liczba(predkosc*mnoznik, 1, 0);
 54e:	c7 01       	movw	r24, r14
 550:	b6 01       	movw	r22, r12
 552:	ca d1       	rcall	.+916    	; 0x8e8 <__fixsfsi>
 554:	dc 01       	movw	r26, r24
 556:	cb 01       	movw	r24, r22
 558:	40 e0       	ldi	r20, 0x00	; 0
 55a:	50 e0       	ldi	r21, 0x00	; 0
 55c:	61 e0       	ldi	r22, 0x01	; 1
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	c7 dd       	rcall	.-1138   	; 0xf0 <liczba>
 562:	62 ce       	rjmp	.-828    	; 0x228 <main+0x8e>
				break;
			}
			
			case 2:
			{
				if(srednia_predkosc*mnoznik < 10)
 564:	2e 85       	ldd	r18, Y+14	; 0x0e
 566:	3f 85       	ldd	r19, Y+15	; 0x0f
 568:	48 89       	ldd	r20, Y+16	; 0x10
 56a:	59 89       	ldd	r21, Y+17	; 0x11
 56c:	6a 8d       	ldd	r22, Y+26	; 0x1a
 56e:	7b 8d       	ldd	r23, Y+27	; 0x1b
 570:	8c 8d       	ldd	r24, Y+28	; 0x1c
 572:	9d 8d       	ldd	r25, Y+29	; 0x1d
 574:	9c d2       	rcall	.+1336   	; 0xaae <__mulsf3>
 576:	6b 01       	movw	r12, r22
 578:	7c 01       	movw	r14, r24
 57a:	20 e0       	ldi	r18, 0x00	; 0
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	40 e2       	ldi	r20, 0x20	; 32
 580:	51 e4       	ldi	r21, 0x41	; 65
 582:	46 d1       	rcall	.+652    	; 0x810 <__cmpsf2>
 584:	88 23       	and	r24, r24
 586:	84 f4       	brge	.+32     	; 0x5a8 <__stack+0x149>
				{
					liczba(srednia_predkosc*mnoznik*100, 3, 0);
 588:	20 e0       	ldi	r18, 0x00	; 0
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	48 ec       	ldi	r20, 0xC8	; 200
 58e:	52 e4       	ldi	r21, 0x42	; 66
 590:	c7 01       	movw	r24, r14
 592:	b6 01       	movw	r22, r12
 594:	8c d2       	rcall	.+1304   	; 0xaae <__mulsf3>
 596:	a8 d1       	rcall	.+848    	; 0x8e8 <__fixsfsi>
 598:	dc 01       	movw	r26, r24
 59a:	cb 01       	movw	r24, r22
 59c:	40 e0       	ldi	r20, 0x00	; 0
 59e:	50 e0       	ldi	r21, 0x00	; 0
 5a0:	63 e0       	ldi	r22, 0x03	; 3
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	a5 dd       	rcall	.-1206   	; 0xf0 <liczba>
 5a6:	40 ce       	rjmp	.-896    	; 0x228 <main+0x8e>
				}
				else if(srednia_predkosc*mnoznik < 100)
 5a8:	20 e0       	ldi	r18, 0x00	; 0
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	48 ec       	ldi	r20, 0xC8	; 200
 5ae:	52 e4       	ldi	r21, 0x42	; 66
 5b0:	c7 01       	movw	r24, r14
 5b2:	b6 01       	movw	r22, r12
 5b4:	2d d1       	rcall	.+602    	; 0x810 <__cmpsf2>
 5b6:	88 23       	and	r24, r24
 5b8:	84 f4       	brge	.+32     	; 0x5da <__stack+0x17b>
				{
					liczba(srednia_predkosc*mnoznik*10, 2, 0);
 5ba:	20 e0       	ldi	r18, 0x00	; 0
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	40 e2       	ldi	r20, 0x20	; 32
 5c0:	51 e4       	ldi	r21, 0x41	; 65
 5c2:	c7 01       	movw	r24, r14
 5c4:	b6 01       	movw	r22, r12
 5c6:	73 d2       	rcall	.+1254   	; 0xaae <__mulsf3>
 5c8:	8f d1       	rcall	.+798    	; 0x8e8 <__fixsfsi>
 5ca:	dc 01       	movw	r26, r24
 5cc:	cb 01       	movw	r24, r22
 5ce:	40 e0       	ldi	r20, 0x00	; 0
 5d0:	50 e0       	ldi	r21, 0x00	; 0
 5d2:	62 e0       	ldi	r22, 0x02	; 2
 5d4:	70 e0       	ldi	r23, 0x00	; 0
 5d6:	8c dd       	rcall	.-1256   	; 0xf0 <liczba>
 5d8:	27 ce       	rjmp	.-946    	; 0x228 <main+0x8e>
				}
				else
				{
					liczba(srednia_predkosc*mnoznik, 1, 0);
 5da:	c7 01       	movw	r24, r14
 5dc:	b6 01       	movw	r22, r12
 5de:	84 d1       	rcall	.+776    	; 0x8e8 <__fixsfsi>
 5e0:	dc 01       	movw	r26, r24
 5e2:	cb 01       	movw	r24, r22
 5e4:	40 e0       	ldi	r20, 0x00	; 0
 5e6:	50 e0       	ldi	r21, 0x00	; 0
 5e8:	61 e0       	ldi	r22, 0x01	; 1
 5ea:	70 e0       	ldi	r23, 0x00	; 0
 5ec:	81 dd       	rcall	.-1278   	; 0xf0 <liczba>
 5ee:	1c ce       	rjmp	.-968    	; 0x228 <main+0x8e>
				break;
			}
			
			case 3:
			{
				if(rpm < 10)
 5f0:	20 e0       	ldi	r18, 0x00	; 0
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	40 e2       	ldi	r20, 0x20	; 32
 5f6:	51 e4       	ldi	r21, 0x41	; 65
 5f8:	69 81       	ldd	r22, Y+1	; 0x01
 5fa:	7a 81       	ldd	r23, Y+2	; 0x02
 5fc:	8b 81       	ldd	r24, Y+3	; 0x03
 5fe:	9c 81       	ldd	r25, Y+4	; 0x04
 600:	07 d1       	rcall	.+526    	; 0x810 <__cmpsf2>
 602:	88 23       	and	r24, r24
 604:	94 f4       	brge	.+36     	; 0x62a <__stack+0x1cb>
				{
					liczba(rpm*100, 3, 0);
 606:	20 e0       	ldi	r18, 0x00	; 0
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	48 ec       	ldi	r20, 0xC8	; 200
 60c:	52 e4       	ldi	r21, 0x42	; 66
 60e:	69 81       	ldd	r22, Y+1	; 0x01
 610:	7a 81       	ldd	r23, Y+2	; 0x02
 612:	8b 81       	ldd	r24, Y+3	; 0x03
 614:	9c 81       	ldd	r25, Y+4	; 0x04
 616:	4b d2       	rcall	.+1174   	; 0xaae <__mulsf3>
 618:	67 d1       	rcall	.+718    	; 0x8e8 <__fixsfsi>
 61a:	dc 01       	movw	r26, r24
 61c:	cb 01       	movw	r24, r22
 61e:	40 e0       	ldi	r20, 0x00	; 0
 620:	50 e0       	ldi	r21, 0x00	; 0
 622:	63 e0       	ldi	r22, 0x03	; 3
 624:	70 e0       	ldi	r23, 0x00	; 0
 626:	64 dd       	rcall	.-1336   	; 0xf0 <liczba>
 628:	ff cd       	rjmp	.-1026   	; 0x228 <main+0x8e>
				}
				else if(rpm < 100)
 62a:	20 e0       	ldi	r18, 0x00	; 0
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	48 ec       	ldi	r20, 0xC8	; 200
 630:	52 e4       	ldi	r21, 0x42	; 66
 632:	69 81       	ldd	r22, Y+1	; 0x01
 634:	7a 81       	ldd	r23, Y+2	; 0x02
 636:	8b 81       	ldd	r24, Y+3	; 0x03
 638:	9c 81       	ldd	r25, Y+4	; 0x04
 63a:	ea d0       	rcall	.+468    	; 0x810 <__cmpsf2>
 63c:	88 23       	and	r24, r24
 63e:	94 f4       	brge	.+36     	; 0x664 <__stack+0x205>
				{
					liczba(rpm*10, 2, 0);
 640:	20 e0       	ldi	r18, 0x00	; 0
 642:	30 e0       	ldi	r19, 0x00	; 0
 644:	40 e2       	ldi	r20, 0x20	; 32
 646:	51 e4       	ldi	r21, 0x41	; 65
 648:	69 81       	ldd	r22, Y+1	; 0x01
 64a:	7a 81       	ldd	r23, Y+2	; 0x02
 64c:	8b 81       	ldd	r24, Y+3	; 0x03
 64e:	9c 81       	ldd	r25, Y+4	; 0x04
 650:	2e d2       	rcall	.+1116   	; 0xaae <__mulsf3>
 652:	4a d1       	rcall	.+660    	; 0x8e8 <__fixsfsi>
 654:	dc 01       	movw	r26, r24
 656:	cb 01       	movw	r24, r22
 658:	40 e0       	ldi	r20, 0x00	; 0
 65a:	50 e0       	ldi	r21, 0x00	; 0
 65c:	62 e0       	ldi	r22, 0x02	; 2
 65e:	70 e0       	ldi	r23, 0x00	; 0
 660:	47 dd       	rcall	.-1394   	; 0xf0 <liczba>
 662:	e2 cd       	rjmp	.-1084   	; 0x228 <main+0x8e>
				}
				else
				{
					liczba(rpm, 1, 0);
 664:	69 81       	ldd	r22, Y+1	; 0x01
 666:	7a 81       	ldd	r23, Y+2	; 0x02
 668:	8b 81       	ldd	r24, Y+3	; 0x03
 66a:	9c 81       	ldd	r25, Y+4	; 0x04
 66c:	3d d1       	rcall	.+634    	; 0x8e8 <__fixsfsi>
 66e:	dc 01       	movw	r26, r24
 670:	cb 01       	movw	r24, r22
 672:	40 e0       	ldi	r20, 0x00	; 0
 674:	50 e0       	ldi	r21, 0x00	; 0
 676:	61 e0       	ldi	r22, 0x01	; 1
 678:	70 e0       	ldi	r23, 0x00	; 0
 67a:	3a dd       	rcall	.-1420   	; 0xf0 <liczba>
 67c:	d5 cd       	rjmp	.-1110   	; 0x228 <main+0x8e>
				break;
			}
			
			case 4:
			{
				if(przebieg < 100)
 67e:	20 e0       	ldi	r18, 0x00	; 0
 680:	30 e0       	ldi	r19, 0x00	; 0
 682:	48 ec       	ldi	r20, 0xC8	; 200
 684:	52 e4       	ldi	r21, 0x42	; 66
 686:	69 85       	ldd	r22, Y+9	; 0x09
 688:	7a 85       	ldd	r23, Y+10	; 0x0a
 68a:	8b 85       	ldd	r24, Y+11	; 0x0b
 68c:	9c 85       	ldd	r25, Y+12	; 0x0c
 68e:	c0 d0       	rcall	.+384    	; 0x810 <__cmpsf2>
 690:	88 23       	and	r24, r24
 692:	94 f4       	brge	.+36     	; 0x6b8 <__stack+0x259>
				{
					liczba(przebieg*10, 2, 0);
 694:	20 e0       	ldi	r18, 0x00	; 0
 696:	30 e0       	ldi	r19, 0x00	; 0
 698:	40 e2       	ldi	r20, 0x20	; 32
 69a:	51 e4       	ldi	r21, 0x41	; 65
 69c:	69 85       	ldd	r22, Y+9	; 0x09
 69e:	7a 85       	ldd	r23, Y+10	; 0x0a
 6a0:	8b 85       	ldd	r24, Y+11	; 0x0b
 6a2:	9c 85       	ldd	r25, Y+12	; 0x0c
 6a4:	04 d2       	rcall	.+1032   	; 0xaae <__mulsf3>
 6a6:	20 d1       	rcall	.+576    	; 0x8e8 <__fixsfsi>
 6a8:	dc 01       	movw	r26, r24
 6aa:	cb 01       	movw	r24, r22
 6ac:	40 e0       	ldi	r20, 0x00	; 0
 6ae:	50 e0       	ldi	r21, 0x00	; 0
 6b0:	62 e0       	ldi	r22, 0x02	; 2
 6b2:	70 e0       	ldi	r23, 0x00	; 0
 6b4:	1d dd       	rcall	.-1478   	; 0xf0 <liczba>
 6b6:	b8 cd       	rjmp	.-1168   	; 0x228 <main+0x8e>
				}
				else if(przebieg < 1000)
 6b8:	20 e0       	ldi	r18, 0x00	; 0
 6ba:	30 e0       	ldi	r19, 0x00	; 0
 6bc:	4a e7       	ldi	r20, 0x7A	; 122
 6be:	54 e4       	ldi	r21, 0x44	; 68
 6c0:	69 85       	ldd	r22, Y+9	; 0x09
 6c2:	7a 85       	ldd	r23, Y+10	; 0x0a
 6c4:	8b 85       	ldd	r24, Y+11	; 0x0b
 6c6:	9c 85       	ldd	r25, Y+12	; 0x0c
 6c8:	a3 d0       	rcall	.+326    	; 0x810 <__cmpsf2>
 6ca:	88 23       	and	r24, r24
 6cc:	6c f4       	brge	.+26     	; 0x6e8 <__stack+0x289>
				{
					liczba(przebieg, 1, 0);
 6ce:	69 85       	ldd	r22, Y+9	; 0x09
 6d0:	7a 85       	ldd	r23, Y+10	; 0x0a
 6d2:	8b 85       	ldd	r24, Y+11	; 0x0b
 6d4:	9c 85       	ldd	r25, Y+12	; 0x0c
 6d6:	08 d1       	rcall	.+528    	; 0x8e8 <__fixsfsi>
 6d8:	dc 01       	movw	r26, r24
 6da:	cb 01       	movw	r24, r22
 6dc:	40 e0       	ldi	r20, 0x00	; 0
 6de:	50 e0       	ldi	r21, 0x00	; 0
 6e0:	61 e0       	ldi	r22, 0x01	; 1
 6e2:	70 e0       	ldi	r23, 0x00	; 0
 6e4:	05 dd       	rcall	.-1526   	; 0xf0 <liczba>
 6e6:	a0 cd       	rjmp	.-1216   	; 0x228 <main+0x8e>
				}
				else if(przebieg < 100000)
 6e8:	20 e0       	ldi	r18, 0x00	; 0
 6ea:	30 e5       	ldi	r19, 0x50	; 80
 6ec:	43 ec       	ldi	r20, 0xC3	; 195
 6ee:	57 e4       	ldi	r21, 0x47	; 71
 6f0:	69 85       	ldd	r22, Y+9	; 0x09
 6f2:	7a 85       	ldd	r23, Y+10	; 0x0a
 6f4:	8b 85       	ldd	r24, Y+11	; 0x0b
 6f6:	9c 85       	ldd	r25, Y+12	; 0x0c
 6f8:	8b d0       	rcall	.+278    	; 0x810 <__cmpsf2>
 6fa:	88 23       	and	r24, r24
 6fc:	94 f4       	brge	.+36     	; 0x722 <__stack+0x2c3>
				{
					liczba(przebieg*0.01, 2, 0);
 6fe:	2a e0       	ldi	r18, 0x0A	; 10
 700:	37 ed       	ldi	r19, 0xD7	; 215
 702:	43 e2       	ldi	r20, 0x23	; 35
 704:	5c e3       	ldi	r21, 0x3C	; 60
 706:	69 85       	ldd	r22, Y+9	; 0x09
 708:	7a 85       	ldd	r23, Y+10	; 0x0a
 70a:	8b 85       	ldd	r24, Y+11	; 0x0b
 70c:	9c 85       	ldd	r25, Y+12	; 0x0c
 70e:	cf d1       	rcall	.+926    	; 0xaae <__mulsf3>
 710:	eb d0       	rcall	.+470    	; 0x8e8 <__fixsfsi>
 712:	dc 01       	movw	r26, r24
 714:	cb 01       	movw	r24, r22
 716:	40 e0       	ldi	r20, 0x00	; 0
 718:	50 e0       	ldi	r21, 0x00	; 0
 71a:	62 e0       	ldi	r22, 0x02	; 2
 71c:	70 e0       	ldi	r23, 0x00	; 0
 71e:	e8 dc       	rcall	.-1584   	; 0xf0 <liczba>
 720:	83 cd       	rjmp	.-1274   	; 0x228 <main+0x8e>
				}
				else
				{
					liczba(przebieg*0.001, 1, 0);
 722:	2f e6       	ldi	r18, 0x6F	; 111
 724:	32 e1       	ldi	r19, 0x12	; 18
 726:	43 e8       	ldi	r20, 0x83	; 131
 728:	5a e3       	ldi	r21, 0x3A	; 58
 72a:	69 85       	ldd	r22, Y+9	; 0x09
 72c:	7a 85       	ldd	r23, Y+10	; 0x0a
 72e:	8b 85       	ldd	r24, Y+11	; 0x0b
 730:	9c 85       	ldd	r25, Y+12	; 0x0c
 732:	bd d1       	rcall	.+890    	; 0xaae <__mulsf3>
 734:	d9 d0       	rcall	.+434    	; 0x8e8 <__fixsfsi>
 736:	dc 01       	movw	r26, r24
 738:	cb 01       	movw	r24, r22
 73a:	40 e0       	ldi	r20, 0x00	; 0
 73c:	50 e0       	ldi	r21, 0x00	; 0
 73e:	61 e0       	ldi	r22, 0x01	; 1
 740:	70 e0       	ldi	r23, 0x00	; 0
 742:	d6 dc       	rcall	.-1620   	; 0xf0 <liczba>
 744:	71 cd       	rjmp	.-1310   	; 0x228 <main+0x8e>

00000746 <__subsf3>:
 746:	50 58       	subi	r21, 0x80	; 128

00000748 <__addsf3>:
 748:	bb 27       	eor	r27, r27
 74a:	aa 27       	eor	r26, r26
 74c:	0e d0       	rcall	.+28     	; 0x76a <__addsf3x>
 74e:	75 c1       	rjmp	.+746    	; 0xa3a <__fp_round>
 750:	66 d1       	rcall	.+716    	; 0xa1e <__fp_pscA>
 752:	30 f0       	brcs	.+12     	; 0x760 <__addsf3+0x18>
 754:	6b d1       	rcall	.+726    	; 0xa2c <__fp_pscB>
 756:	20 f0       	brcs	.+8      	; 0x760 <__addsf3+0x18>
 758:	31 f4       	brne	.+12     	; 0x766 <__addsf3+0x1e>
 75a:	9f 3f       	cpi	r25, 0xFF	; 255
 75c:	11 f4       	brne	.+4      	; 0x762 <__addsf3+0x1a>
 75e:	1e f4       	brtc	.+6      	; 0x766 <__addsf3+0x1e>
 760:	5b c1       	rjmp	.+694    	; 0xa18 <__fp_nan>
 762:	0e f4       	brtc	.+2      	; 0x766 <__addsf3+0x1e>
 764:	e0 95       	com	r30
 766:	e7 fb       	bst	r30, 7
 768:	51 c1       	rjmp	.+674    	; 0xa0c <__fp_inf>

0000076a <__addsf3x>:
 76a:	e9 2f       	mov	r30, r25
 76c:	77 d1       	rcall	.+750    	; 0xa5c <__fp_split3>
 76e:	80 f3       	brcs	.-32     	; 0x750 <__addsf3+0x8>
 770:	ba 17       	cp	r27, r26
 772:	62 07       	cpc	r22, r18
 774:	73 07       	cpc	r23, r19
 776:	84 07       	cpc	r24, r20
 778:	95 07       	cpc	r25, r21
 77a:	18 f0       	brcs	.+6      	; 0x782 <__addsf3x+0x18>
 77c:	71 f4       	brne	.+28     	; 0x79a <__addsf3x+0x30>
 77e:	9e f5       	brtc	.+102    	; 0x7e6 <__addsf3x+0x7c>
 780:	8f c1       	rjmp	.+798    	; 0xaa0 <__fp_zero>
 782:	0e f4       	brtc	.+2      	; 0x786 <__addsf3x+0x1c>
 784:	e0 95       	com	r30
 786:	0b 2e       	mov	r0, r27
 788:	ba 2f       	mov	r27, r26
 78a:	a0 2d       	mov	r26, r0
 78c:	0b 01       	movw	r0, r22
 78e:	b9 01       	movw	r22, r18
 790:	90 01       	movw	r18, r0
 792:	0c 01       	movw	r0, r24
 794:	ca 01       	movw	r24, r20
 796:	a0 01       	movw	r20, r0
 798:	11 24       	eor	r1, r1
 79a:	ff 27       	eor	r31, r31
 79c:	59 1b       	sub	r21, r25
 79e:	99 f0       	breq	.+38     	; 0x7c6 <__addsf3x+0x5c>
 7a0:	59 3f       	cpi	r21, 0xF9	; 249
 7a2:	50 f4       	brcc	.+20     	; 0x7b8 <__addsf3x+0x4e>
 7a4:	50 3e       	cpi	r21, 0xE0	; 224
 7a6:	68 f1       	brcs	.+90     	; 0x802 <__addsf3x+0x98>
 7a8:	1a 16       	cp	r1, r26
 7aa:	f0 40       	sbci	r31, 0x00	; 0
 7ac:	a2 2f       	mov	r26, r18
 7ae:	23 2f       	mov	r18, r19
 7b0:	34 2f       	mov	r19, r20
 7b2:	44 27       	eor	r20, r20
 7b4:	58 5f       	subi	r21, 0xF8	; 248
 7b6:	f3 cf       	rjmp	.-26     	; 0x79e <__addsf3x+0x34>
 7b8:	46 95       	lsr	r20
 7ba:	37 95       	ror	r19
 7bc:	27 95       	ror	r18
 7be:	a7 95       	ror	r26
 7c0:	f0 40       	sbci	r31, 0x00	; 0
 7c2:	53 95       	inc	r21
 7c4:	c9 f7       	brne	.-14     	; 0x7b8 <__addsf3x+0x4e>
 7c6:	7e f4       	brtc	.+30     	; 0x7e6 <__addsf3x+0x7c>
 7c8:	1f 16       	cp	r1, r31
 7ca:	ba 0b       	sbc	r27, r26
 7cc:	62 0b       	sbc	r22, r18
 7ce:	73 0b       	sbc	r23, r19
 7d0:	84 0b       	sbc	r24, r20
 7d2:	ba f0       	brmi	.+46     	; 0x802 <__addsf3x+0x98>
 7d4:	91 50       	subi	r25, 0x01	; 1
 7d6:	a1 f0       	breq	.+40     	; 0x800 <__addsf3x+0x96>
 7d8:	ff 0f       	add	r31, r31
 7da:	bb 1f       	adc	r27, r27
 7dc:	66 1f       	adc	r22, r22
 7de:	77 1f       	adc	r23, r23
 7e0:	88 1f       	adc	r24, r24
 7e2:	c2 f7       	brpl	.-16     	; 0x7d4 <__addsf3x+0x6a>
 7e4:	0e c0       	rjmp	.+28     	; 0x802 <__addsf3x+0x98>
 7e6:	ba 0f       	add	r27, r26
 7e8:	62 1f       	adc	r22, r18
 7ea:	73 1f       	adc	r23, r19
 7ec:	84 1f       	adc	r24, r20
 7ee:	48 f4       	brcc	.+18     	; 0x802 <__addsf3x+0x98>
 7f0:	87 95       	ror	r24
 7f2:	77 95       	ror	r23
 7f4:	67 95       	ror	r22
 7f6:	b7 95       	ror	r27
 7f8:	f7 95       	ror	r31
 7fa:	9e 3f       	cpi	r25, 0xFE	; 254
 7fc:	08 f0       	brcs	.+2      	; 0x800 <__addsf3x+0x96>
 7fe:	b3 cf       	rjmp	.-154    	; 0x766 <__addsf3+0x1e>
 800:	93 95       	inc	r25
 802:	88 0f       	add	r24, r24
 804:	08 f0       	brcs	.+2      	; 0x808 <__addsf3x+0x9e>
 806:	99 27       	eor	r25, r25
 808:	ee 0f       	add	r30, r30
 80a:	97 95       	ror	r25
 80c:	87 95       	ror	r24
 80e:	08 95       	ret

00000810 <__cmpsf2>:
 810:	d9 d0       	rcall	.+434    	; 0x9c4 <__fp_cmp>
 812:	08 f4       	brcc	.+2      	; 0x816 <__cmpsf2+0x6>
 814:	81 e0       	ldi	r24, 0x01	; 1
 816:	08 95       	ret

00000818 <__divsf3>:
 818:	0c d0       	rcall	.+24     	; 0x832 <__divsf3x>
 81a:	0f c1       	rjmp	.+542    	; 0xa3a <__fp_round>
 81c:	07 d1       	rcall	.+526    	; 0xa2c <__fp_pscB>
 81e:	40 f0       	brcs	.+16     	; 0x830 <__divsf3+0x18>
 820:	fe d0       	rcall	.+508    	; 0xa1e <__fp_pscA>
 822:	30 f0       	brcs	.+12     	; 0x830 <__divsf3+0x18>
 824:	21 f4       	brne	.+8      	; 0x82e <__divsf3+0x16>
 826:	5f 3f       	cpi	r21, 0xFF	; 255
 828:	19 f0       	breq	.+6      	; 0x830 <__divsf3+0x18>
 82a:	f0 c0       	rjmp	.+480    	; 0xa0c <__fp_inf>
 82c:	51 11       	cpse	r21, r1
 82e:	39 c1       	rjmp	.+626    	; 0xaa2 <__fp_szero>
 830:	f3 c0       	rjmp	.+486    	; 0xa18 <__fp_nan>

00000832 <__divsf3x>:
 832:	14 d1       	rcall	.+552    	; 0xa5c <__fp_split3>
 834:	98 f3       	brcs	.-26     	; 0x81c <__divsf3+0x4>

00000836 <__divsf3_pse>:
 836:	99 23       	and	r25, r25
 838:	c9 f3       	breq	.-14     	; 0x82c <__divsf3+0x14>
 83a:	55 23       	and	r21, r21
 83c:	b1 f3       	breq	.-20     	; 0x82a <__divsf3+0x12>
 83e:	95 1b       	sub	r25, r21
 840:	55 0b       	sbc	r21, r21
 842:	bb 27       	eor	r27, r27
 844:	aa 27       	eor	r26, r26
 846:	62 17       	cp	r22, r18
 848:	73 07       	cpc	r23, r19
 84a:	84 07       	cpc	r24, r20
 84c:	38 f0       	brcs	.+14     	; 0x85c <__divsf3_pse+0x26>
 84e:	9f 5f       	subi	r25, 0xFF	; 255
 850:	5f 4f       	sbci	r21, 0xFF	; 255
 852:	22 0f       	add	r18, r18
 854:	33 1f       	adc	r19, r19
 856:	44 1f       	adc	r20, r20
 858:	aa 1f       	adc	r26, r26
 85a:	a9 f3       	breq	.-22     	; 0x846 <__divsf3_pse+0x10>
 85c:	33 d0       	rcall	.+102    	; 0x8c4 <__divsf3_pse+0x8e>
 85e:	0e 2e       	mov	r0, r30
 860:	3a f0       	brmi	.+14     	; 0x870 <__divsf3_pse+0x3a>
 862:	e0 e8       	ldi	r30, 0x80	; 128
 864:	30 d0       	rcall	.+96     	; 0x8c6 <__divsf3_pse+0x90>
 866:	91 50       	subi	r25, 0x01	; 1
 868:	50 40       	sbci	r21, 0x00	; 0
 86a:	e6 95       	lsr	r30
 86c:	00 1c       	adc	r0, r0
 86e:	ca f7       	brpl	.-14     	; 0x862 <__divsf3_pse+0x2c>
 870:	29 d0       	rcall	.+82     	; 0x8c4 <__divsf3_pse+0x8e>
 872:	fe 2f       	mov	r31, r30
 874:	27 d0       	rcall	.+78     	; 0x8c4 <__divsf3_pse+0x8e>
 876:	66 0f       	add	r22, r22
 878:	77 1f       	adc	r23, r23
 87a:	88 1f       	adc	r24, r24
 87c:	bb 1f       	adc	r27, r27
 87e:	26 17       	cp	r18, r22
 880:	37 07       	cpc	r19, r23
 882:	48 07       	cpc	r20, r24
 884:	ab 07       	cpc	r26, r27
 886:	b0 e8       	ldi	r27, 0x80	; 128
 888:	09 f0       	breq	.+2      	; 0x88c <__divsf3_pse+0x56>
 88a:	bb 0b       	sbc	r27, r27
 88c:	80 2d       	mov	r24, r0
 88e:	bf 01       	movw	r22, r30
 890:	ff 27       	eor	r31, r31
 892:	93 58       	subi	r25, 0x83	; 131
 894:	5f 4f       	sbci	r21, 0xFF	; 255
 896:	2a f0       	brmi	.+10     	; 0x8a2 <__divsf3_pse+0x6c>
 898:	9e 3f       	cpi	r25, 0xFE	; 254
 89a:	51 05       	cpc	r21, r1
 89c:	68 f0       	brcs	.+26     	; 0x8b8 <__divsf3_pse+0x82>
 89e:	b6 c0       	rjmp	.+364    	; 0xa0c <__fp_inf>
 8a0:	00 c1       	rjmp	.+512    	; 0xaa2 <__fp_szero>
 8a2:	5f 3f       	cpi	r21, 0xFF	; 255
 8a4:	ec f3       	brlt	.-6      	; 0x8a0 <__divsf3_pse+0x6a>
 8a6:	98 3e       	cpi	r25, 0xE8	; 232
 8a8:	dc f3       	brlt	.-10     	; 0x8a0 <__divsf3_pse+0x6a>
 8aa:	86 95       	lsr	r24
 8ac:	77 95       	ror	r23
 8ae:	67 95       	ror	r22
 8b0:	b7 95       	ror	r27
 8b2:	f7 95       	ror	r31
 8b4:	9f 5f       	subi	r25, 0xFF	; 255
 8b6:	c9 f7       	brne	.-14     	; 0x8aa <__divsf3_pse+0x74>
 8b8:	88 0f       	add	r24, r24
 8ba:	91 1d       	adc	r25, r1
 8bc:	96 95       	lsr	r25
 8be:	87 95       	ror	r24
 8c0:	97 f9       	bld	r25, 7
 8c2:	08 95       	ret
 8c4:	e1 e0       	ldi	r30, 0x01	; 1
 8c6:	66 0f       	add	r22, r22
 8c8:	77 1f       	adc	r23, r23
 8ca:	88 1f       	adc	r24, r24
 8cc:	bb 1f       	adc	r27, r27
 8ce:	62 17       	cp	r22, r18
 8d0:	73 07       	cpc	r23, r19
 8d2:	84 07       	cpc	r24, r20
 8d4:	ba 07       	cpc	r27, r26
 8d6:	20 f0       	brcs	.+8      	; 0x8e0 <__divsf3_pse+0xaa>
 8d8:	62 1b       	sub	r22, r18
 8da:	73 0b       	sbc	r23, r19
 8dc:	84 0b       	sbc	r24, r20
 8de:	ba 0b       	sbc	r27, r26
 8e0:	ee 1f       	adc	r30, r30
 8e2:	88 f7       	brcc	.-30     	; 0x8c6 <__divsf3_pse+0x90>
 8e4:	e0 95       	com	r30
 8e6:	08 95       	ret

000008e8 <__fixsfsi>:
 8e8:	04 d0       	rcall	.+8      	; 0x8f2 <__fixunssfsi>
 8ea:	68 94       	set
 8ec:	b1 11       	cpse	r27, r1
 8ee:	d9 c0       	rjmp	.+434    	; 0xaa2 <__fp_szero>
 8f0:	08 95       	ret

000008f2 <__fixunssfsi>:
 8f2:	bc d0       	rcall	.+376    	; 0xa6c <__fp_splitA>
 8f4:	88 f0       	brcs	.+34     	; 0x918 <__fixunssfsi+0x26>
 8f6:	9f 57       	subi	r25, 0x7F	; 127
 8f8:	90 f0       	brcs	.+36     	; 0x91e <__fixunssfsi+0x2c>
 8fa:	b9 2f       	mov	r27, r25
 8fc:	99 27       	eor	r25, r25
 8fe:	b7 51       	subi	r27, 0x17	; 23
 900:	a0 f0       	brcs	.+40     	; 0x92a <__fixunssfsi+0x38>
 902:	d1 f0       	breq	.+52     	; 0x938 <__fixunssfsi+0x46>
 904:	66 0f       	add	r22, r22
 906:	77 1f       	adc	r23, r23
 908:	88 1f       	adc	r24, r24
 90a:	99 1f       	adc	r25, r25
 90c:	1a f0       	brmi	.+6      	; 0x914 <__fixunssfsi+0x22>
 90e:	ba 95       	dec	r27
 910:	c9 f7       	brne	.-14     	; 0x904 <__fixunssfsi+0x12>
 912:	12 c0       	rjmp	.+36     	; 0x938 <__fixunssfsi+0x46>
 914:	b1 30       	cpi	r27, 0x01	; 1
 916:	81 f0       	breq	.+32     	; 0x938 <__fixunssfsi+0x46>
 918:	c3 d0       	rcall	.+390    	; 0xaa0 <__fp_zero>
 91a:	b1 e0       	ldi	r27, 0x01	; 1
 91c:	08 95       	ret
 91e:	c0 c0       	rjmp	.+384    	; 0xaa0 <__fp_zero>
 920:	67 2f       	mov	r22, r23
 922:	78 2f       	mov	r23, r24
 924:	88 27       	eor	r24, r24
 926:	b8 5f       	subi	r27, 0xF8	; 248
 928:	39 f0       	breq	.+14     	; 0x938 <__fixunssfsi+0x46>
 92a:	b9 3f       	cpi	r27, 0xF9	; 249
 92c:	cc f3       	brlt	.-14     	; 0x920 <__fixunssfsi+0x2e>
 92e:	86 95       	lsr	r24
 930:	77 95       	ror	r23
 932:	67 95       	ror	r22
 934:	b3 95       	inc	r27
 936:	d9 f7       	brne	.-10     	; 0x92e <__fixunssfsi+0x3c>
 938:	3e f4       	brtc	.+14     	; 0x948 <__fixunssfsi+0x56>
 93a:	90 95       	com	r25
 93c:	80 95       	com	r24
 93e:	70 95       	com	r23
 940:	61 95       	neg	r22
 942:	7f 4f       	sbci	r23, 0xFF	; 255
 944:	8f 4f       	sbci	r24, 0xFF	; 255
 946:	9f 4f       	sbci	r25, 0xFF	; 255
 948:	08 95       	ret

0000094a <__floatunsisf>:
 94a:	e8 94       	clt
 94c:	09 c0       	rjmp	.+18     	; 0x960 <__floatsisf+0x12>

0000094e <__floatsisf>:
 94e:	97 fb       	bst	r25, 7
 950:	3e f4       	brtc	.+14     	; 0x960 <__floatsisf+0x12>
 952:	90 95       	com	r25
 954:	80 95       	com	r24
 956:	70 95       	com	r23
 958:	61 95       	neg	r22
 95a:	7f 4f       	sbci	r23, 0xFF	; 255
 95c:	8f 4f       	sbci	r24, 0xFF	; 255
 95e:	9f 4f       	sbci	r25, 0xFF	; 255
 960:	99 23       	and	r25, r25
 962:	a9 f0       	breq	.+42     	; 0x98e <__floatsisf+0x40>
 964:	f9 2f       	mov	r31, r25
 966:	96 e9       	ldi	r25, 0x96	; 150
 968:	bb 27       	eor	r27, r27
 96a:	93 95       	inc	r25
 96c:	f6 95       	lsr	r31
 96e:	87 95       	ror	r24
 970:	77 95       	ror	r23
 972:	67 95       	ror	r22
 974:	b7 95       	ror	r27
 976:	f1 11       	cpse	r31, r1
 978:	f8 cf       	rjmp	.-16     	; 0x96a <__floatsisf+0x1c>
 97a:	fa f4       	brpl	.+62     	; 0x9ba <__floatsisf+0x6c>
 97c:	bb 0f       	add	r27, r27
 97e:	11 f4       	brne	.+4      	; 0x984 <__floatsisf+0x36>
 980:	60 ff       	sbrs	r22, 0
 982:	1b c0       	rjmp	.+54     	; 0x9ba <__floatsisf+0x6c>
 984:	6f 5f       	subi	r22, 0xFF	; 255
 986:	7f 4f       	sbci	r23, 0xFF	; 255
 988:	8f 4f       	sbci	r24, 0xFF	; 255
 98a:	9f 4f       	sbci	r25, 0xFF	; 255
 98c:	16 c0       	rjmp	.+44     	; 0x9ba <__floatsisf+0x6c>
 98e:	88 23       	and	r24, r24
 990:	11 f0       	breq	.+4      	; 0x996 <__floatsisf+0x48>
 992:	96 e9       	ldi	r25, 0x96	; 150
 994:	11 c0       	rjmp	.+34     	; 0x9b8 <__floatsisf+0x6a>
 996:	77 23       	and	r23, r23
 998:	21 f0       	breq	.+8      	; 0x9a2 <__floatsisf+0x54>
 99a:	9e e8       	ldi	r25, 0x8E	; 142
 99c:	87 2f       	mov	r24, r23
 99e:	76 2f       	mov	r23, r22
 9a0:	05 c0       	rjmp	.+10     	; 0x9ac <__floatsisf+0x5e>
 9a2:	66 23       	and	r22, r22
 9a4:	71 f0       	breq	.+28     	; 0x9c2 <__floatsisf+0x74>
 9a6:	96 e8       	ldi	r25, 0x86	; 134
 9a8:	86 2f       	mov	r24, r22
 9aa:	70 e0       	ldi	r23, 0x00	; 0
 9ac:	60 e0       	ldi	r22, 0x00	; 0
 9ae:	2a f0       	brmi	.+10     	; 0x9ba <__floatsisf+0x6c>
 9b0:	9a 95       	dec	r25
 9b2:	66 0f       	add	r22, r22
 9b4:	77 1f       	adc	r23, r23
 9b6:	88 1f       	adc	r24, r24
 9b8:	da f7       	brpl	.-10     	; 0x9b0 <__floatsisf+0x62>
 9ba:	88 0f       	add	r24, r24
 9bc:	96 95       	lsr	r25
 9be:	87 95       	ror	r24
 9c0:	97 f9       	bld	r25, 7
 9c2:	08 95       	ret

000009c4 <__fp_cmp>:
 9c4:	99 0f       	add	r25, r25
 9c6:	00 08       	sbc	r0, r0
 9c8:	55 0f       	add	r21, r21
 9ca:	aa 0b       	sbc	r26, r26
 9cc:	e0 e8       	ldi	r30, 0x80	; 128
 9ce:	fe ef       	ldi	r31, 0xFE	; 254
 9d0:	16 16       	cp	r1, r22
 9d2:	17 06       	cpc	r1, r23
 9d4:	e8 07       	cpc	r30, r24
 9d6:	f9 07       	cpc	r31, r25
 9d8:	c0 f0       	brcs	.+48     	; 0xa0a <__fp_cmp+0x46>
 9da:	12 16       	cp	r1, r18
 9dc:	13 06       	cpc	r1, r19
 9de:	e4 07       	cpc	r30, r20
 9e0:	f5 07       	cpc	r31, r21
 9e2:	98 f0       	brcs	.+38     	; 0xa0a <__fp_cmp+0x46>
 9e4:	62 1b       	sub	r22, r18
 9e6:	73 0b       	sbc	r23, r19
 9e8:	84 0b       	sbc	r24, r20
 9ea:	95 0b       	sbc	r25, r21
 9ec:	39 f4       	brne	.+14     	; 0x9fc <__fp_cmp+0x38>
 9ee:	0a 26       	eor	r0, r26
 9f0:	61 f0       	breq	.+24     	; 0xa0a <__fp_cmp+0x46>
 9f2:	23 2b       	or	r18, r19
 9f4:	24 2b       	or	r18, r20
 9f6:	25 2b       	or	r18, r21
 9f8:	21 f4       	brne	.+8      	; 0xa02 <__fp_cmp+0x3e>
 9fa:	08 95       	ret
 9fc:	0a 26       	eor	r0, r26
 9fe:	09 f4       	brne	.+2      	; 0xa02 <__fp_cmp+0x3e>
 a00:	a1 40       	sbci	r26, 0x01	; 1
 a02:	a6 95       	lsr	r26
 a04:	8f ef       	ldi	r24, 0xFF	; 255
 a06:	81 1d       	adc	r24, r1
 a08:	81 1d       	adc	r24, r1
 a0a:	08 95       	ret

00000a0c <__fp_inf>:
 a0c:	97 f9       	bld	r25, 7
 a0e:	9f 67       	ori	r25, 0x7F	; 127
 a10:	80 e8       	ldi	r24, 0x80	; 128
 a12:	70 e0       	ldi	r23, 0x00	; 0
 a14:	60 e0       	ldi	r22, 0x00	; 0
 a16:	08 95       	ret

00000a18 <__fp_nan>:
 a18:	9f ef       	ldi	r25, 0xFF	; 255
 a1a:	80 ec       	ldi	r24, 0xC0	; 192
 a1c:	08 95       	ret

00000a1e <__fp_pscA>:
 a1e:	00 24       	eor	r0, r0
 a20:	0a 94       	dec	r0
 a22:	16 16       	cp	r1, r22
 a24:	17 06       	cpc	r1, r23
 a26:	18 06       	cpc	r1, r24
 a28:	09 06       	cpc	r0, r25
 a2a:	08 95       	ret

00000a2c <__fp_pscB>:
 a2c:	00 24       	eor	r0, r0
 a2e:	0a 94       	dec	r0
 a30:	12 16       	cp	r1, r18
 a32:	13 06       	cpc	r1, r19
 a34:	14 06       	cpc	r1, r20
 a36:	05 06       	cpc	r0, r21
 a38:	08 95       	ret

00000a3a <__fp_round>:
 a3a:	09 2e       	mov	r0, r25
 a3c:	03 94       	inc	r0
 a3e:	00 0c       	add	r0, r0
 a40:	11 f4       	brne	.+4      	; 0xa46 <__fp_round+0xc>
 a42:	88 23       	and	r24, r24
 a44:	52 f0       	brmi	.+20     	; 0xa5a <__fp_round+0x20>
 a46:	bb 0f       	add	r27, r27
 a48:	40 f4       	brcc	.+16     	; 0xa5a <__fp_round+0x20>
 a4a:	bf 2b       	or	r27, r31
 a4c:	11 f4       	brne	.+4      	; 0xa52 <__fp_round+0x18>
 a4e:	60 ff       	sbrs	r22, 0
 a50:	04 c0       	rjmp	.+8      	; 0xa5a <__fp_round+0x20>
 a52:	6f 5f       	subi	r22, 0xFF	; 255
 a54:	7f 4f       	sbci	r23, 0xFF	; 255
 a56:	8f 4f       	sbci	r24, 0xFF	; 255
 a58:	9f 4f       	sbci	r25, 0xFF	; 255
 a5a:	08 95       	ret

00000a5c <__fp_split3>:
 a5c:	57 fd       	sbrc	r21, 7
 a5e:	90 58       	subi	r25, 0x80	; 128
 a60:	44 0f       	add	r20, r20
 a62:	55 1f       	adc	r21, r21
 a64:	59 f0       	breq	.+22     	; 0xa7c <__fp_splitA+0x10>
 a66:	5f 3f       	cpi	r21, 0xFF	; 255
 a68:	71 f0       	breq	.+28     	; 0xa86 <__fp_splitA+0x1a>
 a6a:	47 95       	ror	r20

00000a6c <__fp_splitA>:
 a6c:	88 0f       	add	r24, r24
 a6e:	97 fb       	bst	r25, 7
 a70:	99 1f       	adc	r25, r25
 a72:	61 f0       	breq	.+24     	; 0xa8c <__fp_splitA+0x20>
 a74:	9f 3f       	cpi	r25, 0xFF	; 255
 a76:	79 f0       	breq	.+30     	; 0xa96 <__fp_splitA+0x2a>
 a78:	87 95       	ror	r24
 a7a:	08 95       	ret
 a7c:	12 16       	cp	r1, r18
 a7e:	13 06       	cpc	r1, r19
 a80:	14 06       	cpc	r1, r20
 a82:	55 1f       	adc	r21, r21
 a84:	f2 cf       	rjmp	.-28     	; 0xa6a <__fp_split3+0xe>
 a86:	46 95       	lsr	r20
 a88:	f1 df       	rcall	.-30     	; 0xa6c <__fp_splitA>
 a8a:	08 c0       	rjmp	.+16     	; 0xa9c <__fp_splitA+0x30>
 a8c:	16 16       	cp	r1, r22
 a8e:	17 06       	cpc	r1, r23
 a90:	18 06       	cpc	r1, r24
 a92:	99 1f       	adc	r25, r25
 a94:	f1 cf       	rjmp	.-30     	; 0xa78 <__fp_splitA+0xc>
 a96:	86 95       	lsr	r24
 a98:	71 05       	cpc	r23, r1
 a9a:	61 05       	cpc	r22, r1
 a9c:	08 94       	sec
 a9e:	08 95       	ret

00000aa0 <__fp_zero>:
 aa0:	e8 94       	clt

00000aa2 <__fp_szero>:
 aa2:	bb 27       	eor	r27, r27
 aa4:	66 27       	eor	r22, r22
 aa6:	77 27       	eor	r23, r23
 aa8:	cb 01       	movw	r24, r22
 aaa:	97 f9       	bld	r25, 7
 aac:	08 95       	ret

00000aae <__mulsf3>:
 aae:	0b d0       	rcall	.+22     	; 0xac6 <__mulsf3x>
 ab0:	c4 cf       	rjmp	.-120    	; 0xa3a <__fp_round>
 ab2:	b5 df       	rcall	.-150    	; 0xa1e <__fp_pscA>
 ab4:	28 f0       	brcs	.+10     	; 0xac0 <__mulsf3+0x12>
 ab6:	ba df       	rcall	.-140    	; 0xa2c <__fp_pscB>
 ab8:	18 f0       	brcs	.+6      	; 0xac0 <__mulsf3+0x12>
 aba:	95 23       	and	r25, r21
 abc:	09 f0       	breq	.+2      	; 0xac0 <__mulsf3+0x12>
 abe:	a6 cf       	rjmp	.-180    	; 0xa0c <__fp_inf>
 ac0:	ab cf       	rjmp	.-170    	; 0xa18 <__fp_nan>
 ac2:	11 24       	eor	r1, r1
 ac4:	ee cf       	rjmp	.-36     	; 0xaa2 <__fp_szero>

00000ac6 <__mulsf3x>:
 ac6:	ca df       	rcall	.-108    	; 0xa5c <__fp_split3>
 ac8:	a0 f3       	brcs	.-24     	; 0xab2 <__mulsf3+0x4>

00000aca <__mulsf3_pse>:
 aca:	95 9f       	mul	r25, r21
 acc:	d1 f3       	breq	.-12     	; 0xac2 <__mulsf3+0x14>
 ace:	95 0f       	add	r25, r21
 ad0:	50 e0       	ldi	r21, 0x00	; 0
 ad2:	55 1f       	adc	r21, r21
 ad4:	62 9f       	mul	r22, r18
 ad6:	f0 01       	movw	r30, r0
 ad8:	72 9f       	mul	r23, r18
 ada:	bb 27       	eor	r27, r27
 adc:	f0 0d       	add	r31, r0
 ade:	b1 1d       	adc	r27, r1
 ae0:	63 9f       	mul	r22, r19
 ae2:	aa 27       	eor	r26, r26
 ae4:	f0 0d       	add	r31, r0
 ae6:	b1 1d       	adc	r27, r1
 ae8:	aa 1f       	adc	r26, r26
 aea:	64 9f       	mul	r22, r20
 aec:	66 27       	eor	r22, r22
 aee:	b0 0d       	add	r27, r0
 af0:	a1 1d       	adc	r26, r1
 af2:	66 1f       	adc	r22, r22
 af4:	82 9f       	mul	r24, r18
 af6:	22 27       	eor	r18, r18
 af8:	b0 0d       	add	r27, r0
 afa:	a1 1d       	adc	r26, r1
 afc:	62 1f       	adc	r22, r18
 afe:	73 9f       	mul	r23, r19
 b00:	b0 0d       	add	r27, r0
 b02:	a1 1d       	adc	r26, r1
 b04:	62 1f       	adc	r22, r18
 b06:	83 9f       	mul	r24, r19
 b08:	a0 0d       	add	r26, r0
 b0a:	61 1d       	adc	r22, r1
 b0c:	22 1f       	adc	r18, r18
 b0e:	74 9f       	mul	r23, r20
 b10:	33 27       	eor	r19, r19
 b12:	a0 0d       	add	r26, r0
 b14:	61 1d       	adc	r22, r1
 b16:	23 1f       	adc	r18, r19
 b18:	84 9f       	mul	r24, r20
 b1a:	60 0d       	add	r22, r0
 b1c:	21 1d       	adc	r18, r1
 b1e:	82 2f       	mov	r24, r18
 b20:	76 2f       	mov	r23, r22
 b22:	6a 2f       	mov	r22, r26
 b24:	11 24       	eor	r1, r1
 b26:	9f 57       	subi	r25, 0x7F	; 127
 b28:	50 40       	sbci	r21, 0x00	; 0
 b2a:	8a f0       	brmi	.+34     	; 0xb4e <__mulsf3_pse+0x84>
 b2c:	e1 f0       	breq	.+56     	; 0xb66 <__mulsf3_pse+0x9c>
 b2e:	88 23       	and	r24, r24
 b30:	4a f0       	brmi	.+18     	; 0xb44 <__mulsf3_pse+0x7a>
 b32:	ee 0f       	add	r30, r30
 b34:	ff 1f       	adc	r31, r31
 b36:	bb 1f       	adc	r27, r27
 b38:	66 1f       	adc	r22, r22
 b3a:	77 1f       	adc	r23, r23
 b3c:	88 1f       	adc	r24, r24
 b3e:	91 50       	subi	r25, 0x01	; 1
 b40:	50 40       	sbci	r21, 0x00	; 0
 b42:	a9 f7       	brne	.-22     	; 0xb2e <__mulsf3_pse+0x64>
 b44:	9e 3f       	cpi	r25, 0xFE	; 254
 b46:	51 05       	cpc	r21, r1
 b48:	70 f0       	brcs	.+28     	; 0xb66 <__mulsf3_pse+0x9c>
 b4a:	60 cf       	rjmp	.-320    	; 0xa0c <__fp_inf>
 b4c:	aa cf       	rjmp	.-172    	; 0xaa2 <__fp_szero>
 b4e:	5f 3f       	cpi	r21, 0xFF	; 255
 b50:	ec f3       	brlt	.-6      	; 0xb4c <__mulsf3_pse+0x82>
 b52:	98 3e       	cpi	r25, 0xE8	; 232
 b54:	dc f3       	brlt	.-10     	; 0xb4c <__mulsf3_pse+0x82>
 b56:	86 95       	lsr	r24
 b58:	77 95       	ror	r23
 b5a:	67 95       	ror	r22
 b5c:	b7 95       	ror	r27
 b5e:	f7 95       	ror	r31
 b60:	e7 95       	ror	r30
 b62:	9f 5f       	subi	r25, 0xFF	; 255
 b64:	c1 f7       	brne	.-16     	; 0xb56 <__mulsf3_pse+0x8c>
 b66:	fe 2b       	or	r31, r30
 b68:	88 0f       	add	r24, r24
 b6a:	91 1d       	adc	r25, r1
 b6c:	96 95       	lsr	r25
 b6e:	87 95       	ror	r24
 b70:	97 f9       	bld	r25, 7
 b72:	08 95       	ret

00000b74 <__divmodhi4>:
 b74:	97 fb       	bst	r25, 7
 b76:	07 2e       	mov	r0, r23
 b78:	16 f4       	brtc	.+4      	; 0xb7e <__divmodhi4+0xa>
 b7a:	00 94       	com	r0
 b7c:	06 d0       	rcall	.+12     	; 0xb8a <__divmodhi4_neg1>
 b7e:	77 fd       	sbrc	r23, 7
 b80:	08 d0       	rcall	.+16     	; 0xb92 <__divmodhi4_neg2>
 b82:	0b d0       	rcall	.+22     	; 0xb9a <__udivmodhi4>
 b84:	07 fc       	sbrc	r0, 7
 b86:	05 d0       	rcall	.+10     	; 0xb92 <__divmodhi4_neg2>
 b88:	3e f4       	brtc	.+14     	; 0xb98 <__divmodhi4_exit>

00000b8a <__divmodhi4_neg1>:
 b8a:	90 95       	com	r25
 b8c:	81 95       	neg	r24
 b8e:	9f 4f       	sbci	r25, 0xFF	; 255
 b90:	08 95       	ret

00000b92 <__divmodhi4_neg2>:
 b92:	70 95       	com	r23
 b94:	61 95       	neg	r22
 b96:	7f 4f       	sbci	r23, 0xFF	; 255

00000b98 <__divmodhi4_exit>:
 b98:	08 95       	ret

00000b9a <__udivmodhi4>:
 b9a:	aa 1b       	sub	r26, r26
 b9c:	bb 1b       	sub	r27, r27
 b9e:	51 e1       	ldi	r21, 0x11	; 17
 ba0:	07 c0       	rjmp	.+14     	; 0xbb0 <__udivmodhi4_ep>

00000ba2 <__udivmodhi4_loop>:
 ba2:	aa 1f       	adc	r26, r26
 ba4:	bb 1f       	adc	r27, r27
 ba6:	a6 17       	cp	r26, r22
 ba8:	b7 07       	cpc	r27, r23
 baa:	10 f0       	brcs	.+4      	; 0xbb0 <__udivmodhi4_ep>
 bac:	a6 1b       	sub	r26, r22
 bae:	b7 0b       	sbc	r27, r23

00000bb0 <__udivmodhi4_ep>:
 bb0:	88 1f       	adc	r24, r24
 bb2:	99 1f       	adc	r25, r25
 bb4:	5a 95       	dec	r21
 bb6:	a9 f7       	brne	.-22     	; 0xba2 <__udivmodhi4_loop>
 bb8:	80 95       	com	r24
 bba:	90 95       	com	r25
 bbc:	bc 01       	movw	r22, r24
 bbe:	cd 01       	movw	r24, r26
 bc0:	08 95       	ret

00000bc2 <eeprom_read_dword>:
 bc2:	a6 e1       	ldi	r26, 0x16	; 22
 bc4:	b0 e0       	ldi	r27, 0x00	; 0
 bc6:	44 e0       	ldi	r20, 0x04	; 4
 bc8:	50 e0       	ldi	r21, 0x00	; 0
 bca:	0a c0       	rjmp	.+20     	; 0xbe0 <eeprom_read_blraw>

00000bcc <eeprom_write_dword>:
 bcc:	24 2f       	mov	r18, r20
 bce:	17 d0       	rcall	.+46     	; 0xbfe <eeprom_write_r18>
 bd0:	25 2f       	mov	r18, r21
 bd2:	15 d0       	rcall	.+42     	; 0xbfe <eeprom_write_r18>
 bd4:	00 c0       	rjmp	.+0      	; 0xbd6 <eeprom_write_word>

00000bd6 <eeprom_write_word>:
 bd6:	12 d0       	rcall	.+36     	; 0xbfc <eeprom_write_byte>
 bd8:	27 2f       	mov	r18, r23
 bda:	11 c0       	rjmp	.+34     	; 0xbfe <eeprom_write_r18>

00000bdc <eeprom_read_block>:
 bdc:	dc 01       	movw	r26, r24
 bde:	cb 01       	movw	r24, r22

00000be0 <eeprom_read_blraw>:
 be0:	fc 01       	movw	r30, r24
 be2:	e1 99       	sbic	0x1c, 1	; 28
 be4:	fe cf       	rjmp	.-4      	; 0xbe2 <eeprom_read_blraw+0x2>
 be6:	06 c0       	rjmp	.+12     	; 0xbf4 <eeprom_read_blraw+0x14>
 be8:	ff bb       	out	0x1f, r31	; 31
 bea:	ee bb       	out	0x1e, r30	; 30
 bec:	e0 9a       	sbi	0x1c, 0	; 28
 bee:	31 96       	adiw	r30, 0x01	; 1
 bf0:	0d b2       	in	r0, 0x1d	; 29
 bf2:	0d 92       	st	X+, r0
 bf4:	41 50       	subi	r20, 0x01	; 1
 bf6:	50 40       	sbci	r21, 0x00	; 0
 bf8:	b8 f7       	brcc	.-18     	; 0xbe8 <eeprom_read_blraw+0x8>
 bfa:	08 95       	ret

00000bfc <eeprom_write_byte>:
 bfc:	26 2f       	mov	r18, r22

00000bfe <eeprom_write_r18>:
 bfe:	e1 99       	sbic	0x1c, 1	; 28
 c00:	fe cf       	rjmp	.-4      	; 0xbfe <eeprom_write_r18>
 c02:	9f bb       	out	0x1f, r25	; 31
 c04:	8e bb       	out	0x1e, r24	; 30
 c06:	2d bb       	out	0x1d, r18	; 29
 c08:	0f b6       	in	r0, 0x3f	; 63
 c0a:	f8 94       	cli
 c0c:	e2 9a       	sbi	0x1c, 2	; 28
 c0e:	e1 9a       	sbi	0x1c, 1	; 28
 c10:	0f be       	out	0x3f, r0	; 63
 c12:	01 96       	adiw	r24, 0x01	; 1
 c14:	08 95       	ret

00000c16 <_exit>:
 c16:	f8 94       	cli

00000c18 <__stop_program>:
 c18:	ff cf       	rjmp	.-2      	; 0xc18 <__stop_program>
